<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="374.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="357" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="357" > </text>
<g id="frames">
<g >
<title>runtime.growslice (1 samples, 0.02%)</title><rect x="85.2" y="149" width="0.2" height="15.0" fill="rgb(207,26,53)" rx="2" ry="2" />
<text  x="88.19" y="159.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetPacker).PackPacket (52 samples, 1.09%)</title><rect x="125.0" y="261" width="12.9" height="15.0" fill="rgb(233,149,40)" rx="2" ry="2" />
<text  x="128.01" y="271.5" ></text>
</g>
<g >
<title>runtime.convI2I (1 samples, 0.02%)</title><rect x="88.2" y="197" width="0.2" height="15.0" fill="rgb(219,190,1)" rx="2" ry="2" />
<text  x="91.16" y="207.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (1 samples, 0.02%)</title><rect x="10.7" y="181" width="0.3" height="15.0" fill="rgb(207,42,12)" rx="2" ry="2" />
<text  x="13.74" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="91.6" y="213" width="0.3" height="15.0" fill="rgb(249,154,8)" rx="2" ry="2" />
<text  x="94.62" y="223.5" ></text>
</g>
<g >
<title>runtime.stopm (136 samples, 2.85%)</title><rect x="673.6" y="245" width="33.6" height="15.0" fill="rgb(218,217,17)" rx="2" ry="2" />
<text  x="676.58" y="255.5" >ru..</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*receiveStream).handleStreamFrameImpl (6 samples, 0.13%)</title><rect x="86.4" y="197" width="1.5" height="15.0" fill="rgb(221,143,45)" rx="2" ry="2" />
<text  x="89.42" y="207.5" ></text>
</g>
<g >
<title>runtime.mapdelete_fast64 (12 samples, 0.25%)</title><rect x="321.1" y="229" width="3.0" height="15.0" fill="rgb(205,100,30)" rx="2" ry="2" />
<text  x="324.14" y="239.5" ></text>
</g>
<g >
<title>runtime.mstart1 (11 samples, 0.23%)</title><rect x="709.2" y="293" width="2.7" height="15.0" fill="rgb(245,91,24)" rx="2" ry="2" />
<text  x="712.20" y="303.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.sizeBytes3 (1 samples, 0.02%)</title><rect x="308.3" y="165" width="0.2" height="15.0" fill="rgb(241,210,25)" rx="2" ry="2" />
<text  x="311.28" y="175.5" ></text>
</g>
<g >
<title>net.(*UDPConn).ReadFrom (273 samples, 5.72%)</title><rect x="13.5" y="293" width="67.5" height="15.0" fill="rgb(247,174,54)" rx="2" ry="2" />
<text  x="16.46" y="303.5" >net.(*U..</text>
</g>
<g >
<title>runtime.markBits.isMarked (2 samples, 0.04%)</title><rect x="326.3" y="149" width="0.5" height="15.0" fill="rgb(225,139,51)" rx="2" ry="2" />
<text  x="329.33" y="159.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/handshake.(*sealer).Seal (3 samples, 0.06%)</title><rect x="133.2" y="229" width="0.7" height="15.0" fill="rgb(231,74,47)" rx="2" ry="2" />
<text  x="136.17" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.02%)</title><rect x="255.3" y="149" width="0.3" height="15.0" fill="rgb(254,7,3)" rx="2" ry="2" />
<text  x="258.35" y="159.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1151.7" y="213" width="0.2" height="15.0" fill="rgb(238,28,36)" rx="2" ry="2" />
<text  x="1154.66" y="223.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.02%)</title><rect x="608.5" y="197" width="0.3" height="15.0" fill="rgb(218,117,45)" rx="2" ry="2" />
<text  x="611.53" y="207.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.02%)</title><rect x="85.2" y="117" width="0.2" height="15.0" fill="rgb(239,113,39)" rx="2" ry="2" />
<text  x="88.19" y="127.5" ></text>
</g>
<g >
<title>memeqbody (2 samples, 0.04%)</title><rect x="139.6" y="149" width="0.5" height="15.0" fill="rgb(213,129,10)" rx="2" ry="2" />
<text  x="142.60" y="159.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/flowcontrol.(*baseFlowController).AddBytesRead (1 samples, 0.02%)</title><rect x="324.1" y="245" width="0.3" height="15.0" fill="rgb(250,98,8)" rx="2" ry="2" />
<text  x="327.11" y="255.5" ></text>
</g>
<g >
<title>time.now (6 samples, 0.13%)</title><rect x="130.9" y="181" width="1.5" height="15.0" fill="rgb(252,127,45)" rx="2" ry="2" />
<text  x="133.94" y="191.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*frameParser).parseFrame (2 samples, 0.04%)</title><rect x="88.9" y="229" width="0.5" height="15.0" fill="rgb(228,15,41)" rx="2" ry="2" />
<text  x="91.90" y="239.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/examples/example/pb/service.(*ArithResponse).XXX_Marshal (2 samples, 0.04%)</title><rect x="317.2" y="197" width="0.5" height="15.0" fill="rgb(222,108,53)" rx="2" ry="2" />
<text  x="320.18" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*receiveStream).dequeueNextFrame (13 samples, 0.27%)</title><rect x="320.9" y="261" width="3.2" height="15.0" fill="rgb(231,34,41)" rx="2" ry="2" />
<text  x="323.89" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*StreamFrame).Length (1 samples, 0.02%)</title><rect x="134.9" y="229" width="0.2" height="15.0" fill="rgb(212,151,42)" rx="2" ry="2" />
<text  x="137.90" y="239.5" ></text>
</g>
<g >
<title>runtime.mcall (1 samples, 0.02%)</title><rect x="346.9" y="293" width="0.2" height="15.0" fill="rgb(206,112,5)" rx="2" ry="2" />
<text  x="349.86" y="303.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).sendPackedPacket (10 samples, 0.21%)</title><rect x="256.1" y="261" width="2.5" height="15.0" fill="rgb(226,206,13)" rx="2" ry="2" />
<text  x="259.09" y="271.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.02%)</title><rect x="351.6" y="101" width="0.2" height="15.0" fill="rgb(205,133,27)" rx="2" ry="2" />
<text  x="354.56" y="111.5" ></text>
</g>
<g >
<title>runtime.kevent (202 samples, 4.23%)</title><rect x="613.0" y="229" width="49.9" height="15.0" fill="rgb(224,70,7)" rx="2" ry="2" />
<text  x="615.98" y="239.5" >runti..</text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.02%)</title><rect x="124.8" y="245" width="0.2" height="15.0" fill="rgb(243,28,35)" rx="2" ry="2" />
<text  x="127.76" y="255.5" ></text>
</g>
<g >
<title>reflect.Value.Type (4 samples, 0.08%)</title><rect x="315.7" y="213" width="1.0" height="15.0" fill="rgb(241,122,11)" rx="2" ry="2" />
<text  x="318.70" y="223.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.02%)</title><rect x="1151.9" y="197" width="0.3" height="15.0" fill="rgb(229,197,48)" rx="2" ry="2" />
<text  x="1154.91" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (2 samples, 0.04%)</title><rect x="710.9" y="213" width="0.5" height="15.0" fill="rgb(215,186,44)" rx="2" ry="2" />
<text  x="713.93" y="223.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Marshal (2 samples, 0.04%)</title><rect x="305.6" y="229" width="0.5" height="15.0" fill="rgb(248,45,21)" rx="2" ry="2" />
<text  x="308.56" y="239.5" ></text>
</g>
<g >
<title>runtime.handoffp (1,778 samples, 37.27%)</title><rect x="711.9" y="261" width="439.8" height="15.0" fill="rgb(235,56,20)" rx="2" ry="2" />
<text  x="714.92" y="271.5" >runtime.handoffp</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*receiveStream).signalRead (1 samples, 0.02%)</title><rect x="86.9" y="181" width="0.3" height="15.0" fill="rgb(220,118,0)" rx="2" ry="2" />
<text  x="89.92" y="191.5" ></text>
</g>
<g >
<title>time.Now (1 samples, 0.02%)</title><rect x="254.1" y="245" width="0.3" height="15.0" fill="rgb(235,10,39)" rx="2" ry="2" />
<text  x="257.11" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (2 samples, 0.04%)</title><rect x="18.4" y="165" width="0.5" height="15.0" fill="rgb(232,114,50)" rx="2" ry="2" />
<text  x="21.41" y="175.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.02%)</title><rect x="13.2" y="245" width="0.3" height="15.0" fill="rgb(231,140,54)" rx="2" ry="2" />
<text  x="16.22" y="255.5" ></text>
</g>
<g >
<title>runtime.acquirep (1 samples, 0.02%)</title><rect x="610.5" y="245" width="0.3" height="15.0" fill="rgb(234,43,33)" rx="2" ry="2" />
<text  x="613.51" y="255.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.(*Request).Decode (2 samples, 0.04%)</title><rect x="306.8" y="245" width="0.5" height="15.0" fill="rgb(216,38,30)" rx="2" ry="2" />
<text  x="309.79" y="255.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepare (1 samples, 0.02%)</title><rect x="160.4" y="149" width="0.2" height="15.0" fill="rgb(220,76,14)" rx="2" ry="2" />
<text  x="163.38" y="159.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeue (1 samples, 0.02%)</title><rect x="324.8" y="245" width="0.3" height="15.0" fill="rgb(246,179,45)" rx="2" ry="2" />
<text  x="327.85" y="255.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeueSudoG (152 samples, 3.19%)</title><rect x="260.3" y="277" width="37.6" height="15.0" fill="rgb(223,91,30)" rx="2" ry="2" />
<text  x="263.30" y="287.5" >run..</text>
</g>
<g >
<title>runtime.kevent (1 samples, 0.02%)</title><rect x="1155.9" y="229" width="0.2" height="15.0" fill="rgb(213,46,41)" rx="2" ry="2" />
<text  x="1158.87" y="239.5" ></text>
</g>
<g >
<title>runtime.walltime (1 samples, 0.02%)</title><rect x="254.1" y="213" width="0.3" height="15.0" fill="rgb(232,205,2)" rx="2" ry="2" />
<text  x="257.11" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.04%)</title><rect x="135.4" y="213" width="0.5" height="15.0" fill="rgb(228,187,25)" rx="2" ry="2" />
<text  x="138.40" y="223.5" ></text>
</g>
<g >
<title>runtime.newobject (6 samples, 0.13%)</title><rect x="90.1" y="245" width="1.5" height="15.0" fill="rgb(237,208,22)" rx="2" ry="2" />
<text  x="93.13" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*uniStreamSender).onHasStreamData (6 samples, 0.13%)</title><rect x="343.6" y="277" width="1.5" height="15.0" fill="rgb(220,223,24)" rx="2" ry="2" />
<text  x="346.64" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.04%)</title><rect x="126.0" y="149" width="0.5" height="15.0" fill="rgb(224,146,4)" rx="2" ry="2" />
<text  x="129.00" y="159.5" ></text>
</g>
<g >
<title>bytes.NewReader (6 samples, 0.13%)</title><rect x="90.1" y="261" width="1.5" height="15.0" fill="rgb(205,19,40)" rx="2" ry="2" />
<text  x="93.13" y="271.5" ></text>
</g>
<g >
<title>reflect.Value.Type (2 samples, 0.04%)</title><rect x="312.5" y="213" width="0.5" height="15.0" fill="rgb(247,114,13)" rx="2" ry="2" />
<text  x="315.48" y="223.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*marshalInfo).marshal (3 samples, 0.06%)</title><rect x="307.5" y="181" width="0.8" height="15.0" fill="rgb(210,18,8)" rx="2" ry="2" />
<text  x="310.54" y="191.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.02%)</title><rect x="18.7" y="69" width="0.2" height="15.0" fill="rgb(234,34,35)" rx="2" ry="2" />
<text  x="21.66" y="79.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.02%)</title><rect x="1156.1" y="213" width="0.3" height="15.0" fill="rgb(240,89,21)" rx="2" ry="2" />
<text  x="1159.12" y="223.5" ></text>
</g>
<g >
<title>runtime.newstack (3 samples, 0.06%)</title><rect x="708.5" y="293" width="0.7" height="15.0" fill="rgb(216,109,29)" rx="2" ry="2" />
<text  x="711.45" y="303.5" ></text>
</g>
<g >
<title>runtime.duffcopy (1 samples, 0.02%)</title><rect x="255.1" y="181" width="0.2" height="15.0" fill="rgb(209,84,2)" rx="2" ry="2" />
<text  x="258.10" y="191.5" ></text>
</g>
<g >
<title>runtime.selunlock (2 samples, 0.04%)</title><rect x="298.9" y="277" width="0.5" height="15.0" fill="rgb(233,128,14)" rx="2" ry="2" />
<text  x="301.88" y="287.5" ></text>
</g>
<g >
<title>runtime.chansend (3 samples, 0.06%)</title><rect x="324.8" y="261" width="0.8" height="15.0" fill="rgb(226,59,44)" rx="2" ry="2" />
<text  x="327.85" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mspan).markBitsForIndex (1 samples, 0.02%)</title><rect x="355.8" y="213" width="0.2" height="15.0" fill="rgb(248,156,22)" rx="2" ry="2" />
<text  x="358.76" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*frameParser).ParseNext (2 samples, 0.04%)</title><rect x="88.9" y="245" width="0.5" height="15.0" fill="rgb(249,74,11)" rx="2" ry="2" />
<text  x="91.90" y="255.5" ></text>
</g>
<g >
<title>runtime.findObject (2 samples, 0.04%)</title><rect x="352.3" y="117" width="0.5" height="15.0" fill="rgb(230,175,41)" rx="2" ry="2" />
<text  x="355.30" y="127.5" ></text>
</g>
<g >
<title>runtime.timerproc (94 samples, 1.97%)</title><rect x="1166.8" y="309" width="23.2" height="15.0" fill="rgb(244,127,44)" rx="2" ry="2" />
<text  x="1169.75" y="319.5" >r..</text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.02%)</title><rect x="124.8" y="117" width="0.2" height="15.0" fill="rgb(216,134,48)" rx="2" ry="2" />
<text  x="127.76" y="127.5" ></text>
</g>
<g >
<title>runtime.newobject (10 samples, 0.21%)</title><rect x="303.1" y="261" width="2.5" height="15.0" fill="rgb(207,90,13)" rx="2" ry="2" />
<text  x="306.08" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (2 samples, 0.04%)</title><rect x="18.4" y="133" width="0.5" height="15.0" fill="rgb(210,216,18)" rx="2" ry="2" />
<text  x="21.41" y="143.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.02%)</title><rect x="708.2" y="245" width="0.3" height="15.0" fill="rgb(214,76,45)" rx="2" ry="2" />
<text  x="711.21" y="255.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.02%)</title><rect x="302.8" y="229" width="0.3" height="15.0" fill="rgb(245,169,19)" rx="2" ry="2" />
<text  x="305.84" y="239.5" ></text>
</g>
<g >
<title>runtime.mcall (1,423 samples, 29.83%)</title><rect x="356.5" y="309" width="352.0" height="15.0" fill="rgb(222,176,32)" rx="2" ry="2" />
<text  x="359.51" y="319.5" >runtime.mcall</text>
</g>
<g >
<title>runtime.mallocgc (6 samples, 0.13%)</title><rect x="90.1" y="229" width="1.5" height="15.0" fill="rgb(210,96,53)" rx="2" ry="2" />
<text  x="93.13" y="239.5" ></text>
</g>
<g >
<title>runtime.acquireSudog (2 samples, 0.04%)</title><rect x="297.9" y="277" width="0.5" height="15.0" fill="rgb(205,56,40)" rx="2" ry="2" />
<text  x="300.89" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (1 samples, 0.02%)</title><rect x="124.8" y="101" width="0.2" height="15.0" fill="rgb(236,199,20)" rx="2" ry="2" />
<text  x="127.76" y="111.5" ></text>
</g>
<g >
<title>runtime.systemstack (22 samples, 0.46%)</title><rect x="351.1" y="293" width="5.4" height="15.0" fill="rgb(225,137,6)" rx="2" ry="2" />
<text  x="354.06" y="303.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.02%)</title><rect x="308.5" y="197" width="0.3" height="15.0" fill="rgb(228,43,4)" rx="2" ry="2" />
<text  x="311.52" y="207.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.ArgsDecode (1 samples, 0.02%)</title><rect x="316.7" y="229" width="0.2" height="15.0" fill="rgb(213,126,22)" rx="2" ry="2" />
<text  x="319.69" y="239.5" ></text>
</g>
<g >
<title>runtime.assertI2I2 (1 samples, 0.02%)</title><rect x="308.5" y="213" width="0.3" height="15.0" fill="rgb(225,9,18)" rx="2" ry="2" />
<text  x="311.52" y="223.5" ></text>
</g>
<g >
<title>runtime.resolveTypeOff (1 samples, 0.02%)</title><rect x="316.4" y="149" width="0.3" height="15.0" fill="rgb(239,89,46)" rx="2" ry="2" />
<text  x="319.44" y="159.5" ></text>
</g>
<g >
<title>syscall.anyToSockaddr (77 samples, 1.61%)</title><rect x="17.2" y="213" width="19.0" height="15.0" fill="rgb(212,63,9)" rx="2" ry="2" />
<text  x="20.17" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.init.0.func1 (1 samples, 0.02%)</title><rect x="13.2" y="261" width="0.3" height="15.0" fill="rgb(230,5,45)" rx="2" ry="2" />
<text  x="16.22" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="84.0" y="197" width="0.2" height="15.0" fill="rgb(254,120,54)" rx="2" ry="2" />
<text  x="86.95" y="207.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.02%)</title><rect x="122.3" y="229" width="0.2" height="15.0" fill="rgb(234,120,25)" rx="2" ry="2" />
<text  x="125.29" y="239.5" ></text>
</g>
<g >
<title>time.Time.IsZero (1 samples, 0.02%)</title><rect x="123.5" y="277" width="0.3" height="15.0" fill="rgb(228,128,28)" rx="2" ry="2" />
<text  x="126.52" y="287.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwlock (24 samples, 0.50%)</title><rect x="153.7" y="149" width="5.9" height="15.0" fill="rgb(233,85,26)" rx="2" ry="2" />
<text  x="156.70" y="159.5" ></text>
</g>
<g >
<title>reflect.Value.Interface (1 samples, 0.02%)</title><rect x="315.4" y="213" width="0.3" height="15.0" fill="rgb(238,67,8)" rx="2" ry="2" />
<text  x="318.45" y="223.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (2 samples, 0.04%)</title><rect x="1166.3" y="245" width="0.5" height="15.0" fill="rgb(254,213,46)" rx="2" ry="2" />
<text  x="1169.26" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.02%)</title><rect x="124.8" y="213" width="0.2" height="15.0" fill="rgb(237,166,29)" rx="2" ry="2" />
<text  x="127.76" y="223.5" ></text>
</g>
<g >
<title>runtime.nanotime (11 samples, 0.23%)</title><rect x="1167.0" y="293" width="2.7" height="15.0" fill="rgb(222,97,35)" rx="2" ry="2" />
<text  x="1170.00" y="303.5" ></text>
</g>
<g >
<title>runtime.goparkunlock (1 samples, 0.02%)</title><rect x="346.6" y="261" width="0.3" height="15.0" fill="rgb(207,98,12)" rx="2" ry="2" />
<text  x="349.61" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (2 samples, 0.04%)</title><rect x="18.4" y="117" width="0.5" height="15.0" fill="rgb(221,139,25)" rx="2" ry="2" />
<text  x="21.41" y="127.5" ></text>
</g>
<g >
<title>runtime.(*timersBucket).addtimerLocked (121 samples, 2.54%)</title><rect x="92.1" y="213" width="29.9" height="15.0" fill="rgb(231,187,50)" rx="2" ry="2" />
<text  x="95.11" y="223.5" >ru..</text>
</g>
<g >
<title>github.com/golang/protobuf/proto.unmarshalUTF8StringValue (1 samples, 0.02%)</title><rect x="306.8" y="165" width="0.2" height="15.0" fill="rgb(205,212,24)" rx="2" ry="2" />
<text  x="309.79" y="175.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock_handoff (1 samples, 0.02%)</title><rect x="258.1" y="85" width="0.2" height="15.0" fill="rgb(250,4,25)" rx="2" ry="2" />
<text  x="261.07" y="95.5" ></text>
</g>
<g >
<title>runtime.mallocgc (72 samples, 1.51%)</title><rect x="18.4" y="181" width="17.8" height="15.0" fill="rgb(250,59,24)" rx="2" ry="2" />
<text  x="21.41" y="191.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.02%)</title><rect x="160.6" y="165" width="0.3" height="15.0" fill="rgb(252,126,45)" rx="2" ry="2" />
<text  x="163.62" y="175.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Marshal (5 samples, 0.10%)</title><rect x="307.5" y="229" width="1.3" height="15.0" fill="rgb(250,30,50)" rx="2" ry="2" />
<text  x="310.54" y="239.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.02%)</title><rect x="708.2" y="229" width="0.3" height="15.0" fill="rgb(212,35,9)" rx="2" ry="2" />
<text  x="711.21" y="239.5" ></text>
</g>
<g >
<title>runtime.scanobject (12 samples, 0.25%)</title><rect x="353.5" y="245" width="3.0" height="15.0" fill="rgb(244,74,27)" rx="2" ry="2" />
<text  x="356.54" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*receivedPacketHandler).ReceivedPacket (2 samples, 0.04%)</title><rect x="88.4" y="245" width="0.5" height="15.0" fill="rgb(253,227,30)" rx="2" ry="2" />
<text  x="91.40" y="255.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.02%)</title><rect x="345.4" y="245" width="0.2" height="15.0" fill="rgb(229,34,2)" rx="2" ry="2" />
<text  x="348.38" y="255.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (1 samples, 0.02%)</title><rect x="708.2" y="261" width="0.3" height="15.0" fill="rgb(238,140,19)" rx="2" ry="2" />
<text  x="711.21" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.02%)</title><rect x="13.2" y="165" width="0.3" height="15.0" fill="rgb(225,109,27)" rx="2" ry="2" />
<text  x="16.22" y="175.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="124.8" y="229" width="0.2" height="15.0" fill="rgb(205,172,22)" rx="2" ry="2" />
<text  x="127.76" y="239.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeueSudoG (3 samples, 0.06%)</title><rect x="319.4" y="277" width="0.7" height="15.0" fill="rgb(243,116,11)" rx="2" ry="2" />
<text  x="322.41" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.04%)</title><rect x="12.5" y="261" width="0.5" height="15.0" fill="rgb(243,69,50)" rx="2" ry="2" />
<text  x="15.47" y="271.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (1 samples, 0.02%)</title><rect x="351.6" y="117" width="0.2" height="15.0" fill="rgb(215,126,2)" rx="2" ry="2" />
<text  x="354.56" y="127.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.ParseConnectionID (1 samples, 0.02%)</title><rect x="11.2" y="277" width="0.3" height="15.0" fill="rgb(235,18,23)" rx="2" ry="2" />
<text  x="14.24" y="287.5" ></text>
</g>
<g >
<title>reflect.(*rtype).typeOff (2 samples, 0.04%)</title><rect x="316.2" y="197" width="0.5" height="15.0" fill="rgb(216,226,13)" rx="2" ry="2" />
<text  x="319.19" y="207.5" ></text>
</g>
<g >
<title>runtime.lock (2 samples, 0.04%)</title><rect x="320.4" y="261" width="0.5" height="15.0" fill="rgb(207,118,3)" rx="2" ry="2" />
<text  x="323.40" y="271.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.02%)</title><rect x="1166.8" y="277" width="0.2" height="15.0" fill="rgb(244,157,29)" rx="2" ry="2" />
<text  x="1169.75" y="287.5" ></text>
</g>
<g >
<title>runtime.gcDrain (2 samples, 0.04%)</title><rect x="1151.9" y="261" width="0.5" height="15.0" fill="rgb(242,7,34)" rx="2" ry="2" />
<text  x="1154.91" y="271.5" ></text>
</g>
<g >
<title>reflect.resolveTypeOff (1 samples, 0.02%)</title><rect x="312.7" y="181" width="0.3" height="15.0" fill="rgb(253,40,27)" rx="2" ry="2" />
<text  x="315.73" y="191.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.02%)</title><rect x="10.7" y="149" width="0.3" height="15.0" fill="rgb(215,81,50)" rx="2" ry="2" />
<text  x="13.74" y="159.5" ></text>
</g>
<g >
<title>net.ipToSockaddr (6 samples, 0.13%)</title><rect x="139.1" y="181" width="1.5" height="15.0" fill="rgb(219,216,15)" rx="2" ry="2" />
<text  x="142.11" y="191.5" ></text>
</g>
<g >
<title>runtime.selectgo (7 samples, 0.15%)</title><rect x="319.2" y="293" width="1.7" height="15.0" fill="rgb(238,92,47)" rx="2" ry="2" />
<text  x="322.16" y="303.5" ></text>
</g>
<g >
<title>runtime.newobject (72 samples, 1.51%)</title><rect x="18.4" y="197" width="17.8" height="15.0" fill="rgb(218,120,44)" rx="2" ry="2" />
<text  x="21.41" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpanLocked (1 samples, 0.02%)</title><rect x="124.8" y="85" width="0.2" height="15.0" fill="rgb(250,92,25)" rx="2" ry="2" />
<text  x="127.76" y="95.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="85.2" y="133" width="0.2" height="15.0" fill="rgb(238,6,16)" rx="2" ry="2" />
<text  x="88.19" y="143.5" ></text>
</g>
<g >
<title>runtime.nanotime (7 samples, 0.15%)</title><rect x="709.2" y="261" width="1.7" height="15.0" fill="rgb(218,161,44)" rx="2" ry="2" />
<text  x="712.20" y="271.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).waitRead (1 samples, 0.02%)</title><rect x="14.2" y="229" width="0.3" height="15.0" fill="rgb(242,211,39)" rx="2" ry="2" />
<text  x="17.20" y="239.5" ></text>
</g>
<g >
<title>runtime.aeshashbody (1 samples, 0.02%)</title><rect x="315.0" y="149" width="0.2" height="15.0" fill="rgb(245,218,41)" rx="2" ry="2" />
<text  x="317.95" y="159.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).PeekPacketNumber (1 samples, 0.02%)</title><rect x="129.5" y="229" width="0.2" height="15.0" fill="rgb(211,1,4)" rx="2" ry="2" />
<text  x="132.46" y="239.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (4 samples, 0.08%)</title><rect x="80.0" y="181" width="1.0" height="15.0" fill="rgb(230,205,14)" rx="2" ry="2" />
<text  x="82.99" y="191.5" ></text>
</g>
<g >
<title>runtime.jmpdefer (1 samples, 0.02%)</title><rect x="89.6" y="261" width="0.3" height="15.0" fill="rgb(252,128,53)" rx="2" ry="2" />
<text  x="92.64" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.04%)</title><rect x="140.1" y="149" width="0.5" height="15.0" fill="rgb(252,160,1)" rx="2" ry="2" />
<text  x="143.09" y="159.5" ></text>
</g>
<g >
<title>runtime.sysmon (11 samples, 0.23%)</title><rect x="709.2" y="277" width="2.7" height="15.0" fill="rgb(221,77,37)" rx="2" ry="2" />
<text  x="712.20" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (4 samples, 0.08%)</title><rect x="129.7" y="181" width="1.0" height="15.0" fill="rgb(248,208,36)" rx="2" ry="2" />
<text  x="132.71" y="191.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1,777 samples, 37.25%)</title><rect x="712.2" y="229" width="439.5" height="15.0" fill="rgb(238,73,1)" rx="2" ry="2" />
<text  x="715.16" y="239.5" >runtime.notewakeup</text>
</g>
<g >
<title>internal/bytealg.Equal (1 samples, 0.02%)</title><rect x="139.4" y="149" width="0.2" height="15.0" fill="rgb(227,111,31)" rx="2" ry="2" />
<text  x="142.35" y="159.5" ></text>
</g>
<g >
<title>runtime.send (2 samples, 0.04%)</title><rect x="10.5" y="229" width="0.5" height="15.0" fill="rgb(245,46,14)" rx="2" ry="2" />
<text  x="13.49" y="239.5" ></text>
</g>
<g >
<title>runtime.handoffp (1 samples, 0.02%)</title><rect x="1170.5" y="229" width="0.2" height="15.0" fill="rgb(235,4,46)" rx="2" ry="2" />
<text  x="1173.46" y="239.5" ></text>
</g>
<g >
<title>crypto/aes.encryptBlockAsm (1 samples, 0.02%)</title><rect x="82.5" y="213" width="0.2" height="15.0" fill="rgb(220,111,18)" rx="2" ry="2" />
<text  x="85.47" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="127.5" y="165" width="0.2" height="15.0" fill="rgb(247,31,4)" rx="2" ry="2" />
<text  x="130.48" y="175.5" ></text>
</g>
<g >
<title>runtime.stopm (938 samples, 19.66%)</title><rect x="376.3" y="277" width="232.0" height="15.0" fill="rgb(207,204,32)" rx="2" ry="2" />
<text  x="379.29" y="287.5" >runtime.stopm</text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.02%)</title><rect x="326.1" y="165" width="0.2" height="15.0" fill="rgb(240,56,38)" rx="2" ry="2" />
<text  x="329.08" y="175.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (4 samples, 0.08%)</title><rect x="80.0" y="165" width="1.0" height="15.0" fill="rgb(207,92,6)" rx="2" ry="2" />
<text  x="82.99" y="175.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.(*Response).Encode (6 samples, 0.13%)</title><rect x="307.3" y="245" width="1.5" height="15.0" fill="rgb(254,116,14)" rx="2" ry="2" />
<text  x="310.29" y="255.5" ></text>
</g>
<g >
<title>runtime.forEachP (1 samples, 0.02%)</title><rect x="1156.4" y="261" width="0.2" height="15.0" fill="rgb(250,152,27)" rx="2" ry="2" />
<text  x="1159.36" y="271.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (3 samples, 0.06%)</title><rect x="708.5" y="277" width="0.7" height="15.0" fill="rgb(225,184,3)" rx="2" ry="2" />
<text  x="711.45" y="287.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (2 samples, 0.04%)</title><rect x="356.0" y="213" width="0.5" height="15.0" fill="rgb(213,78,36)" rx="2" ry="2" />
<text  x="359.01" y="223.5" ></text>
</g>
<g >
<title>time.(*Timer).Reset (123 samples, 2.58%)</title><rect x="92.1" y="261" width="30.4" height="15.0" fill="rgb(214,117,50)" rx="2" ry="2" />
<text  x="95.11" y="271.5" >ti..</text>
</g>
<g >
<title>crypto/aes.gcmAesData (1 samples, 0.02%)</title><rect x="82.7" y="197" width="0.3" height="15.0" fill="rgb(231,82,19)" rx="2" ry="2" />
<text  x="85.71" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).handleSinglePacket (31 samples, 0.65%)</title><rect x="82.2" y="277" width="7.7" height="15.0" fill="rgb(217,130,39)" rx="2" ry="2" />
<text  x="85.22" y="287.5" ></text>
</g>
<g >
<title>runtime.findrunnable (69 samples, 1.45%)</title><rect x="358.7" y="261" width="17.1" height="15.0" fill="rgb(226,209,19)" rx="2" ry="2" />
<text  x="361.73" y="271.5" ></text>
</g>
<g >
<title>runtime.runqsteal (43 samples, 0.90%)</title><rect x="662.9" y="245" width="10.7" height="15.0" fill="rgb(243,24,26)" rx="2" ry="2" />
<text  x="665.94" y="255.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.02%)</title><rect x="11.0" y="229" width="0.2" height="15.0" fill="rgb(242,179,45)" rx="2" ry="2" />
<text  x="13.99" y="239.5" ></text>
</g>
<g >
<title>runtime.wakep (2 samples, 0.04%)</title><rect x="375.8" y="245" width="0.5" height="15.0" fill="rgb(228,110,22)" rx="2" ry="2" />
<text  x="378.80" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*streamsMap).GetOrOpenSendStream (1 samples, 0.02%)</title><rect x="126.7" y="213" width="0.3" height="15.0" fill="rgb(214,122,39)" rx="2" ry="2" />
<text  x="129.74" y="223.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.02%)</title><rect x="711.9" y="197" width="0.3" height="15.0" fill="rgb(229,202,1)" rx="2" ry="2" />
<text  x="714.92" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (1,839 samples, 38.55%)</title><rect x="711.9" y="293" width="454.9" height="15.0" fill="rgb(227,188,27)" rx="2" ry="2" />
<text  x="714.92" y="303.5" >runtime.systemstack</text>
</g>
<g >
<title>crypto/aes.encryptBlockAsm (2 samples, 0.04%)</title><rect x="133.2" y="181" width="0.5" height="15.0" fill="rgb(219,36,5)" rx="2" ry="2" />
<text  x="136.17" y="191.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*receivedPacketHandler).GetAckFrame (6 samples, 0.13%)</title><rect x="130.9" y="229" width="1.5" height="15.0" fill="rgb(206,179,30)" rx="2" ry="2" />
<text  x="133.94" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_lock_trampoline (1 samples, 0.02%)</title><rect x="349.1" y="293" width="0.2" height="15.0" fill="rgb(215,75,7)" rx="2" ry="2" />
<text  x="352.09" y="303.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock (5 samples, 0.10%)</title><rect x="78.8" y="181" width="1.2" height="15.0" fill="rgb(205,160,34)" rx="2" ry="2" />
<text  x="81.76" y="191.5" ></text>
</g>
<g >
<title>runtime.getStackMap (2 samples, 0.04%)</title><rect x="351.3" y="133" width="0.5" height="15.0" fill="rgb(237,100,34)" rx="2" ry="2" />
<text  x="354.31" y="143.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.appendBytes3 (2 samples, 0.04%)</title><rect x="307.8" y="165" width="0.5" height="15.0" fill="rgb(237,139,49)" rx="2" ry="2" />
<text  x="310.78" y="175.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Unmarshal (1 samples, 0.02%)</title><rect x="306.8" y="197" width="0.2" height="15.0" fill="rgb(241,23,12)" rx="2" ry="2" />
<text  x="309.79" y="207.5" ></text>
</g>
<g >
<title>runtime.bgsweep (7 samples, 0.15%)</title><rect x="349.3" y="309" width="1.8" height="15.0" fill="rgb(250,224,5)" rx="2" ry="2" />
<text  x="352.33" y="319.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Marshal (3 samples, 0.06%)</title><rect x="307.5" y="197" width="0.8" height="15.0" fill="rgb(232,180,6)" rx="2" ry="2" />
<text  x="310.54" y="207.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (6 samples, 0.13%)</title><rect x="325.6" y="213" width="1.5" height="15.0" fill="rgb(252,13,46)" rx="2" ry="2" />
<text  x="328.59" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).handlePacketImpl (39 samples, 0.82%)</title><rect x="82.2" y="293" width="9.7" height="15.0" fill="rgb(250,22,17)" rx="2" ry="2" />
<text  x="85.22" y="303.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast_pidle (1 samples, 0.02%)</title><rect x="1151.7" y="261" width="0.2" height="15.0" fill="rgb(210,13,16)" rx="2" ry="2" />
<text  x="1154.66" y="271.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*unmarshalInfo).unmarshal (1 samples, 0.02%)</title><rect x="306.8" y="181" width="0.2" height="15.0" fill="rgb(205,137,19)" rx="2" ry="2" />
<text  x="309.79" y="191.5" ></text>
</g>
<g >
<title>reflect.(*rtype).exportedMethods (2 samples, 0.04%)</title><rect x="315.7" y="197" width="0.5" height="15.0" fill="rgb(218,145,14)" rx="2" ry="2" />
<text  x="318.70" y="207.5" ></text>
</g>
<g >
<title>runtime.chansend (1 samples, 0.02%)</title><rect x="86.9" y="149" width="0.3" height="15.0" fill="rgb(214,106,53)" rx="2" ry="2" />
<text  x="89.92" y="159.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.02%)</title><rect x="140.3" y="133" width="0.3" height="15.0" fill="rgb(252,41,49)" rx="2" ry="2" />
<text  x="143.34" y="143.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (1 samples, 0.02%)</title><rect x="1151.9" y="229" width="0.3" height="15.0" fill="rgb(233,220,33)" rx="2" ry="2" />
<text  x="1154.91" y="239.5" ></text>
</g>
<g >
<title>runtime.greyobject (2 samples, 0.04%)</title><rect x="326.3" y="165" width="0.5" height="15.0" fill="rgb(251,120,45)" rx="2" ry="2" />
<text  x="329.33" y="175.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).WriteTo (457 samples, 9.58%)</title><rect x="140.6" y="181" width="113.0" height="15.0" fill="rgb(208,210,14)" rx="2" ry="2" />
<text  x="143.59" y="191.5" >internal/poll..</text>
</g>
<g >
<title>crypto/aes.(*aesCipherAsm).Encrypt (1 samples, 0.02%)</title><rect x="132.9" y="213" width="0.3" height="15.0" fill="rgb(238,223,31)" rx="2" ry="2" />
<text  x="135.92" y="223.5" ></text>
</g>
<g >
<title>runtime.freedefer (2 samples, 0.04%)</title><rect x="11.5" y="261" width="0.5" height="15.0" fill="rgb(225,0,53)" rx="2" ry="2" />
<text  x="14.48" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="125.5" y="85" width="0.2" height="15.0" fill="rgb(252,135,50)" rx="2" ry="2" />
<text  x="128.50" y="95.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*receivedPacketHistory).GetAckRanges (1 samples, 0.02%)</title><rect x="127.5" y="197" width="0.2" height="15.0" fill="rgb(250,175,25)" rx="2" ry="2" />
<text  x="130.48" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetPacker).composeNextPacket (18 samples, 0.38%)</title><rect x="125.0" y="245" width="4.5" height="15.0" fill="rgb(207,210,7)" rx="2" ry="2" />
<text  x="128.01" y="255.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.ServeQUICConn (82 samples, 1.72%)</title><rect x="300.6" y="309" width="20.3" height="15.0" fill="rgb(245,89,10)" rx="2" ry="2" />
<text  x="303.61" y="319.5" ></text>
</g>
<g >
<title>runtime.aeshash64 (12 samples, 0.25%)</title><rect x="321.1" y="213" width="3.0" height="15.0" fill="rgb(229,41,4)" rx="2" ry="2" />
<text  x="324.14" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*sendStream).getDataForWriting (5 samples, 0.10%)</title><rect x="125.3" y="181" width="1.2" height="15.0" fill="rgb(219,21,18)" rx="2" ry="2" />
<text  x="128.25" y="191.5" ></text>
</g>
<g >
<title>runtime.exitsyscall0 (1,018 samples, 21.34%)</title><rect x="356.5" y="293" width="251.8" height="15.0" fill="rgb(230,3,44)" rx="2" ry="2" />
<text  x="359.51" y="303.5" >runtime.exitsyscall0</text>
</g>
<g >
<title>runtime.netpollcheckerr (1 samples, 0.02%)</title><rect x="14.2" y="165" width="0.3" height="15.0" fill="rgb(205,46,23)" rx="2" ry="2" />
<text  x="17.20" y="175.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*unmarshalInfo).unmarshal (3 samples, 0.06%)</title><rect x="302.1" y="213" width="0.7" height="15.0" fill="rgb(239,120,9)" rx="2" ry="2" />
<text  x="305.09" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*receivedPacketTracker).GetAckFrame (8 samples, 0.17%)</title><rect x="127.2" y="213" width="2.0" height="15.0" fill="rgb(253,29,26)" rx="2" ry="2" />
<text  x="130.23" y="223.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.02%)</title><rect x="89.1" y="197" width="0.3" height="15.0" fill="rgb(207,86,7)" rx="2" ry="2" />
<text  x="92.14" y="207.5" ></text>
</g>
<g >
<title>runtime.chansend1 (1 samples, 0.02%)</title><rect x="318.9" y="293" width="0.3" height="15.0" fill="rgb(209,222,41)" rx="2" ry="2" />
<text  x="321.91" y="303.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.02%)</title><rect x="608.3" y="261" width="0.2" height="15.0" fill="rgb(211,228,20)" rx="2" ry="2" />
<text  x="611.29" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).sentPacketImpl (2 samples, 0.04%)</title><rect x="254.6" y="245" width="0.5" height="15.0" fill="rgb(213,199,32)" rx="2" ry="2" />
<text  x="257.61" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.02%)</title><rect x="318.2" y="197" width="0.2" height="15.0" fill="rgb(245,118,21)" rx="2" ry="2" />
<text  x="321.17" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).findRunnableGCWorker (2 samples, 0.04%)</title><rect x="358.2" y="261" width="0.5" height="15.0" fill="rgb(227,49,46)" rx="2" ry="2" />
<text  x="361.24" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="1170.5" y="261" width="0.2" height="15.0" fill="rgb(248,103,29)" rx="2" ry="2" />
<text  x="1173.46" y="271.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (37 samples, 0.78%)</title><rect x="244.5" y="101" width="9.1" height="15.0" fill="rgb(230,43,14)" rx="2" ry="2" />
<text  x="247.47" y="111.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.02%)</title><rect x="711.9" y="213" width="0.3" height="15.0" fill="rgb(240,152,24)" rx="2" ry="2" />
<text  x="714.92" y="223.5" ></text>
</g>
<g >
<title>runtime.chansend1 (3 samples, 0.06%)</title><rect x="324.8" y="277" width="0.8" height="15.0" fill="rgb(224,151,9)" rx="2" ry="2" />
<text  x="327.85" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).SendMode (1 samples, 0.02%)</title><rect x="258.6" y="277" width="0.2" height="15.0" fill="rgb(243,88,14)" rx="2" ry="2" />
<text  x="261.56" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*incomingBidiStreamsMap).GetOrOpenStream (1 samples, 0.02%)</title><rect x="126.7" y="197" width="0.3" height="15.0" fill="rgb(206,76,41)" rx="2" ry="2" />
<text  x="129.74" y="207.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (7 samples, 0.15%)</title><rect x="351.3" y="149" width="1.7" height="15.0" fill="rgb(207,176,28)" rx="2" ry="2" />
<text  x="354.31" y="159.5" ></text>
</g>
<g >
<title>runtime.usleep (4 samples, 0.08%)</title><rect x="356.8" y="245" width="0.9" height="15.0" fill="rgb(245,4,39)" rx="2" ry="2" />
<text  x="359.75" y="255.5" ></text>
</g>
<g >
<title>syscall.Sendto (375 samples, 7.86%)</title><rect x="160.9" y="165" width="92.7" height="15.0" fill="rgb(217,73,9)" rx="2" ry="2" />
<text  x="163.87" y="175.5" >syscall.Sen..</text>
</g>
<g >
<title>runtime.scang (9 samples, 0.19%)</title><rect x="351.1" y="213" width="2.2" height="15.0" fill="rgb(253,52,31)" rx="2" ry="2" />
<text  x="354.06" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/handshake.(*sealer).EncryptHeader (1 samples, 0.02%)</title><rect x="132.9" y="229" width="0.3" height="15.0" fill="rgb(233,167,1)" rx="2" ry="2" />
<text  x="135.92" y="239.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (1 samples, 0.02%)</title><rect x="258.3" y="117" width="0.3" height="15.0" fill="rgb(231,128,34)" rx="2" ry="2" />
<text  x="261.32" y="127.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*AckFrame).numEncodableAckRanges (1 samples, 0.02%)</title><rect x="129.2" y="213" width="0.3" height="15.0" fill="rgb(209,62,20)" rx="2" ry="2" />
<text  x="132.21" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (5 samples, 0.10%)</title><rect x="90.4" y="197" width="1.2" height="15.0" fill="rgb(244,115,26)" rx="2" ry="2" />
<text  x="93.38" y="207.5" ></text>
</g>
<g >
<title>internal/poll.runtime_pollWait (1 samples, 0.02%)</title><rect x="14.2" y="197" width="0.3" height="15.0" fill="rgb(252,13,15)" rx="2" ry="2" />
<text  x="17.20" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*sendStream).signalWrite (1 samples, 0.02%)</title><rect x="125.5" y="165" width="0.2" height="15.0" fill="rgb(244,36,20)" rx="2" ry="2" />
<text  x="128.50" y="175.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (35 samples, 0.73%)</title><rect x="1156.6" y="181" width="8.7" height="15.0" fill="rgb(205,195,23)" rx="2" ry="2" />
<text  x="1159.61" y="191.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetPacker).getHeader (5 samples, 0.10%)</title><rect x="129.5" y="245" width="1.2" height="15.0" fill="rgb(219,53,45)" rx="2" ry="2" />
<text  x="132.46" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/flowcontrol.(*streamFlowController).UpdateHighestReceived (3 samples, 0.06%)</title><rect x="87.2" y="181" width="0.7" height="15.0" fill="rgb(241,178,13)" rx="2" ry="2" />
<text  x="90.17" y="191.5" ></text>
</g>
<g >
<title>runtime.sweepone (6 samples, 0.13%)</title><rect x="349.6" y="293" width="1.5" height="15.0" fill="rgb(212,162,17)" rx="2" ry="2" />
<text  x="352.58" y="303.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*receivedPacketTracker).ReceivedPacket (2 samples, 0.04%)</title><rect x="88.4" y="229" width="0.5" height="15.0" fill="rgb(232,203,30)" rx="2" ry="2" />
<text  x="91.40" y="239.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).dequeue (1 samples, 0.02%)</title><rect x="159.6" y="85" width="0.3" height="15.0" fill="rgb(236,86,26)" rx="2" ry="2" />
<text  x="162.63" y="95.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.02%)</title><rect x="135.6" y="197" width="0.3" height="15.0" fill="rgb(249,117,19)" rx="2" ry="2" />
<text  x="138.64" y="207.5" ></text>
</g>
<g >
<title>runtime.netpoll (205 samples, 4.30%)</title><rect x="612.2" y="245" width="50.7" height="15.0" fill="rgb(235,164,15)" rx="2" ry="2" />
<text  x="615.24" y="255.5" >runti..</text>
</g>
<g >
<title>runtime.gentraceback (8 samples, 0.17%)</title><rect x="351.1" y="181" width="1.9" height="15.0" fill="rgb(208,152,53)" rx="2" ry="2" />
<text  x="354.06" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_lock (1 samples, 0.02%)</title><rect x="1165.3" y="181" width="0.2" height="15.0" fill="rgb(212,132,23)" rx="2" ry="2" />
<text  x="1168.27" y="191.5" ></text>
</g>
<g >
<title>runtime.semawakeup (3 samples, 0.06%)</title><rect x="708.5" y="197" width="0.7" height="15.0" fill="rgb(224,30,42)" rx="2" ry="2" />
<text  x="711.45" y="207.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (1 samples, 0.02%)</title><rect x="302.8" y="213" width="0.3" height="15.0" fill="rgb(225,148,28)" rx="2" ry="2" />
<text  x="305.84" y="223.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.02%)</title><rect x="344.9" y="181" width="0.2" height="15.0" fill="rgb(229,229,0)" rx="2" ry="2" />
<text  x="347.88" y="191.5" ></text>
</g>
<g >
<title>net.(*UDPConn).writeTo (466 samples, 9.77%)</title><rect x="138.4" y="213" width="115.2" height="15.0" fill="rgb(242,69,24)" rx="2" ry="2" />
<text  x="141.36" y="223.5" >net.(*UDPConn)..</text>
</g>
<g >
<title>runtime.asmcgocall (9 samples, 0.19%)</title><rect x="347.1" y="309" width="2.2" height="15.0" fill="rgb(247,101,5)" rx="2" ry="2" />
<text  x="350.11" y="319.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.02%)</title><rect x="159.4" y="69" width="0.2" height="15.0" fill="rgb(247,206,19)" rx="2" ry="2" />
<text  x="162.39" y="79.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.02%)</title><rect x="255.3" y="133" width="0.3" height="15.0" fill="rgb(248,129,17)" rx="2" ry="2" />
<text  x="258.35" y="143.5" ></text>
</g>
<g >
<title>runtime.chansend (1 samples, 0.02%)</title><rect x="318.9" y="277" width="0.3" height="15.0" fill="rgb(253,91,52)" rx="2" ry="2" />
<text  x="321.91" y="287.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock (1 samples, 0.02%)</title><rect x="1170.5" y="277" width="0.2" height="15.0" fill="rgb(229,189,12)" rx="2" ry="2" />
<text  x="1173.46" y="287.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Marshal (2 samples, 0.04%)</title><rect x="305.6" y="261" width="0.5" height="15.0" fill="rgb(252,129,35)" rx="2" ry="2" />
<text  x="308.56" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.getPacketBuffer (1 samples, 0.02%)</title><rect x="13.2" y="293" width="0.3" height="15.0" fill="rgb(216,198,0)" rx="2" ry="2" />
<text  x="16.22" y="303.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.02%)</title><rect x="90.6" y="101" width="0.3" height="15.0" fill="rgb(248,68,1)" rx="2" ry="2" />
<text  x="93.63" y="111.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.02%)</title><rect x="318.7" y="277" width="0.2" height="15.0" fill="rgb(218,4,49)" rx="2" ry="2" />
<text  x="321.66" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/utils.VarIntLen (1 samples, 0.02%)</title><rect x="126.5" y="165" width="0.2" height="15.0" fill="rgb(218,144,25)" rx="2" ry="2" />
<text  x="129.49" y="175.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeue (1 samples, 0.02%)</title><rect x="10.2" y="229" width="0.3" height="15.0" fill="rgb(236,214,14)" rx="2" ry="2" />
<text  x="13.25" y="239.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/funcs.(*Funcs).GetFuncIn (7 samples, 0.15%)</title><rect x="315.0" y="229" width="1.7" height="15.0" fill="rgb(231,112,32)" rx="2" ry="2" />
<text  x="317.95" y="239.5" ></text>
</g>
<g >
<title>net.(*UDPAddr).sockaddr (7 samples, 0.15%)</title><rect x="138.9" y="197" width="1.7" height="15.0" fill="rgb(254,45,35)" rx="2" ry="2" />
<text  x="141.86" y="207.5" ></text>
</g>
<g >
<title>runtime.nanotime (4 samples, 0.08%)</title><rect x="611.3" y="245" width="0.9" height="15.0" fill="rgb(251,124,8)" rx="2" ry="2" />
<text  x="614.25" y="255.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/protocol.WriteStream (80 samples, 1.68%)</title><rect x="327.1" y="309" width="19.8" height="15.0" fill="rgb(253,158,54)" rx="2" ry="2" />
<text  x="330.07" y="319.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (3 samples, 0.06%)</title><rect x="708.5" y="261" width="0.7" height="15.0" fill="rgb(233,87,37)" rx="2" ry="2" />
<text  x="711.45" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).rotateLeft (1 samples, 0.02%)</title><rect x="349.3" y="197" width="0.3" height="15.0" fill="rgb(242,52,12)" rx="2" ry="2" />
<text  x="352.33" y="207.5" ></text>
</g>
<g >
<title>runtime.ready (1 samples, 0.02%)</title><rect x="125.5" y="53" width="0.2" height="15.0" fill="rgb(239,221,15)" rx="2" ry="2" />
<text  x="128.50" y="63.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).handleStreamFrame (9 samples, 0.19%)</title><rect x="86.2" y="229" width="2.2" height="15.0" fill="rgb(217,149,13)" rx="2" ry="2" />
<text  x="89.18" y="239.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.06%)</title><rect x="707.5" y="213" width="0.7" height="15.0" fill="rgb(215,164,49)" rx="2" ry="2" />
<text  x="710.46" y="223.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.02%)</title><rect x="357.7" y="261" width="0.3" height="15.0" fill="rgb(215,156,44)" rx="2" ry="2" />
<text  x="360.74" y="271.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (14 samples, 0.29%)</title><rect x="1152.4" y="197" width="3.5" height="15.0" fill="rgb(211,179,26)" rx="2" ry="2" />
<text  x="1155.41" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/handshake.(*opener).Open (2 samples, 0.04%)</title><rect x="82.7" y="245" width="0.5" height="15.0" fill="rgb(217,100,43)" rx="2" ry="2" />
<text  x="85.71" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="89.1" y="181" width="0.3" height="15.0" fill="rgb(225,71,8)" rx="2" ry="2" />
<text  x="92.14" y="191.5" ></text>
</g>
<g >
<title>runtime.funcdata (1 samples, 0.02%)</title><rect x="351.3" y="117" width="0.3" height="15.0" fill="rgb(243,216,11)" rx="2" ry="2" />
<text  x="354.31" y="127.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHistory).SentPacket (1 samples, 0.02%)</title><rect x="255.1" y="245" width="0.2" height="15.0" fill="rgb(210,177,17)" rx="2" ry="2" />
<text  x="258.10" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="128.0" y="181" width="0.2" height="15.0" fill="rgb(243,36,33)" rx="2" ry="2" />
<text  x="130.98" y="191.5" ></text>
</g>
<g >
<title>runtime.nilinterhash (1 samples, 0.02%)</title><rect x="314.7" y="181" width="0.3" height="15.0" fill="rgb(234,164,47)" rx="2" ry="2" />
<text  x="317.71" y="191.5" ></text>
</g>
<g >
<title>runtime.usleep (43 samples, 0.90%)</title><rect x="662.9" y="213" width="10.7" height="15.0" fill="rgb(250,159,37)" rx="2" ry="2" />
<text  x="665.94" y="223.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.02%)</title><rect x="316.7" y="197" width="0.2" height="15.0" fill="rgb(213,193,43)" rx="2" ry="2" />
<text  x="319.69" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.02%)</title><rect x="89.1" y="133" width="0.3" height="15.0" fill="rgb(209,77,39)" rx="2" ry="2" />
<text  x="92.14" y="143.5" ></text>
</g>
<g >
<title>runtime.freeSomeWbufs.func1 (1 samples, 0.02%)</title><rect x="349.3" y="261" width="0.3" height="15.0" fill="rgb(228,113,34)" rx="2" ry="2" />
<text  x="352.33" y="271.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/funcs.(*Funcs).GetFunc (1 samples, 0.02%)</title><rect x="315.0" y="213" width="0.2" height="15.0" fill="rgb(229,200,20)" rx="2" ry="2" />
<text  x="317.95" y="223.5" ></text>
</g>
<g >
<title>runtime.deferproc (1 samples, 0.02%)</title><rect x="87.7" y="165" width="0.2" height="15.0" fill="rgb(217,206,39)" rx="2" ry="2" />
<text  x="90.66" y="175.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (2 samples, 0.04%)</title><rect x="1166.3" y="213" width="0.5" height="15.0" fill="rgb(228,37,8)" rx="2" ry="2" />
<text  x="1169.26" y="223.5" ></text>
</g>
<g >
<title>runtime.deltimer (1 samples, 0.02%)</title><rect x="122.0" y="229" width="0.3" height="15.0" fill="rgb(251,190,39)" rx="2" ry="2" />
<text  x="125.04" y="239.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepareWrite (1 samples, 0.02%)</title><rect x="160.4" y="165" width="0.2" height="15.0" fill="rgb(242,36,35)" rx="2" ry="2" />
<text  x="163.38" y="175.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Name (1 samples, 0.02%)</title><rect x="309.5" y="213" width="0.3" height="15.0" fill="rgb(238,156,48)" rx="2" ry="2" />
<text  x="312.51" y="223.5" ></text>
</g>
<g >
<title>runtime.wakep (39 samples, 0.82%)</title><rect x="1156.6" y="245" width="9.7" height="15.0" fill="rgb(205,156,45)" rx="2" ry="2" />
<text  x="1159.61" y="255.5" ></text>
</g>
<g >
<title>runtime.convTstring (1 samples, 0.02%)</title><rect x="318.2" y="245" width="0.2" height="15.0" fill="rgb(218,209,37)" rx="2" ry="2" />
<text  x="321.17" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (8 samples, 0.17%)</title><rect x="303.1" y="229" width="2.0" height="15.0" fill="rgb(231,124,48)" rx="2" ry="2" />
<text  x="306.08" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.02%)</title><rect x="318.2" y="213" width="0.2" height="15.0" fill="rgb(207,29,50)" rx="2" ry="2" />
<text  x="321.17" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="255.3" y="213" width="0.3" height="15.0" fill="rgb(244,161,13)" rx="2" ry="2" />
<text  x="258.35" y="223.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Unmarshal (4 samples, 0.08%)</title><rect x="302.1" y="261" width="1.0" height="15.0" fill="rgb(230,163,50)" rx="2" ry="2" />
<text  x="305.09" y="271.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).readUnlock (1 samples, 0.02%)</title><rect x="14.0" y="229" width="0.2" height="15.0" fill="rgb(236,111,32)" rx="2" ry="2" />
<text  x="16.96" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*sendStream).popStreamFrame (6 samples, 0.13%)</title><rect x="125.3" y="213" width="1.4" height="15.0" fill="rgb(208,204,17)" rx="2" ry="2" />
<text  x="128.25" y="223.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.(*Server).ServeRPC (71 samples, 1.49%)</title><rect x="301.4" y="293" width="17.5" height="15.0" fill="rgb(252,82,0)" rx="2" ry="2" />
<text  x="304.35" y="303.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).ShouldSendNumPackets (1 samples, 0.02%)</title><rect x="258.8" y="277" width="0.3" height="15.0" fill="rgb(223,103,26)" rx="2" ry="2" />
<text  x="261.81" y="287.5" ></text>
</g>
<g >
<title>runtime.notewakeup (39 samples, 0.82%)</title><rect x="1156.6" y="213" width="9.7" height="15.0" fill="rgb(245,48,42)" rx="2" ry="2" />
<text  x="1159.61" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (3 samples, 0.06%)</title><rect x="1165.5" y="181" width="0.8" height="15.0" fill="rgb(244,127,15)" rx="2" ry="2" />
<text  x="1168.51" y="191.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.02%)</title><rect x="91.6" y="229" width="0.3" height="15.0" fill="rgb(236,82,7)" rx="2" ry="2" />
<text  x="94.62" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).handleAckFrame (6 samples, 0.13%)</title><rect x="84.7" y="229" width="1.5" height="15.0" fill="rgb(238,91,33)" rx="2" ry="2" />
<text  x="87.69" y="239.5" ></text>
</g>
<g >
<title>runtime.findrunnable (395 samples, 8.28%)</title><rect x="609.8" y="261" width="97.7" height="15.0" fill="rgb(251,75,52)" rx="2" ry="2" />
<text  x="612.77" y="271.5" >runtime.fin..</text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.02%)</title><rect x="91.6" y="133" width="0.3" height="15.0" fill="rgb(239,145,21)" rx="2" ry="2" />
<text  x="94.62" y="143.5" ></text>
</g>
<g >
<title>runtime.spanOf (1 samples, 0.02%)</title><rect x="18.4" y="53" width="0.3" height="15.0" fill="rgb(228,183,6)" rx="2" ry="2" />
<text  x="21.41" y="63.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.02%)</title><rect x="91.6" y="117" width="0.3" height="15.0" fill="rgb(229,227,24)" rx="2" ry="2" />
<text  x="94.62" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.02%)</title><rect x="124.8" y="149" width="0.2" height="15.0" fill="rgb(238,149,13)" rx="2" ry="2" />
<text  x="127.76" y="159.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (2 samples, 0.04%)</title><rect x="305.1" y="229" width="0.5" height="15.0" fill="rgb(253,82,25)" rx="2" ry="2" />
<text  x="308.06" y="239.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.02%)</title><rect x="125.5" y="37" width="0.2" height="15.0" fill="rgb(231,208,44)" rx="2" ry="2" />
<text  x="128.50" y="47.5" ></text>
</g>
<g >
<title>runtime.resolveTypeOff (1 samples, 0.02%)</title><rect x="312.7" y="149" width="0.3" height="15.0" fill="rgb(227,221,7)" rx="2" ry="2" />
<text  x="315.73" y="159.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.02%)</title><rect x="351.1" y="165" width="0.2" height="15.0" fill="rgb(216,67,47)" rx="2" ry="2" />
<text  x="354.06" y="175.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (1 samples, 0.02%)</title><rect x="1156.4" y="229" width="0.2" height="15.0" fill="rgb(235,2,6)" rx="2" ry="2" />
<text  x="1159.36" y="239.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.02%)</title><rect x="324.1" y="229" width="0.3" height="15.0" fill="rgb(210,35,53)" rx="2" ry="2" />
<text  x="327.11" y="239.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (14 samples, 0.29%)</title><rect x="1152.4" y="229" width="3.5" height="15.0" fill="rgb(229,199,38)" rx="2" ry="2" />
<text  x="1155.41" y="239.5" ></text>
</g>
<g >
<title>crypto/aes.(*gcmAsm).Seal (3 samples, 0.06%)</title><rect x="133.2" y="197" width="0.7" height="15.0" fill="rgb(234,38,15)" rx="2" ry="2" />
<text  x="136.17" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*streamsMap).GetOrOpenReceiveStream (2 samples, 0.04%)</title><rect x="87.9" y="213" width="0.5" height="15.0" fill="rgb(248,195,48)" rx="2" ry="2" />
<text  x="90.91" y="223.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.(*Server).CallService (38 samples, 0.80%)</title><rect x="308.8" y="245" width="9.4" height="15.0" fill="rgb(228,201,13)" rx="2" ry="2" />
<text  x="311.77" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).sendProbePacket (13 samples, 0.27%)</title><rect x="255.3" y="277" width="3.3" height="15.0" fill="rgb(209,23,38)" rx="2" ry="2" />
<text  x="258.35" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetPacker).PackRetransmission (3 samples, 0.06%)</title><rect x="255.3" y="261" width="0.8" height="15.0" fill="rgb(248,213,16)" rx="2" ry="2" />
<text  x="258.35" y="271.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Kind (1 samples, 0.02%)</title><rect x="310.8" y="165" width="0.2" height="15.0" fill="rgb(208,226,53)" rx="2" ry="2" />
<text  x="313.75" y="175.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (5 samples, 0.10%)</title><rect x="90.4" y="181" width="1.2" height="15.0" fill="rgb(206,220,22)" rx="2" ry="2" />
<text  x="93.38" y="191.5" ></text>
</g>
<g >
<title>runtime.scanobject (3 samples, 0.06%)</title><rect x="90.9" y="133" width="0.7" height="15.0" fill="rgb(223,133,25)" rx="2" ry="2" />
<text  x="93.88" y="143.5" ></text>
</g>
<g >
<title>time.Now (5 samples, 0.10%)</title><rect x="299.4" y="293" width="1.2" height="15.0" fill="rgb(240,216,46)" rx="2" ry="2" />
<text  x="302.37" y="303.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.02%)</title><rect x="13.2" y="181" width="0.3" height="15.0" fill="rgb(219,88,35)" rx="2" ry="2" />
<text  x="16.22" y="191.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (7 samples, 0.15%)</title><rect x="1170.7" y="261" width="1.7" height="15.0" fill="rgb(224,42,24)" rx="2" ry="2" />
<text  x="1173.71" y="271.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np_trampoline (1 samples, 0.02%)</title><rect x="348.8" y="293" width="0.3" height="15.0" fill="rgb(211,85,8)" rx="2" ry="2" />
<text  x="351.84" y="303.5" ></text>
</g>
<g >
<title>net.(*netFD).readFrom (272 samples, 5.70%)</title><rect x="13.7" y="261" width="67.3" height="15.0" fill="rgb(241,229,33)" rx="2" ry="2" />
<text  x="16.71" y="271.5" >net.(*n..</text>
</g>
<g >
<title>runtime.runqgrab (43 samples, 0.90%)</title><rect x="662.9" y="229" width="10.7" height="15.0" fill="rgb(206,144,23)" rx="2" ry="2" />
<text  x="665.94" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_lock (1 samples, 0.02%)</title><rect x="707.0" y="197" width="0.2" height="15.0" fill="rgb(254,194,28)" rx="2" ry="2" />
<text  x="709.97" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).sendPacket (529 samples, 11.09%)</title><rect x="124.5" y="277" width="130.8" height="15.0" fill="rgb(248,128,24)" rx="2" ry="2" />
<text  x="127.51" y="287.5" >github.com/lucas..</text>
</g>
<g >
<title>runtime.goready (1 samples, 0.02%)</title><rect x="10.7" y="213" width="0.3" height="15.0" fill="rgb(245,210,46)" rx="2" ry="2" />
<text  x="13.74" y="223.5" ></text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.04%)</title><rect x="610.8" y="213" width="0.5" height="15.0" fill="rgb(225,22,49)" rx="2" ry="2" />
<text  x="613.76" y="223.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.02%)</title><rect x="91.1" y="117" width="0.3" height="15.0" fill="rgb(245,99,47)" rx="2" ry="2" />
<text  x="94.12" y="127.5" ></text>
</g>
<g >
<title>runtime.deferproc (1 samples, 0.02%)</title><rect x="136.4" y="229" width="0.2" height="15.0" fill="rgb(212,210,7)" rx="2" ry="2" />
<text  x="139.38" y="239.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.02%)</title><rect x="312.2" y="181" width="0.3" height="15.0" fill="rgb(220,167,2)" rx="2" ry="2" />
<text  x="315.23" y="191.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.02%)</title><rect x="159.4" y="85" width="0.2" height="15.0" fill="rgb(254,114,39)" rx="2" ry="2" />
<text  x="162.39" y="95.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).queue (18 samples, 0.38%)</title><rect x="154.2" y="101" width="4.4" height="15.0" fill="rgb(251,93,45)" rx="2" ry="2" />
<text  x="157.19" y="111.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="10.7" y="197" width="0.3" height="15.0" fill="rgb(249,13,38)" rx="2" ry="2" />
<text  x="13.74" y="207.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (2 samples, 0.04%)</title><rect x="608.3" y="277" width="0.5" height="15.0" fill="rgb(216,194,30)" rx="2" ry="2" />
<text  x="611.29" y="287.5" ></text>
</g>
<g >
<title>runtime.semawakeup (3 samples, 0.06%)</title><rect x="707.5" y="197" width="0.7" height="15.0" fill="rgb(211,125,33)" rx="2" ry="2" />
<text  x="710.46" y="207.5" ></text>
</g>
<g >
<title>runtime.handoffp (5 samples, 0.10%)</title><rect x="78.8" y="133" width="1.2" height="15.0" fill="rgb(216,64,52)" rx="2" ry="2" />
<text  x="81.76" y="143.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/congestion.(*cubicSender).TimeUntilSend (1 samples, 0.02%)</title><rect x="258.8" y="261" width="0.3" height="15.0" fill="rgb(214,193,18)" rx="2" ry="2" />
<text  x="261.81" y="271.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (9 samples, 0.19%)</title><rect x="351.1" y="229" width="2.2" height="15.0" fill="rgb(228,62,34)" rx="2" ry="2" />
<text  x="354.06" y="239.5" ></text>
</g>
<g >
<title>runtime.chanrecv1 (2 samples, 0.04%)</title><rect x="324.4" y="261" width="0.4" height="15.0" fill="rgb(231,179,13)" rx="2" ry="2" />
<text  x="327.35" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*AckFrame).Length (1 samples, 0.02%)</title><rect x="129.2" y="229" width="0.3" height="15.0" fill="rgb(248,226,42)" rx="2" ry="2" />
<text  x="132.21" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (18 samples, 0.38%)</title><rect x="1147.2" y="197" width="4.5" height="15.0" fill="rgb(251,37,36)" rx="2" ry="2" />
<text  x="1150.21" y="207.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (6 samples, 0.13%)</title><rect x="325.6" y="197" width="1.5" height="15.0" fill="rgb(232,218,29)" rx="2" ry="2" />
<text  x="328.59" y="207.5" ></text>
</g>
<g >
<title>runtime.chanrecv2 (1 samples, 0.02%)</title><rect x="346.6" y="293" width="0.3" height="15.0" fill="rgb(211,45,52)" rx="2" ry="2" />
<text  x="349.61" y="303.5" ></text>
</g>
<g >
<title>runtime.usleep (19 samples, 0.40%)</title><rect x="364.9" y="213" width="4.7" height="15.0" fill="rgb(209,208,40)" rx="2" ry="2" />
<text  x="367.92" y="223.5" ></text>
</g>
<g >
<title>syscall.Sendto (9 samples, 0.19%)</title><rect x="256.3" y="165" width="2.3" height="15.0" fill="rgb(240,97,22)" rx="2" ry="2" />
<text  x="259.34" y="175.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Marshal (2 samples, 0.04%)</title><rect x="317.2" y="181" width="0.5" height="15.0" fill="rgb(209,175,32)" rx="2" ry="2" />
<text  x="320.18" y="191.5" ></text>
</g>
<g >
<title>runtime.nanotime (4 samples, 0.08%)</title><rect x="359.2" y="245" width="1.0" height="15.0" fill="rgb(240,99,1)" rx="2" ry="2" />
<text  x="362.23" y="255.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*marshalInfo).size (2 samples, 0.04%)</title><rect x="317.7" y="165" width="0.5" height="15.0" fill="rgb(234,170,41)" rx="2" ry="2" />
<text  x="320.68" y="175.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (8 samples, 0.17%)</title><rect x="303.1" y="181" width="2.0" height="15.0" fill="rgb(239,16,50)" rx="2" ry="2" />
<text  x="306.08" y="191.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (1 samples, 0.02%)</title><rect x="13.2" y="277" width="0.3" height="15.0" fill="rgb(244,156,44)" rx="2" ry="2" />
<text  x="16.22" y="287.5" ></text>
</g>
<g >
<title>reflect.(*rtype).NumIn (1 samples, 0.02%)</title><rect x="315.2" y="213" width="0.2" height="15.0" fill="rgb(223,49,18)" rx="2" ry="2" />
<text  x="318.20" y="223.5" ></text>
</g>
<g >
<title>time.Now (1 samples, 0.02%)</title><rect x="13.0" y="277" width="0.2" height="15.0" fill="rgb(207,160,33)" rx="2" ry="2" />
<text  x="15.97" y="287.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.02%)</title><rect x="91.4" y="117" width="0.2" height="15.0" fill="rgb(217,142,53)" rx="2" ry="2" />
<text  x="94.37" y="127.5" ></text>
</g>
<g >
<title>runtime.duffcopy (1 samples, 0.02%)</title><rect x="83.7" y="213" width="0.3" height="15.0" fill="rgb(231,178,38)" rx="2" ry="2" />
<text  x="86.70" y="223.5" ></text>
</g>
<g >
<title>runtime.scanstack (9 samples, 0.19%)</title><rect x="351.1" y="197" width="2.2" height="15.0" fill="rgb(210,197,7)" rx="2" ry="2" />
<text  x="354.06" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="307.0" y="213" width="0.3" height="15.0" fill="rgb(212,54,8)" rx="2" ry="2" />
<text  x="310.04" y="223.5" ></text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.02%)</title><rect x="608.5" y="213" width="0.3" height="15.0" fill="rgb(254,152,31)" rx="2" ry="2" />
<text  x="611.53" y="223.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.unmarshalInt32Value (1 samples, 0.02%)</title><rect x="302.6" y="197" width="0.2" height="15.0" fill="rgb(226,161,14)" rx="2" ry="2" />
<text  x="305.59" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/flowcontrol.(*connectionFlowController).IncrementHighestReceived (1 samples, 0.02%)</title><rect x="87.4" y="165" width="0.3" height="15.0" fill="rgb(251,58,50)" rx="2" ry="2" />
<text  x="90.41" y="175.5" ></text>
</g>
<g >
<title>runtime.notetsleep (2 samples, 0.04%)</title><rect x="1166.3" y="261" width="0.5" height="15.0" fill="rgb(232,208,14)" rx="2" ry="2" />
<text  x="1169.26" y="271.5" ></text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.04%)</title><rect x="159.9" y="53" width="0.5" height="15.0" fill="rgb(219,73,24)" rx="2" ry="2" />
<text  x="162.88" y="63.5" ></text>
</g>
<g >
<title>github.com/marten-seemann/qtls.(*xorNonceAEAD).Seal (3 samples, 0.06%)</title><rect x="133.2" y="213" width="0.7" height="15.0" fill="rgb(231,180,2)" rx="2" ry="2" />
<text  x="136.17" y="223.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.02%)</title><rect x="159.1" y="85" width="0.3" height="15.0" fill="rgb(210,143,17)" rx="2" ry="2" />
<text  x="162.14" y="95.5" ></text>
</g>
<g >
<title>runtime.(*_type).typeOff (1 samples, 0.02%)</title><rect x="312.7" y="165" width="0.3" height="15.0" fill="rgb(222,139,3)" rx="2" ry="2" />
<text  x="315.73" y="175.5" ></text>
</g>
<g >
<title>runtime.scanobject (3 samples, 0.06%)</title><rect x="130.0" y="117" width="0.7" height="15.0" fill="rgb(229,107,34)" rx="2" ry="2" />
<text  x="132.95" y="127.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (1 samples, 0.02%)</title><rect x="307.0" y="101" width="0.3" height="15.0" fill="rgb(252,180,49)" rx="2" ry="2" />
<text  x="310.04" y="111.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHistory).Iterate (1 samples, 0.02%)</title><rect x="85.2" y="181" width="0.2" height="15.0" fill="rgb(237,21,30)" rx="2" ry="2" />
<text  x="88.19" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.04%)</title><rect x="325.1" y="213" width="0.5" height="15.0" fill="rgb(235,118,9)" rx="2" ry="2" />
<text  x="328.10" y="223.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.02%)</title><rect x="711.9" y="229" width="0.3" height="15.0" fill="rgb(238,2,6)" rx="2" ry="2" />
<text  x="714.92" y="239.5" ></text>
</g>
<g >
<title>runtime.mapiterinit (1 samples, 0.02%)</title><rect x="254.4" y="245" width="0.2" height="15.0" fill="rgb(208,50,19)" rx="2" ry="2" />
<text  x="257.36" y="255.5" ></text>
</g>
<g >
<title>bytes.(*Reader).ReadByte (1 samples, 0.02%)</title><rect x="83.5" y="165" width="0.2" height="15.0" fill="rgb(251,104,28)" rx="2" ry="2" />
<text  x="86.46" y="175.5" ></text>
</g>
<g >
<title>internal/poll.runtime_Semrelease (3 samples, 0.06%)</title><rect x="159.6" y="133" width="0.8" height="15.0" fill="rgb(228,89,51)" rx="2" ry="2" />
<text  x="162.63" y="143.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Unmarshal (3 samples, 0.06%)</title><rect x="302.1" y="229" width="0.7" height="15.0" fill="rgb(214,214,16)" rx="2" ry="2" />
<text  x="305.09" y="239.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/funcs.(*Funcs).Call (19 samples, 0.40%)</title><rect x="308.8" y="229" width="4.7" height="15.0" fill="rgb(206,170,36)" rx="2" ry="2" />
<text  x="311.77" y="239.5" ></text>
</g>
<g >
<title>time.Now (6 samples, 0.13%)</title><rect x="130.9" y="197" width="1.5" height="15.0" fill="rgb(217,93,35)" rx="2" ry="2" />
<text  x="133.94" y="207.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.02%)</title><rect x="307.0" y="133" width="0.3" height="15.0" fill="rgb(239,46,47)" rx="2" ry="2" />
<text  x="310.04" y="143.5" ></text>
</g>
<g >
<title>runtime.chanrecv (2 samples, 0.04%)</title><rect x="324.4" y="245" width="0.4" height="15.0" fill="rgb(226,85,28)" rx="2" ry="2" />
<text  x="327.35" y="255.5" ></text>
</g>
<g >
<title>runtime.schedule (1 samples, 0.02%)</title><rect x="608.5" y="261" width="0.3" height="15.0" fill="rgb(216,87,2)" rx="2" ry="2" />
<text  x="611.53" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*framerI).AppendStreamFrames (9 samples, 0.19%)</title><rect x="125.0" y="229" width="2.2" height="15.0" fill="rgb(227,48,1)" rx="2" ry="2" />
<text  x="128.01" y="239.5" ></text>
</g>
<g >
<title>runtime.park_m (403 samples, 8.45%)</title><rect x="608.8" y="293" width="99.7" height="15.0" fill="rgb(243,35,20)" rx="2" ry="2" />
<text  x="611.78" y="303.5" >runtime.park_m</text>
</g>
<g >
<title>runtime.runqempty (1 samples, 0.02%)</title><rect x="1170.5" y="213" width="0.2" height="15.0" fill="rgb(237,227,7)" rx="2" ry="2" />
<text  x="1173.46" y="223.5" ></text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.02%)</title><rect x="608.5" y="229" width="0.3" height="15.0" fill="rgb(254,179,19)" rx="2" ry="2" />
<text  x="611.53" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="307.0" y="181" width="0.3" height="15.0" fill="rgb(209,149,6)" rx="2" ry="2" />
<text  x="310.04" y="191.5" ></text>
</g>
<g >
<title>runtime.osyield (4 samples, 0.08%)</title><rect x="356.8" y="261" width="0.9" height="15.0" fill="rgb(233,15,1)" rx="2" ry="2" />
<text  x="359.75" y="271.5" ></text>
</g>
<g >
<title>runtime.(*waitq).enqueue (1 samples, 0.02%)</title><rect x="320.1" y="277" width="0.3" height="15.0" fill="rgb(222,121,2)" rx="2" ry="2" />
<text  x="323.15" y="287.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1,754 samples, 36.76%)</title><rect x="712.2" y="197" width="433.8" height="15.0" fill="rgb(217,227,13)" rx="2" ry="2" />
<text  x="715.16" y="207.5" >runtime.pthread_cond_signal</text>
</g>
<g >
<title>runtime.semawakeup (2 samples, 0.04%)</title><rect x="375.8" y="197" width="0.5" height="15.0" fill="rgb(226,151,13)" rx="2" ry="2" />
<text  x="378.80" y="207.5" ></text>
</g>
<g >
<title>runtime.markroot (10 samples, 0.21%)</title><rect x="351.1" y="245" width="2.4" height="15.0" fill="rgb(244,47,38)" rx="2" ry="2" />
<text  x="354.06" y="255.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (3 samples, 0.06%)</title><rect x="130.0" y="133" width="0.7" height="15.0" fill="rgb(239,122,12)" rx="2" ry="2" />
<text  x="132.95" y="143.5" ></text>
</g>
<g >
<title>runtime.schedule (400 samples, 8.38%)</title><rect x="609.5" y="277" width="99.0" height="15.0" fill="rgb(222,158,44)" rx="2" ry="2" />
<text  x="612.52" y="287.5" >runtime.sch..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="313.2" y="197" width="0.3" height="15.0" fill="rgb(230,228,23)" rx="2" ry="2" />
<text  x="316.22" y="207.5" ></text>
</g>
<g >
<title>time.now (1 samples, 0.02%)</title><rect x="254.1" y="229" width="0.3" height="15.0" fill="rgb(223,138,12)" rx="2" ry="2" />
<text  x="257.11" y="239.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.02%)</title><rect x="304.6" y="117" width="0.2" height="15.0" fill="rgb(241,120,32)" rx="2" ry="2" />
<text  x="307.57" y="127.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*receivedPacketHistory).ReceivedPacket (1 samples, 0.02%)</title><rect x="88.4" y="213" width="0.3" height="15.0" fill="rgb(211,132,39)" rx="2" ry="2" />
<text  x="91.40" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="13.2" y="197" width="0.3" height="15.0" fill="rgb(244,192,1)" rx="2" ry="2" />
<text  x="16.22" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="350.6" y="229" width="0.2" height="15.0" fill="rgb(223,221,10)" rx="2" ry="2" />
<text  x="353.57" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*windowUpdateQueue).QueueAll (1 samples, 0.02%)</title><rect x="254.4" y="261" width="0.2" height="15.0" fill="rgb(226,130,9)" rx="2" ry="2" />
<text  x="257.36" y="271.5" ></text>
</g>
<g >
<title>runtime.semrelease1 (3 samples, 0.06%)</title><rect x="159.6" y="101" width="0.8" height="15.0" fill="rgb(218,67,41)" rx="2" ry="2" />
<text  x="162.63" y="111.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="258.1" y="101" width="0.2" height="15.0" fill="rgb(214,62,50)" rx="2" ry="2" />
<text  x="261.07" y="111.5" ></text>
</g>
<g >
<title>runtime.startm (1,778 samples, 37.27%)</title><rect x="711.9" y="245" width="439.8" height="15.0" fill="rgb(235,56,25)" rx="2" ry="2" />
<text  x="714.92" y="255.5" >runtime.startm</text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (5 samples, 0.10%)</title><rect x="90.4" y="165" width="1.2" height="15.0" fill="rgb(209,141,53)" rx="2" ry="2" />
<text  x="93.38" y="175.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*framerI).AddActiveStream (4 samples, 0.08%)</title><rect x="343.6" y="245" width="1.0" height="15.0" fill="rgb(254,42,0)" rx="2" ry="2" />
<text  x="346.64" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/utils.VarIntLen (1 samples, 0.02%)</title><rect x="129.2" y="197" width="0.3" height="15.0" fill="rgb(234,53,35)" rx="2" ry="2" />
<text  x="132.21" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_lock (1 samples, 0.02%)</title><rect x="79.7" y="69" width="0.3" height="15.0" fill="rgb(240,202,45)" rx="2" ry="2" />
<text  x="82.75" y="79.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="124.8" y="133" width="0.2" height="15.0" fill="rgb(223,66,6)" rx="2" ry="2" />
<text  x="127.76" y="143.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.04%)</title><rect x="375.8" y="213" width="0.5" height="15.0" fill="rgb(224,77,46)" rx="2" ry="2" />
<text  x="378.80" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).determineNewlyAckedPackets.func1 (1 samples, 0.02%)</title><rect x="85.2" y="165" width="0.2" height="15.0" fill="rgb(251,61,11)" rx="2" ry="2" />
<text  x="88.19" y="175.5" ></text>
</g>
<g >
<title>syscall.syscall6 (181 samples, 3.79%)</title><rect x="36.2" y="197" width="44.8" height="15.0" fill="rgb(233,28,51)" rx="2" ry="2" />
<text  x="39.22" y="207.5" >sysc..</text>
</g>
<g >
<title>runtime.nilinterhash (1 samples, 0.02%)</title><rect x="315.0" y="165" width="0.2" height="15.0" fill="rgb(245,200,4)" rx="2" ry="2" />
<text  x="317.95" y="175.5" ></text>
</g>
<g >
<title>runtime.chansend (4 samples, 0.08%)</title><rect x="10.2" y="245" width="1.0" height="15.0" fill="rgb(229,193,10)" rx="2" ry="2" />
<text  x="13.25" y="255.5" ></text>
</g>
<g >
<title>runtime.notetsleep (1 samples, 0.02%)</title><rect x="1156.4" y="245" width="0.2" height="15.0" fill="rgb(235,118,29)" rx="2" ry="2" />
<text  x="1159.36" y="255.5" ></text>
</g>
<g >
<title>reflect.Value.Call (11 samples, 0.23%)</title><rect x="309.8" y="213" width="2.7" height="15.0" fill="rgb(221,73,43)" rx="2" ry="2" />
<text  x="312.76" y="223.5" ></text>
</g>
<g >
<title>runtime.notesleep (136 samples, 2.85%)</title><rect x="673.6" y="229" width="33.6" height="15.0" fill="rgb(219,90,21)" rx="2" ry="2" />
<text  x="676.58" y="239.5" >ru..</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.ParsePacket (8 samples, 0.17%)</title><rect x="89.9" y="277" width="2.0" height="15.0" fill="rgb(251,143,40)" rx="2" ry="2" />
<text  x="92.89" y="287.5" ></text>
</g>
<g >
<title>runtime.gcDrain (22 samples, 0.46%)</title><rect x="351.1" y="261" width="5.4" height="15.0" fill="rgb(225,51,24)" rx="2" ry="2" />
<text  x="354.06" y="271.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="608.0" y="229" width="0.3" height="15.0" fill="rgb(242,74,32)" rx="2" ry="2" />
<text  x="611.04" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.02%)</title><rect x="124.8" y="181" width="0.2" height="15.0" fill="rgb(219,101,40)" rx="2" ry="2" />
<text  x="127.76" y="191.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetPacker).writeAndSealPacket (1 samples, 0.02%)</title><rect x="255.3" y="245" width="0.3" height="15.0" fill="rgb(245,55,30)" rx="2" ry="2" />
<text  x="258.35" y="255.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (135 samples, 2.83%)</title><rect x="673.6" y="197" width="33.4" height="15.0" fill="rgb(229,103,5)" rx="2" ry="2" />
<text  x="676.58" y="207.5" >ru..</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*PacketList).insertValue (1 samples, 0.02%)</title><rect x="255.1" y="197" width="0.2" height="15.0" fill="rgb(231,46,52)" rx="2" ry="2" />
<text  x="258.10" y="207.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/pb.(*Msg).XXX_Marshal (2 samples, 0.04%)</title><rect x="305.6" y="245" width="0.5" height="15.0" fill="rgb(206,106,13)" rx="2" ry="2" />
<text  x="308.56" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetUnpacker).Unpack (8 samples, 0.17%)</title><rect x="82.2" y="261" width="2.0" height="15.0" fill="rgb(222,145,32)" rx="2" ry="2" />
<text  x="85.22" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*Header).ParseExtended (4 samples, 0.08%)</title><rect x="83.2" y="245" width="1.0" height="15.0" fill="rgb(231,66,54)" rx="2" ry="2" />
<text  x="86.21" y="255.5" ></text>
</g>
<g >
<title>runtime.parkunlock_c (1 samples, 0.02%)</title><rect x="609.3" y="277" width="0.2" height="15.0" fill="rgb(238,143,35)" rx="2" ry="2" />
<text  x="612.27" y="287.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.02%)</title><rect x="307.0" y="229" width="0.3" height="15.0" fill="rgb(222,163,22)" rx="2" ry="2" />
<text  x="310.04" y="239.5" ></text>
</g>
<g >
<title>runtime.chanrecv (1 samples, 0.02%)</title><rect x="346.6" y="277" width="0.3" height="15.0" fill="rgb(247,206,1)" rx="2" ry="2" />
<text  x="349.61" y="287.5" ></text>
</g>
<g >
<title>net.(*UDPConn).writeTo (10 samples, 0.21%)</title><rect x="256.1" y="213" width="2.5" height="15.0" fill="rgb(249,100,51)" rx="2" ry="2" />
<text  x="259.09" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.04%)</title><rect x="18.4" y="149" width="0.5" height="15.0" fill="rgb(244,13,23)" rx="2" ry="2" />
<text  x="21.41" y="159.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (2 samples, 0.04%)</title><rect x="12.0" y="277" width="0.5" height="15.0" fill="rgb(209,34,5)" rx="2" ry="2" />
<text  x="14.98" y="287.5" ></text>
</g>
<g >
<title>net.IP.Equal (3 samples, 0.06%)</title><rect x="139.4" y="165" width="0.7" height="15.0" fill="rgb(252,65,34)" rx="2" ry="2" />
<text  x="142.35" y="175.5" ></text>
</g>
<g >
<title>syscall.syscall6 (9 samples, 0.19%)</title><rect x="256.3" y="133" width="2.3" height="15.0" fill="rgb(207,101,28)" rx="2" ry="2" />
<text  x="259.34" y="143.5" ></text>
</g>
<g >
<title>runtime.markrootSpans (1 samples, 0.02%)</title><rect x="353.3" y="229" width="0.2" height="15.0" fill="rgb(244,154,20)" rx="2" ry="2" />
<text  x="356.29" y="239.5" ></text>
</g>
<g >
<title>syscall.Recvfrom (268 samples, 5.62%)</title><rect x="14.7" y="229" width="66.3" height="15.0" fill="rgb(217,111,52)" rx="2" ry="2" />
<text  x="17.70" y="239.5" >syscall..</text>
</g>
<g >
<title>runtime.asmcgocall (2 samples, 0.04%)</title><rect x="131.9" y="133" width="0.5" height="15.0" fill="rgb(230,110,33)" rx="2" ry="2" />
<text  x="134.93" y="143.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (1 samples, 0.02%)</title><rect x="355.8" y="197" width="0.2" height="15.0" fill="rgb(209,134,54)" rx="2" ry="2" />
<text  x="358.76" y="207.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Size (1 samples, 0.02%)</title><rect x="308.3" y="197" width="0.2" height="15.0" fill="rgb(238,153,8)" rx="2" ry="2" />
<text  x="311.28" y="207.5" ></text>
</g>
<g >
<title>runtime.resetspinning (2 samples, 0.04%)</title><rect x="375.8" y="261" width="0.5" height="15.0" fill="rgb(234,106,2)" rx="2" ry="2" />
<text  x="378.80" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/handshake.(*cryptoSetup).GetSealer (3 samples, 0.06%)</title><rect x="136.4" y="245" width="0.7" height="15.0" fill="rgb(251,116,41)" rx="2" ry="2" />
<text  x="139.38" y="255.5" ></text>
</g>
<g >
<title>runtime.notetsleep (2 samples, 0.04%)</title><rect x="710.9" y="261" width="0.5" height="15.0" fill="rgb(215,187,7)" rx="2" ry="2" />
<text  x="713.93" y="271.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).writeUnlock (3 samples, 0.06%)</title><rect x="159.6" y="165" width="0.8" height="15.0" fill="rgb(250,30,49)" rx="2" ry="2" />
<text  x="162.63" y="175.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (1 samples, 0.02%)</title><rect x="91.4" y="101" width="0.2" height="15.0" fill="rgb(216,206,52)" rx="2" ry="2" />
<text  x="94.37" y="111.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.02%)</title><rect x="127.5" y="181" width="0.2" height="15.0" fill="rgb(253,163,25)" rx="2" ry="2" />
<text  x="130.48" y="191.5" ></text>
</g>
<g >
<title>crypto/aes.encryptBlockAsm (1 samples, 0.02%)</title><rect x="132.9" y="197" width="0.3" height="15.0" fill="rgb(228,97,13)" rx="2" ry="2" />
<text  x="135.92" y="207.5" ></text>
</g>
<g >
<title>runtime.freedefer (1 samples, 0.02%)</title><rect x="89.4" y="245" width="0.2" height="15.0" fill="rgb(237,86,4)" rx="2" ry="2" />
<text  x="92.39" y="255.5" ></text>
</g>
<g >
<title>runtime.selectnbsend (2 samples, 0.04%)</title><rect x="344.6" y="229" width="0.5" height="15.0" fill="rgb(245,22,48)" rx="2" ry="2" />
<text  x="347.63" y="239.5" ></text>
</g>
<g >
<title>runtime.semawakeup (121 samples, 2.54%)</title><rect x="92.1" y="181" width="29.9" height="15.0" fill="rgb(248,101,13)" rx="2" ry="2" />
<text  x="95.11" y="191.5" >ru..</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*StreamFrame).MaxDataLen (1 samples, 0.02%)</title><rect x="126.5" y="181" width="0.2" height="15.0" fill="rgb(239,162,13)" rx="2" ry="2" />
<text  x="129.49" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="312.2" y="165" width="0.3" height="15.0" fill="rgb(239,160,49)" rx="2" ry="2" />
<text  x="315.23" y="175.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/examples/example/pb/service.(*ArithResponse).XXX_Size (2 samples, 0.04%)</title><rect x="317.7" y="197" width="0.5" height="15.0" fill="rgb(207,198,25)" rx="2" ry="2" />
<text  x="320.68" y="207.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.02%)</title><rect x="307.0" y="165" width="0.3" height="15.0" fill="rgb(218,60,18)" rx="2" ry="2" />
<text  x="310.04" y="175.5" ></text>
</g>
<g >
<title>runtime.(*gcSweepBuf).pop (1 samples, 0.02%)</title><rect x="89.1" y="85" width="0.3" height="15.0" fill="rgb(234,62,43)" rx="2" ry="2" />
<text  x="92.14" y="95.5" ></text>
</g>
<g >
<title>runtime.freeSomeWbufs (1 samples, 0.02%)</title><rect x="349.3" y="293" width="0.3" height="15.0" fill="rgb(243,30,11)" rx="2" ry="2" />
<text  x="352.33" y="303.5" ></text>
</g>
<g >
<title>runtime.ready (1 samples, 0.02%)</title><rect x="10.7" y="165" width="0.3" height="15.0" fill="rgb(238,116,41)" rx="2" ry="2" />
<text  x="13.74" y="175.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.02%)</title><rect x="350.8" y="245" width="0.3" height="15.0" fill="rgb(207,177,17)" rx="2" ry="2" />
<text  x="353.82" y="255.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.(*Server).ServeRPC.func1 (1 samples, 0.02%)</title><rect x="318.4" y="277" width="0.3" height="15.0" fill="rgb(252,34,16)" rx="2" ry="2" />
<text  x="321.42" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/utils.(*Timer).Reset (127 samples, 2.66%)</title><rect x="92.1" y="277" width="31.4" height="15.0" fill="rgb(209,142,19)" rx="2" ry="2" />
<text  x="95.11" y="287.5" >gi..</text>
</g>
<g >
<title>runtime.startm (5 samples, 0.10%)</title><rect x="78.8" y="117" width="1.2" height="15.0" fill="rgb(230,43,51)" rx="2" ry="2" />
<text  x="81.76" y="127.5" ></text>
</g>
<g >
<title>runtime.sellock (2 samples, 0.04%)</title><rect x="320.4" y="277" width="0.5" height="15.0" fill="rgb(232,114,23)" rx="2" ry="2" />
<text  x="323.40" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.02%)</title><rect x="318.2" y="181" width="0.2" height="15.0" fill="rgb(240,199,10)" rx="2" ry="2" />
<text  x="321.17" y="191.5" ></text>
</g>
<g >
<title>syscall.syscall6 (367 samples, 7.69%)</title><rect x="162.8" y="133" width="90.8" height="15.0" fill="rgb(244,49,53)" rx="2" ry="2" />
<text  x="165.85" y="143.5" >syscall.sy..</text>
</g>
<g >
<title>runtime.walltime (3 samples, 0.06%)</title><rect x="128.5" y="165" width="0.7" height="15.0" fill="rgb(245,195,30)" rx="2" ry="2" />
<text  x="131.47" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (8 samples, 0.17%)</title><rect x="303.1" y="213" width="2.0" height="15.0" fill="rgb(241,133,54)" rx="2" ry="2" />
<text  x="306.08" y="223.5" ></text>
</g>
<g >
<title>runtime.scanblock (5 samples, 0.10%)</title><rect x="351.8" y="133" width="1.2" height="15.0" fill="rgb(218,195,35)" rx="2" ry="2" />
<text  x="354.81" y="143.5" ></text>
</g>
<g >
<title>runtime.startm (3 samples, 0.06%)</title><rect x="707.5" y="229" width="0.7" height="15.0" fill="rgb(211,194,34)" rx="2" ry="2" />
<text  x="710.46" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*receiveStream).readImpl (16 samples, 0.34%)</title><rect x="320.9" y="277" width="3.9" height="15.0" fill="rgb(246,144,42)" rx="2" ry="2" />
<text  x="323.89" y="287.5" ></text>
</g>
<g >
<title>runtime.kevent (1 samples, 0.02%)</title><rect x="1152.2" y="213" width="0.2" height="15.0" fill="rgb(233,139,22)" rx="2" ry="2" />
<text  x="1155.16" y="223.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.02%)</title><rect x="1156.1" y="229" width="0.3" height="15.0" fill="rgb(250,68,10)" rx="2" ry="2" />
<text  x="1159.12" y="239.5" ></text>
</g>
<g >
<title>runtime.add (1 samples, 0.02%)</title><rect x="351.3" y="101" width="0.3" height="15.0" fill="rgb(227,168,10)" rx="2" ry="2" />
<text  x="354.31" y="111.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (37 samples, 0.78%)</title><rect x="244.5" y="117" width="9.1" height="15.0" fill="rgb(239,137,32)" rx="2" ry="2" />
<text  x="247.47" y="127.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*StreamFrame).Write (1 samples, 0.02%)</title><rect x="135.1" y="229" width="0.3" height="15.0" fill="rgb(233,100,6)" rx="2" ry="2" />
<text  x="138.15" y="239.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (1 samples, 0.02%)</title><rect x="306.8" y="149" width="0.2" height="15.0" fill="rgb(230,90,13)" rx="2" ry="2" />
<text  x="309.79" y="159.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (1 samples, 0.02%)</title><rect x="346.1" y="277" width="0.3" height="15.0" fill="rgb(250,220,37)" rx="2" ry="2" />
<text  x="349.12" y="287.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (71 samples, 1.49%)</title><rect x="1172.4" y="277" width="17.6" height="15.0" fill="rgb(225,83,38)" rx="2" ry="2" />
<text  x="1175.44" y="287.5" ></text>
</g>
<g >
<title>runtime.findrunnable (1 samples, 0.02%)</title><rect x="608.5" y="245" width="0.3" height="15.0" fill="rgb(211,174,34)" rx="2" ry="2" />
<text  x="611.53" y="255.5" ></text>
</g>
<g >
<title>runtime.notetsleepg (82 samples, 1.72%)</title><rect x="1169.7" y="293" width="20.3" height="15.0" fill="rgb(228,59,11)" rx="2" ry="2" />
<text  x="1172.72" y="303.5" ></text>
</g>
<g >
<title>runtime.schedule (74 samples, 1.55%)</title><rect x="358.0" y="277" width="18.3" height="15.0" fill="rgb(228,61,29)" rx="2" ry="2" />
<text  x="360.99" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/handshake.(*opener).DecryptHeader (2 samples, 0.04%)</title><rect x="82.2" y="245" width="0.5" height="15.0" fill="rgb(210,16,21)" rx="2" ry="2" />
<text  x="85.22" y="255.5" ></text>
</g>
<g >
<title>time.stopTimer (1 samples, 0.02%)</title><rect x="122.0" y="245" width="0.3" height="15.0" fill="rgb(252,222,40)" rx="2" ry="2" />
<text  x="125.04" y="255.5" ></text>
</g>
<g >
<title>runtime.send (2 samples, 0.04%)</title><rect x="325.1" y="245" width="0.5" height="15.0" fill="rgb(229,198,49)" rx="2" ry="2" />
<text  x="328.10" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*frameSorter).Push (2 samples, 0.04%)</title><rect x="86.4" y="181" width="0.5" height="15.0" fill="rgb(236,132,23)" rx="2" ry="2" />
<text  x="89.42" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.02%)</title><rect x="91.6" y="149" width="0.3" height="15.0" fill="rgb(214,109,44)" rx="2" ry="2" />
<text  x="94.62" y="159.5" ></text>
</g>
<g >
<title>runtime.semasleep (2 samples, 0.04%)</title><rect x="1166.3" y="229" width="0.5" height="15.0" fill="rgb(210,96,27)" rx="2" ry="2" />
<text  x="1169.26" y="239.5" ></text>
</g>
<g >
<title>all (4,771 samples, 100%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(218,110,46)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.appendBytes3 (1 samples, 0.02%)</title><rect x="305.6" y="197" width="0.2" height="15.0" fill="rgb(218,42,9)" rx="2" ry="2" />
<text  x="308.56" y="207.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (2 samples, 0.04%)</title><rect x="710.9" y="245" width="0.5" height="15.0" fill="rgb(226,170,52)" rx="2" ry="2" />
<text  x="713.93" y="255.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.ReplyEncode (5 samples, 0.10%)</title><rect x="316.9" y="229" width="1.3" height="15.0" fill="rgb(254,63,48)" rx="2" ry="2" />
<text  x="319.93" y="239.5" ></text>
</g>
<g >
<title>fmt.Sprintf (1 samples, 0.02%)</title><rect x="255.6" y="213" width="0.2" height="15.0" fill="rgb(232,124,53)" rx="2" ry="2" />
<text  x="258.60" y="223.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.04%)</title><rect x="12.5" y="277" width="0.5" height="15.0" fill="rgb(234,57,44)" rx="2" ry="2" />
<text  x="15.47" y="287.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (4 samples, 0.08%)</title><rect x="90.6" y="149" width="1.0" height="15.0" fill="rgb(246,46,9)" rx="2" ry="2" />
<text  x="93.63" y="159.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1,777 samples, 37.25%)</title><rect x="712.2" y="213" width="439.5" height="15.0" fill="rgb(226,126,15)" rx="2" ry="2" />
<text  x="715.16" y="223.5" >runtime.semawakeup</text>
</g>
<g >
<title>sync.(*Mutex).Lock (1 samples, 0.02%)</title><rect x="127.0" y="213" width="0.2" height="15.0" fill="rgb(209,162,23)" rx="2" ry="2" />
<text  x="129.99" y="223.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*marshalInfo).size (1 samples, 0.02%)</title><rect x="308.3" y="181" width="0.2" height="15.0" fill="rgb(216,148,18)" rx="2" ry="2" />
<text  x="311.28" y="191.5" ></text>
</g>
<g >
<title>runtime.kevent (10 samples, 0.21%)</title><rect x="362.4" y="229" width="2.5" height="15.0" fill="rgb(224,101,53)" rx="2" ry="2" />
<text  x="365.44" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (4 samples, 0.08%)</title><rect x="129.7" y="213" width="1.0" height="15.0" fill="rgb(226,171,31)" rx="2" ry="2" />
<text  x="132.71" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.02%)</title><rect x="1156.1" y="181" width="0.3" height="15.0" fill="rgb(215,47,0)" rx="2" ry="2" />
<text  x="1159.12" y="191.5" ></text>
</g>
<g >
<title>runtime.libcCall (2 samples, 0.04%)</title><rect x="300.1" y="245" width="0.5" height="15.0" fill="rgb(208,135,27)" rx="2" ry="2" />
<text  x="303.12" y="255.5" ></text>
</g>
<g >
<title>runtime.markroot (1 samples, 0.02%)</title><rect x="1151.9" y="245" width="0.3" height="15.0" fill="rgb(243,140,25)" rx="2" ry="2" />
<text  x="1154.91" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).run (888 samples, 18.61%)</title><rect x="81.0" y="309" width="219.6" height="15.0" fill="rgb(229,170,20)" rx="2" ry="2" />
<text  x="83.98" y="319.5" >github.com/lucas-clemente/qui..</text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.02%)</title><rect x="1151.7" y="245" width="0.2" height="15.0" fill="rgb(244,165,7)" rx="2" ry="2" />
<text  x="1154.66" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.parseStreamFrame (1 samples, 0.02%)</title><rect x="89.1" y="213" width="0.3" height="15.0" fill="rgb(247,164,0)" rx="2" ry="2" />
<text  x="92.14" y="223.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.02%)</title><rect x="255.3" y="117" width="0.3" height="15.0" fill="rgb(232,75,46)" rx="2" ry="2" />
<text  x="258.35" y="127.5" ></text>
</g>
<g >
<title>runtime.systemstack (6 samples, 0.13%)</title><rect x="325.6" y="245" width="1.5" height="15.0" fill="rgb(229,113,7)" rx="2" ry="2" />
<text  x="328.59" y="255.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (2 samples, 0.04%)</title><rect x="1155.9" y="261" width="0.5" height="15.0" fill="rgb(241,68,31)" rx="2" ry="2" />
<text  x="1158.87" y="271.5" ></text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.04%)</title><rect x="711.4" y="261" width="0.5" height="15.0" fill="rgb(216,184,54)" rx="2" ry="2" />
<text  x="714.42" y="271.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.appendVarint (1 samples, 0.02%)</title><rect x="317.4" y="133" width="0.3" height="15.0" fill="rgb(211,167,32)" rx="2" ry="2" />
<text  x="320.43" y="143.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="13.2" y="229" width="0.3" height="15.0" fill="rgb(213,134,9)" rx="2" ry="2" />
<text  x="16.22" y="239.5" ></text>
</g>
<g >
<title>time.Now (4 samples, 0.08%)</title><rect x="128.2" y="197" width="1.0" height="15.0" fill="rgb(252,11,50)" rx="2" ry="2" />
<text  x="131.22" y="207.5" ></text>
</g>
<g >
<title>runtime.ready (39 samples, 0.82%)</title><rect x="1156.6" y="261" width="9.7" height="15.0" fill="rgb(226,156,24)" rx="2" ry="2" />
<text  x="1159.61" y="271.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (1 samples, 0.02%)</title><rect x="89.1" y="117" width="0.3" height="15.0" fill="rgb(206,120,6)" rx="2" ry="2" />
<text  x="92.14" y="127.5" ></text>
</g>
<g >
<title>syscall.recvfrom (181 samples, 3.79%)</title><rect x="36.2" y="213" width="44.8" height="15.0" fill="rgb(239,170,17)" rx="2" ry="2" />
<text  x="39.22" y="223.5" >sysc..</text>
</g>
<g >
<title>runtime.entersyscallblock (1 samples, 0.02%)</title><rect x="258.1" y="117" width="0.2" height="15.0" fill="rgb(246,151,18)" rx="2" ry="2" />
<text  x="261.07" y="127.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.02%)</title><rect x="352.8" y="117" width="0.2" height="15.0" fill="rgb(224,176,43)" rx="2" ry="2" />
<text  x="355.80" y="127.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*incomingBidiStreamsMap).GetOrOpenStream (1 samples, 0.02%)</title><rect x="87.9" y="197" width="0.3" height="15.0" fill="rgb(221,165,10)" rx="2" ry="2" />
<text  x="90.91" y="207.5" ></text>
</g>
<g >
<title>runtime.send (1 samples, 0.02%)</title><rect x="125.5" y="117" width="0.2" height="15.0" fill="rgb(211,135,52)" rx="2" ry="2" />
<text  x="128.50" y="127.5" ></text>
</g>
<g >
<title>runtime.semasleep (2 samples, 0.04%)</title><rect x="710.9" y="229" width="0.5" height="15.0" fill="rgb(239,91,42)" rx="2" ry="2" />
<text  x="713.93" y="239.5" ></text>
</g>
<g >
<title>runtime.deferreturn (2 samples, 0.04%)</title><rect x="136.6" y="229" width="0.5" height="15.0" fill="rgb(253,38,19)" rx="2" ry="2" />
<text  x="139.63" y="239.5" ></text>
</g>
<g >
<title>runtime.semrelease (3 samples, 0.06%)</title><rect x="159.6" y="117" width="0.8" height="15.0" fill="rgb(229,4,37)" rx="2" ry="2" />
<text  x="162.63" y="127.5" ></text>
</g>
<g >
<title>runtime.chansend (1 samples, 0.02%)</title><rect x="125.5" y="133" width="0.2" height="15.0" fill="rgb(215,161,40)" rx="2" ry="2" />
<text  x="128.50" y="143.5" ></text>
</g>
<g >
<title>runtime.nanotime (2 samples, 0.04%)</title><rect x="123.0" y="245" width="0.5" height="15.0" fill="rgb(213,151,0)" rx="2" ry="2" />
<text  x="126.03" y="255.5" ></text>
</g>
<g >
<title>runtime.walltime (6 samples, 0.13%)</title><rect x="130.9" y="165" width="1.5" height="15.0" fill="rgb(237,103,51)" rx="2" ry="2" />
<text  x="133.94" y="175.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/protocol.ReadStream (25 samples, 0.52%)</title><rect x="320.9" y="309" width="6.2" height="15.0" fill="rgb(247,46,41)" rx="2" ry="2" />
<text  x="323.89" y="319.5" ></text>
</g>
<g >
<title>runtime.wakep (3 samples, 0.06%)</title><rect x="707.5" y="245" width="0.7" height="15.0" fill="rgb(205,192,8)" rx="2" ry="2" />
<text  x="710.46" y="255.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock_handoff (5 samples, 0.10%)</title><rect x="78.8" y="149" width="1.2" height="15.0" fill="rgb(232,103,31)" rx="2" ry="2" />
<text  x="81.76" y="159.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.02%)</title><rect x="1166.8" y="293" width="0.2" height="15.0" fill="rgb(212,130,8)" rx="2" ry="2" />
<text  x="1169.75" y="303.5" ></text>
</g>
<g >
<title>crypto/aes.(*aesCipherAsm).Encrypt (1 samples, 0.02%)</title><rect x="82.5" y="229" width="0.2" height="15.0" fill="rgb(251,126,9)" rx="2" ry="2" />
<text  x="85.47" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).sendPackets (547 samples, 11.47%)</title><rect x="123.8" y="293" width="135.3" height="15.0" fill="rgb(215,60,11)" rx="2" ry="2" />
<text  x="126.77" y="303.5" >github.com/lucas-..</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*ExtendedHeader).parse (2 samples, 0.04%)</title><rect x="83.2" y="229" width="0.5" height="15.0" fill="rgb(213,99,21)" rx="2" ry="2" />
<text  x="86.21" y="239.5" ></text>
</g>
<g >
<title>net.(*UDPConn).WriteTo (466 samples, 9.77%)</title><rect x="138.4" y="229" width="115.2" height="15.0" fill="rgb(248,123,2)" rx="2" ry="2" />
<text  x="141.36" y="239.5" >net.(*UDPConn)..</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).onPacketAcked (2 samples, 0.04%)</title><rect x="85.4" y="197" width="0.5" height="15.0" fill="rgb(244,53,17)" rx="2" ry="2" />
<text  x="88.43" y="207.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.02%)</title><rect x="1156.1" y="197" width="0.3" height="15.0" fill="rgb(217,82,3)" rx="2" ry="2" />
<text  x="1159.12" y="207.5" ></text>
</g>
<g >
<title>time.now (1 samples, 0.02%)</title><rect x="13.0" y="261" width="0.2" height="15.0" fill="rgb(217,152,28)" rx="2" ry="2" />
<text  x="15.97" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*receiveStream).Read (16 samples, 0.34%)</title><rect x="320.9" y="293" width="3.9" height="15.0" fill="rgb(205,23,11)" rx="2" ry="2" />
<text  x="323.89" y="303.5" ></text>
</g>
<g >
<title>runtime.walltime (5 samples, 0.10%)</title><rect x="299.4" y="261" width="1.2" height="15.0" fill="rgb(250,144,46)" rx="2" ry="2" />
<text  x="302.37" y="271.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.02%)</title><rect x="129.0" y="149" width="0.2" height="15.0" fill="rgb(216,173,43)" rx="2" ry="2" />
<text  x="131.96" y="159.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).writeLock (25 samples, 0.52%)</title><rect x="153.5" y="165" width="6.1" height="15.0" fill="rgb(232,123,36)" rx="2" ry="2" />
<text  x="156.45" y="175.5" ></text>
</g>
<g >
<title>runtime.mstart (1,850 samples, 38.78%)</title><rect x="709.2" y="309" width="457.6" height="15.0" fill="rgb(215,0,5)" rx="2" ry="2" />
<text  x="712.20" y="319.5" >runtime.mstart</text>
</g>
<g >
<title>runtime.(*timersBucket).deltimerLocked (1 samples, 0.02%)</title><rect x="122.5" y="213" width="0.3" height="15.0" fill="rgb(249,188,13)" rx="2" ry="2" />
<text  x="125.53" y="223.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.02%)</title><rect x="306.3" y="229" width="0.2" height="15.0" fill="rgb(212,169,16)" rx="2" ry="2" />
<text  x="309.30" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).scheduleSending (2 samples, 0.04%)</title><rect x="344.6" y="245" width="0.5" height="15.0" fill="rgb(231,124,13)" rx="2" ry="2" />
<text  x="347.63" y="255.5" ></text>
</g>
<g >
<title>runtime.startm (2 samples, 0.04%)</title><rect x="375.8" y="229" width="0.5" height="15.0" fill="rgb(231,154,52)" rx="2" ry="2" />
<text  x="378.80" y="239.5" ></text>
</g>
<g >
<title>runtime.mapassign_fast64 (1 samples, 0.02%)</title><rect x="86.4" y="149" width="0.3" height="15.0" fill="rgb(253,21,10)" rx="2" ry="2" />
<text  x="89.42" y="159.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).handlePacket (4 samples, 0.08%)</title><rect x="10.2" y="277" width="1.0" height="15.0" fill="rgb(215,130,22)" rx="2" ry="2" />
<text  x="13.25" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).handleFrame (15 samples, 0.31%)</title><rect x="84.7" y="245" width="3.7" height="15.0" fill="rgb(205,114,42)" rx="2" ry="2" />
<text  x="87.69" y="255.5" ></text>
</g>
<g >
<title>runtime._System (1 samples, 0.02%)</title><rect x="346.9" y="309" width="0.2" height="15.0" fill="rgb(213,159,52)" rx="2" ry="2" />
<text  x="349.86" y="319.5" ></text>
</g>
<g >
<title>time.(*Timer).Stop (2 samples, 0.04%)</title><rect x="122.5" y="261" width="0.5" height="15.0" fill="rgb(221,101,20)" rx="2" ry="2" />
<text  x="125.53" y="271.5" ></text>
</g>
<g >
<title>runtime.sellock (2 samples, 0.04%)</title><rect x="298.4" y="277" width="0.5" height="15.0" fill="rgb(219,199,35)" rx="2" ry="2" />
<text  x="301.38" y="287.5" ></text>
</g>
<g >
<title>runtime.spanOf (1 samples, 0.02%)</title><rect x="352.5" y="101" width="0.3" height="15.0" fill="rgb(252,79,0)" rx="2" ry="2" />
<text  x="355.55" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.02%)</title><rect x="89.1" y="165" width="0.3" height="15.0" fill="rgb(209,210,54)" rx="2" ry="2" />
<text  x="92.14" y="175.5" ></text>
</g>
<g >
<title>runtime.deferproc (2 samples, 0.04%)</title><rect x="345.6" y="277" width="0.5" height="15.0" fill="rgb(228,180,0)" rx="2" ry="2" />
<text  x="348.62" y="287.5" ></text>
</g>
<g >
<title>net.(*netFD).writeTo (457 samples, 9.58%)</title><rect x="140.6" y="197" width="113.0" height="15.0" fill="rgb(214,222,35)" rx="2" ry="2" />
<text  x="143.59" y="207.5" >net.(*netFD)...</text>
</g>
<g >
<title>runtime.greyobject (4 samples, 0.08%)</title><rect x="355.5" y="229" width="1.0" height="15.0" fill="rgb(235,12,15)" rx="2" ry="2" />
<text  x="358.52" y="239.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).RLock (1 samples, 0.02%)</title><rect x="87.9" y="181" width="0.3" height="15.0" fill="rgb(208,216,37)" rx="2" ry="2" />
<text  x="90.91" y="191.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*conn).Write (10 samples, 0.21%)</title><rect x="256.1" y="245" width="2.5" height="15.0" fill="rgb(219,20,41)" rx="2" ry="2" />
<text  x="259.09" y="255.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Marshal (5 samples, 0.10%)</title><rect x="316.9" y="213" width="1.3" height="15.0" fill="rgb(242,38,18)" rx="2" ry="2" />
<text  x="319.93" y="223.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.02%)</title><rect x="299.1" y="261" width="0.3" height="15.0" fill="rgb(247,135,20)" rx="2" ry="2" />
<text  x="302.13" y="271.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/pb.(*Response).XXX_Marshal (3 samples, 0.06%)</title><rect x="307.5" y="213" width="0.8" height="15.0" fill="rgb(221,175,13)" rx="2" ry="2" />
<text  x="310.54" y="223.5" ></text>
</g>
<g >
<title>crypto/aes.(*gcmAsm).Open (2 samples, 0.04%)</title><rect x="82.7" y="213" width="0.5" height="15.0" fill="rgb(245,55,47)" rx="2" ry="2" />
<text  x="85.71" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.02%)</title><rect x="91.6" y="181" width="0.3" height="15.0" fill="rgb(220,149,54)" rx="2" ry="2" />
<text  x="94.62" y="191.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (14 samples, 0.29%)</title><rect x="1152.4" y="277" width="3.5" height="15.0" fill="rgb(231,52,1)" rx="2" ry="2" />
<text  x="1155.41" y="287.5" ></text>
</g>
<g >
<title>runtime.lock (2 samples, 0.04%)</title><rect x="159.9" y="85" width="0.5" height="15.0" fill="rgb(214,189,54)" rx="2" ry="2" />
<text  x="162.88" y="95.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*sendStream).Write (78 samples, 1.63%)</title><rect x="327.3" y="293" width="19.3" height="15.0" fill="rgb(210,6,29)" rx="2" ry="2" />
<text  x="330.32" y="303.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.decodeVarint (1 samples, 0.02%)</title><rect x="302.6" y="181" width="0.2" height="15.0" fill="rgb(224,100,43)" rx="2" ry="2" />
<text  x="305.59" y="191.5" ></text>
</g>
<g >
<title>reflect.funcLayout (4 samples, 0.08%)</title><rect x="311.0" y="181" width="1.0" height="15.0" fill="rgb(223,108,32)" rx="2" ry="2" />
<text  x="314.00" y="191.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/handshake.(*cryptoSetup).GetSealerWithEncryptionLevel (2 samples, 0.04%)</title><rect x="255.6" y="245" width="0.5" height="15.0" fill="rgb(254,58,36)" rx="2" ry="2" />
<text  x="258.60" y="255.5" ></text>
</g>
<g >
<title>runtime.lock (3 samples, 0.06%)</title><rect x="158.6" y="101" width="0.8" height="15.0" fill="rgb(241,98,45)" rx="2" ry="2" />
<text  x="161.64" y="111.5" ></text>
</g>
<g >
<title>runtime.semacquire1 (22 samples, 0.46%)</title><rect x="154.2" y="117" width="5.4" height="15.0" fill="rgb(242,193,48)" rx="2" ry="2" />
<text  x="157.19" y="127.5" ></text>
</g>
<g >
<title>syscall.(*SockaddrInet6).sockaddr (8 samples, 0.17%)</title><rect x="160.9" y="149" width="1.9" height="15.0" fill="rgb(249,50,37)" rx="2" ry="2" />
<text  x="163.87" y="159.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).determineNewlyAckedPackets (2 samples, 0.04%)</title><rect x="84.9" y="197" width="0.5" height="15.0" fill="rgb(241,173,1)" rx="2" ry="2" />
<text  x="87.94" y="207.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (2 samples, 0.04%)</title><rect x="18.4" y="101" width="0.5" height="15.0" fill="rgb(234,79,5)" rx="2" ry="2" />
<text  x="21.41" y="111.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*packetNumberGenerator).Validate (1 samples, 0.02%)</title><rect x="84.7" y="197" width="0.2" height="15.0" fill="rgb(217,182,50)" rx="2" ry="2" />
<text  x="87.69" y="207.5" ></text>
</g>
<g >
<title>time.now (5 samples, 0.10%)</title><rect x="299.4" y="277" width="1.2" height="15.0" fill="rgb(252,47,48)" rx="2" ry="2" />
<text  x="302.37" y="287.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).WriteByte (1 samples, 0.02%)</title><rect x="133.9" y="213" width="0.3" height="15.0" fill="rgb(226,119,6)" rx="2" ry="2" />
<text  x="136.91" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetHandlerMap).handlePacket (12 samples, 0.25%)</title><rect x="10.2" y="293" width="3.0" height="15.0" fill="rgb(249,165,29)" rx="2" ry="2" />
<text  x="13.25" y="303.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.02%)</title><rect x="84.0" y="213" width="0.2" height="15.0" fill="rgb(253,149,41)" rx="2" ry="2" />
<text  x="86.95" y="223.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.04%)</title><rect x="127.7" y="197" width="0.5" height="15.0" fill="rgb(253,213,50)" rx="2" ry="2" />
<text  x="130.73" y="207.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).WriteTo (10 samples, 0.21%)</title><rect x="256.1" y="181" width="2.5" height="15.0" fill="rgb(215,214,37)" rx="2" ry="2" />
<text  x="259.09" y="191.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).wait (1 samples, 0.02%)</title><rect x="14.2" y="213" width="0.3" height="15.0" fill="rgb(230,33,27)" rx="2" ry="2" />
<text  x="17.20" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="306.3" y="245" width="0.2" height="15.0" fill="rgb(206,150,36)" rx="2" ry="2" />
<text  x="309.30" y="255.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (1 samples, 0.02%)</title><rect x="125.5" y="69" width="0.2" height="15.0" fill="rgb(229,147,45)" rx="2" ry="2" />
<text  x="128.50" y="79.5" ></text>
</g>
<g >
<title>time.Until (2 samples, 0.04%)</title><rect x="123.0" y="261" width="0.5" height="15.0" fill="rgb(226,71,27)" rx="2" ry="2" />
<text  x="126.03" y="271.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.06%)</title><rect x="708.5" y="213" width="0.7" height="15.0" fill="rgb(216,85,30)" rx="2" ry="2" />
<text  x="711.45" y="223.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.(*Msg).Decode (15 samples, 0.31%)</title><rect x="301.8" y="277" width="3.8" height="15.0" fill="rgb(223,87,16)" rx="2" ry="2" />
<text  x="304.85" y="287.5" ></text>
</g>
<g >
<title>runtime.chanrecv1 (2 samples, 0.04%)</title><rect x="345.1" y="277" width="0.5" height="15.0" fill="rgb(243,34,32)" rx="2" ry="2" />
<text  x="348.13" y="287.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (25 samples, 0.52%)</title><rect x="369.6" y="197" width="6.2" height="15.0" fill="rgb(206,108,34)" rx="2" ry="2" />
<text  x="372.61" y="207.5" ></text>
</g>
<g >
<title>runtime.semasleep (136 samples, 2.85%)</title><rect x="673.6" y="213" width="33.6" height="15.0" fill="rgb(218,203,29)" rx="2" ry="2" />
<text  x="676.58" y="223.5" >ru..</text>
</g>
<g >
<title>runtime.gcAssistAlloc (6 samples, 0.13%)</title><rect x="325.6" y="261" width="1.5" height="15.0" fill="rgb(218,116,6)" rx="2" ry="2" />
<text  x="328.59" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (1 samples, 0.02%)</title><rect x="349.3" y="229" width="0.3" height="15.0" fill="rgb(249,118,14)" rx="2" ry="2" />
<text  x="352.33" y="239.5" ></text>
</g>
<g >
<title>time.stopTimer (2 samples, 0.04%)</title><rect x="122.5" y="245" width="0.5" height="15.0" fill="rgb(243,9,15)" rx="2" ry="2" />
<text  x="125.53" y="255.5" ></text>
</g>
<g >
<title>runtime.forEachP (14 samples, 0.29%)</title><rect x="1152.4" y="261" width="3.5" height="15.0" fill="rgb(252,4,9)" rx="2" ry="2" />
<text  x="1155.41" y="271.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.appendVarint (1 samples, 0.02%)</title><rect x="305.6" y="181" width="0.2" height="15.0" fill="rgb(248,223,1)" rx="2" ry="2" />
<text  x="308.56" y="191.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*AckFrame).Write (1 samples, 0.02%)</title><rect x="133.9" y="229" width="0.3" height="15.0" fill="rgb(248,181,38)" rx="2" ry="2" />
<text  x="136.91" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packedPacket).ToAckHandlerPacket (1 samples, 0.02%)</title><rect x="124.8" y="261" width="0.2" height="15.0" fill="rgb(210,202,36)" rx="2" ry="2" />
<text  x="127.76" y="271.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.06%)</title><rect x="79.3" y="101" width="0.7" height="15.0" fill="rgb(254,27,48)" rx="2" ry="2" />
<text  x="82.25" y="111.5" ></text>
</g>
<g >
<title>runtime.gosched_m (2 samples, 0.04%)</title><rect x="608.3" y="293" width="0.5" height="15.0" fill="rgb(216,167,24)" rx="2" ry="2" />
<text  x="611.29" y="303.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_lock (5 samples, 0.10%)</title><rect x="1146.0" y="197" width="1.2" height="15.0" fill="rgb(243,181,34)" rx="2" ry="2" />
<text  x="1148.98" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).stopRetransmissionsFor (1 samples, 0.02%)</title><rect x="85.7" y="181" width="0.2" height="15.0" fill="rgb(224,170,34)" rx="2" ry="2" />
<text  x="88.68" y="191.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/handshake.(*sealer).Overhead (2 samples, 0.04%)</title><rect x="137.1" y="245" width="0.5" height="15.0" fill="rgb(215,114,48)" rx="2" ry="2" />
<text  x="140.13" y="255.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast.func1 (1 samples, 0.02%)</title><rect x="1151.7" y="277" width="0.2" height="15.0" fill="rgb(247,115,51)" rx="2" ry="2" />
<text  x="1154.66" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*receivedPacketTracker).isMissing (1 samples, 0.02%)</title><rect x="88.7" y="213" width="0.2" height="15.0" fill="rgb(226,11,49)" rx="2" ry="2" />
<text  x="91.65" y="223.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.02%)</title><rect x="13.0" y="245" width="0.2" height="15.0" fill="rgb(245,65,33)" rx="2" ry="2" />
<text  x="15.97" y="255.5" ></text>
</g>
<g >
<title>reflect.Value.call (9 samples, 0.19%)</title><rect x="310.3" y="197" width="2.2" height="15.0" fill="rgb(208,143,43)" rx="2" ry="2" />
<text  x="313.26" y="207.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (8 samples, 0.17%)</title><rect x="303.1" y="165" width="2.0" height="15.0" fill="rgb(232,213,2)" rx="2" ry="2" />
<text  x="306.08" y="175.5" ></text>
</g>
<g >
<title>runtime.netpoll (1 samples, 0.02%)</title><rect x="1155.9" y="245" width="0.2" height="15.0" fill="rgb(237,204,1)" rx="2" ry="2" />
<text  x="1158.87" y="255.5" ></text>
</g>
<g >
<title>time.when (1 samples, 0.02%)</title><rect x="122.3" y="245" width="0.2" height="15.0" fill="rgb(230,50,0)" rx="2" ry="2" />
<text  x="125.29" y="255.5" ></text>
</g>
<g >
<title>runtime.netpoll (19 samples, 0.40%)</title><rect x="360.2" y="245" width="4.7" height="15.0" fill="rgb(238,143,28)" rx="2" ry="2" />
<text  x="363.22" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*AckFrame).LargestAcked (1 samples, 0.02%)</title><rect x="88.7" y="197" width="0.2" height="15.0" fill="rgb(210,202,53)" rx="2" ry="2" />
<text  x="91.65" y="207.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.02%)</title><rect x="79.5" y="53" width="0.2" height="15.0" fill="rgb(210,74,36)" rx="2" ry="2" />
<text  x="82.50" y="63.5" ></text>
</g>
<g >
<title>runtime.schedule (3 samples, 0.06%)</title><rect x="708.5" y="245" width="0.7" height="15.0" fill="rgb(231,154,39)" rx="2" ry="2" />
<text  x="711.45" y="255.5" ></text>
</g>
<g >
<title>runtime.pollWork (1 samples, 0.02%)</title><rect x="1152.2" y="245" width="0.2" height="15.0" fill="rgb(232,74,3)" rx="2" ry="2" />
<text  x="1155.16" y="255.5" ></text>
</g>
<g >
<title>runtime.gorecover (1 samples, 0.02%)</title><rect x="318.4" y="261" width="0.3" height="15.0" fill="rgb(241,121,35)" rx="2" ry="2" />
<text  x="321.42" y="271.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*marshalInfo).marshal (2 samples, 0.04%)</title><rect x="305.6" y="213" width="0.5" height="15.0" fill="rgb(212,1,35)" rx="2" ry="2" />
<text  x="308.56" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*ExtendedHeader).writeShortHeader (3 samples, 0.06%)</title><rect x="134.2" y="213" width="0.7" height="15.0" fill="rgb(242,71,11)" rx="2" ry="2" />
<text  x="137.16" y="223.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.02%)</title><rect x="122.8" y="213" width="0.2" height="15.0" fill="rgb(236,77,45)" rx="2" ry="2" />
<text  x="125.78" y="223.5" ></text>
</g>
<g >
<title>runtime.funcPC (1 samples, 0.02%)</title><rect x="608.0" y="213" width="0.3" height="15.0" fill="rgb(250,49,5)" rx="2" ry="2" />
<text  x="611.04" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/utils.bigEndian.ReadUintN (1 samples, 0.02%)</title><rect x="83.5" y="181" width="0.2" height="15.0" fill="rgb(217,136,50)" rx="2" ry="2" />
<text  x="86.46" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc (10 samples, 0.21%)</title><rect x="303.1" y="245" width="2.5" height="15.0" fill="rgb(242,77,27)" rx="2" ry="2" />
<text  x="306.08" y="255.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (121 samples, 2.54%)</title><rect x="92.1" y="165" width="29.9" height="15.0" fill="rgb(251,85,37)" rx="2" ry="2" />
<text  x="95.11" y="175.5" >ru..</text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.02%)</title><rect x="130.4" y="101" width="0.3" height="15.0" fill="rgb(212,79,20)" rx="2" ry="2" />
<text  x="133.45" y="111.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*ExtendedHeader).GetLength (1 samples, 0.02%)</title><rect x="137.6" y="245" width="0.3" height="15.0" fill="rgb(254,155,1)" rx="2" ry="2" />
<text  x="140.62" y="255.5" ></text>
</g>
<g >
<title>runtime.mapassign_fast64 (1 samples, 0.02%)</title><rect x="344.4" y="229" width="0.2" height="15.0" fill="rgb(240,43,23)" rx="2" ry="2" />
<text  x="347.39" y="239.5" ></text>
</g>
<g >
<title>runtime.deferreturn (2 samples, 0.04%)</title><rect x="253.6" y="245" width="0.5" height="15.0" fill="rgb(253,160,36)" rx="2" ry="2" />
<text  x="256.62" y="255.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.02%)</title><rect x="14.5" y="229" width="0.2" height="15.0" fill="rgb(224,63,31)" rx="2" ry="2" />
<text  x="17.45" y="239.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (1 samples, 0.02%)</title><rect x="258.3" y="101" width="0.3" height="15.0" fill="rgb(240,80,34)" rx="2" ry="2" />
<text  x="261.32" y="111.5" ></text>
</g>
<g >
<title>runtime.aeshash64 (1 samples, 0.02%)</title><rect x="344.4" y="213" width="0.2" height="15.0" fill="rgb(213,199,24)" rx="2" ry="2" />
<text  x="347.39" y="223.5" ></text>
</g>
<g >
<title>runtime.gopark (1 samples, 0.02%)</title><rect x="346.6" y="245" width="0.3" height="15.0" fill="rgb(248,209,16)" rx="2" ry="2" />
<text  x="349.61" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetPacker).maybePackCryptoPacket (7 samples, 0.15%)</title><rect x="130.7" y="245" width="1.7" height="15.0" fill="rgb(237,162,23)" rx="2" ry="2" />
<text  x="133.70" y="255.5" ></text>
</g>
<g >
<title>runtime.notetsleep (14 samples, 0.29%)</title><rect x="1152.4" y="245" width="3.5" height="15.0" fill="rgb(241,115,17)" rx="2" ry="2" />
<text  x="1155.41" y="255.5" ></text>
</g>
<g >
<title>gosave (2 samples, 0.04%)</title><rect x="300.1" y="213" width="0.5" height="15.0" fill="rgb(250,111,1)" rx="2" ry="2" />
<text  x="303.12" y="223.5" ></text>
</g>
<g >
<title>runtime.semawakeup (39 samples, 0.82%)</title><rect x="1156.6" y="197" width="9.7" height="15.0" fill="rgb(217,20,27)" rx="2" ry="2" />
<text  x="1159.61" y="207.5" ></text>
</g>
<g >
<title>net.(*UDPConn).WriteTo (10 samples, 0.21%)</title><rect x="256.1" y="229" width="2.5" height="15.0" fill="rgb(233,121,3)" rx="2" ry="2" />
<text  x="259.09" y="239.5" ></text>
</g>
<g >
<title>runtime.scanobject (2 samples, 0.04%)</title><rect x="18.4" y="85" width="0.5" height="15.0" fill="rgb(227,101,51)" rx="2" ry="2" />
<text  x="21.41" y="95.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func3 (2 samples, 0.04%)</title><rect x="1155.9" y="277" width="0.5" height="15.0" fill="rgb(236,13,0)" rx="2" ry="2" />
<text  x="1158.87" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (4 samples, 0.08%)</title><rect x="129.7" y="165" width="1.0" height="15.0" fill="rgb(248,2,15)" rx="2" ry="2" />
<text  x="132.71" y="175.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).handleUnpackedPacket (21 samples, 0.44%)</title><rect x="84.2" y="261" width="5.2" height="15.0" fill="rgb(205,102,23)" rx="2" ry="2" />
<text  x="87.20" y="271.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Write (1 samples, 0.02%)</title><rect x="134.4" y="197" width="0.3" height="15.0" fill="rgb(243,96,19)" rx="2" ry="2" />
<text  x="137.41" y="207.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.02%)</title><rect x="18.4" y="69" width="0.3" height="15.0" fill="rgb(250,51,47)" rx="2" ry="2" />
<text  x="21.41" y="79.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (3 samples, 0.06%)</title><rect x="708.5" y="229" width="0.7" height="15.0" fill="rgb(211,224,40)" rx="2" ry="2" />
<text  x="711.45" y="239.5" ></text>
</g>
<g >
<title>runtime.freedefer (1 samples, 0.02%)</title><rect x="324.1" y="213" width="0.3" height="15.0" fill="rgb(218,178,52)" rx="2" ry="2" />
<text  x="327.11" y="223.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.02%)</title><rect x="13.2" y="213" width="0.3" height="15.0" fill="rgb(235,18,6)" rx="2" ry="2" />
<text  x="16.22" y="223.5" ></text>
</g>
<g >
<title>runtime.semasleep (25 samples, 0.52%)</title><rect x="369.6" y="213" width="6.2" height="15.0" fill="rgb(240,111,23)" rx="2" ry="2" />
<text  x="372.61" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (5 samples, 0.10%)</title><rect x="78.8" y="165" width="1.2" height="15.0" fill="rgb(226,82,16)" rx="2" ry="2" />
<text  x="81.76" y="175.5" ></text>
</g>
<g >
<title>reflect.(*rtype).uncommon (1 samples, 0.02%)</title><rect x="315.9" y="181" width="0.3" height="15.0" fill="rgb(228,128,2)" rx="2" ry="2" />
<text  x="318.94" y="191.5" ></text>
</g>
<g >
<title>runtime.lock (5 samples, 0.10%)</title><rect x="356.8" y="277" width="1.2" height="15.0" fill="rgb(236,205,11)" rx="2" ry="2" />
<text  x="359.75" y="287.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.02%)</title><rect x="128.2" y="165" width="0.3" height="15.0" fill="rgb(241,133,49)" rx="2" ry="2" />
<text  x="131.22" y="175.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.02%)</title><rect x="307.0" y="197" width="0.3" height="15.0" fill="rgb(249,73,14)" rx="2" ry="2" />
<text  x="310.04" y="207.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.02%)</title><rect x="315.0" y="197" width="0.2" height="15.0" fill="rgb(212,66,1)" rx="2" ry="2" />
<text  x="317.95" y="207.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.02%)</title><rect x="1175.4" y="245" width="0.3" height="15.0" fill="rgb(223,228,11)" rx="2" ry="2" />
<text  x="1178.41" y="255.5" ></text>
</g>
<g >
<title>runtime.siftdownTimer (1 samples, 0.02%)</title><rect x="122.5" y="197" width="0.3" height="15.0" fill="rgb(220,147,32)" rx="2" ry="2" />
<text  x="125.53" y="207.5" ></text>
</g>
<g >
<title>runtime.newdefer (1 samples, 0.02%)</title><rect x="345.9" y="261" width="0.2" height="15.0" fill="rgb(214,48,50)" rx="2" ry="2" />
<text  x="348.87" y="271.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (39 samples, 0.82%)</title><rect x="1156.6" y="277" width="9.7" height="15.0" fill="rgb(228,177,50)" rx="2" ry="2" />
<text  x="1159.61" y="287.5" ></text>
</g>
<g >
<title>runtime.runqgrab (19 samples, 0.40%)</title><rect x="364.9" y="229" width="4.7" height="15.0" fill="rgb(223,135,35)" rx="2" ry="2" />
<text  x="367.92" y="239.5" ></text>
</g>
<g >
<title>runtime.tracebackdefers (1 samples, 0.02%)</title><rect x="353.0" y="181" width="0.3" height="15.0" fill="rgb(212,190,42)" rx="2" ry="2" />
<text  x="356.04" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (1 samples, 0.02%)</title><rect x="350.6" y="245" width="0.2" height="15.0" fill="rgb(249,157,23)" rx="2" ry="2" />
<text  x="353.57" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (4 samples, 0.08%)</title><rect x="129.7" y="149" width="1.0" height="15.0" fill="rgb(213,98,39)" rx="2" ry="2" />
<text  x="132.71" y="159.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.02%)</title><rect x="159.4" y="101" width="0.2" height="15.0" fill="rgb(211,204,54)" rx="2" ry="2" />
<text  x="162.39" y="111.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*PacketList).PushBack (1 samples, 0.02%)</title><rect x="255.1" y="213" width="0.2" height="15.0" fill="rgb(206,56,13)" rx="2" ry="2" />
<text  x="258.10" y="223.5" ></text>
</g>
<g >
<title>runtime.handoff (1 samples, 0.02%)</title><rect x="90.6" y="117" width="0.3" height="15.0" fill="rgb(209,18,30)" rx="2" ry="2" />
<text  x="93.63" y="127.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (22 samples, 0.46%)</title><rect x="351.1" y="309" width="5.4" height="15.0" fill="rgb(228,117,7)" rx="2" ry="2" />
<text  x="354.06" y="319.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHistory).GetPacket (1 samples, 0.02%)</title><rect x="85.9" y="197" width="0.3" height="15.0" fill="rgb(234,76,8)" rx="2" ry="2" />
<text  x="88.93" y="207.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (2 samples, 0.04%)</title><rect x="325.1" y="197" width="0.5" height="15.0" fill="rgb(245,50,3)" rx="2" ry="2" />
<text  x="328.10" y="207.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.02%)</title><rect x="122.0" y="213" width="0.3" height="15.0" fill="rgb(226,203,22)" rx="2" ry="2" />
<text  x="125.04" y="223.5" ></text>
</g>
<g >
<title>runtime.nanotime (11 samples, 0.23%)</title><rect x="1172.4" y="261" width="2.8" height="15.0" fill="rgb(210,92,23)" rx="2" ry="2" />
<text  x="1175.44" y="271.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.02%)</title><rect x="255.3" y="229" width="0.3" height="15.0" fill="rgb(232,164,26)" rx="2" ry="2" />
<text  x="258.35" y="239.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (22 samples, 0.46%)</title><rect x="351.1" y="277" width="5.4" height="15.0" fill="rgb(237,114,13)" rx="2" ry="2" />
<text  x="354.06" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/congestion.(*cubicSender).TimeUntilSend (1 samples, 0.02%)</title><rect x="254.9" y="229" width="0.2" height="15.0" fill="rgb(238,125,41)" rx="2" ry="2" />
<text  x="257.85" y="239.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeue (1 samples, 0.02%)</title><rect x="86.9" y="133" width="0.3" height="15.0" fill="rgb(213,176,28)" rx="2" ry="2" />
<text  x="89.92" y="143.5" ></text>
</g>
<g >
<title>runtime.libcCall (2 samples, 0.04%)</title><rect x="131.9" y="149" width="0.5" height="15.0" fill="rgb(250,188,9)" rx="2" ry="2" />
<text  x="134.93" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.02%)</title><rect x="255.3" y="197" width="0.3" height="15.0" fill="rgb(220,190,33)" rx="2" ry="2" />
<text  x="258.35" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*Header).toExtendedHeader (2 samples, 0.04%)</title><rect x="83.7" y="229" width="0.5" height="15.0" fill="rgb(212,154,34)" rx="2" ry="2" />
<text  x="86.70" y="239.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.02%)</title><rect x="344.9" y="165" width="0.2" height="15.0" fill="rgb(209,136,41)" rx="2" ry="2" />
<text  x="347.88" y="175.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.02%)</title><rect x="1151.7" y="229" width="0.2" height="15.0" fill="rgb(227,178,16)" rx="2" ry="2" />
<text  x="1154.66" y="239.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.02%)</title><rect x="140.1" y="133" width="0.2" height="15.0" fill="rgb(241,11,7)" rx="2" ry="2" />
<text  x="143.09" y="143.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*frameSorter).push (1 samples, 0.02%)</title><rect x="86.4" y="165" width="0.3" height="15.0" fill="rgb(207,117,25)" rx="2" ry="2" />
<text  x="89.42" y="175.5" ></text>
</g>
<g >
<title>runtime.semasleep (938 samples, 19.66%)</title><rect x="376.3" y="245" width="232.0" height="15.0" fill="rgb(206,81,47)" rx="2" ry="2" />
<text  x="379.29" y="255.5" >runtime.semasleep</text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.02%)</title><rect x="124.8" y="197" width="0.2" height="15.0" fill="rgb(223,57,9)" rx="2" ry="2" />
<text  x="127.76" y="207.5" ></text>
</g>
<g >
<title>reflect.methodReceiver (1 samples, 0.02%)</title><rect x="312.0" y="181" width="0.2" height="15.0" fill="rgb(238,37,26)" rx="2" ry="2" />
<text  x="314.99" y="191.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.02%)</title><rect x="128.0" y="165" width="0.2" height="15.0" fill="rgb(249,205,21)" rx="2" ry="2" />
<text  x="130.98" y="175.5" ></text>
</g>
<g >
<title>runtime.deltimer (2 samples, 0.04%)</title><rect x="122.5" y="229" width="0.5" height="15.0" fill="rgb(216,25,34)" rx="2" ry="2" />
<text  x="125.53" y="239.5" ></text>
</g>
<g >
<title>crypto/aes.gcmAesFinish (1 samples, 0.02%)</title><rect x="83.0" y="197" width="0.2" height="15.0" fill="rgb(228,114,14)" rx="2" ry="2" />
<text  x="85.96" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (2 samples, 0.04%)</title><rect x="375.8" y="181" width="0.5" height="15.0" fill="rgb(212,191,2)" rx="2" ry="2" />
<text  x="378.80" y="191.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock_handoff (1 samples, 0.02%)</title><rect x="1170.5" y="245" width="0.2" height="15.0" fill="rgb(246,228,16)" rx="2" ry="2" />
<text  x="1173.46" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).insert (1 samples, 0.02%)</title><rect x="349.3" y="213" width="0.3" height="15.0" fill="rgb(248,179,1)" rx="2" ry="2" />
<text  x="352.33" y="223.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (1 samples, 0.02%)</title><rect x="308.5" y="181" width="0.3" height="15.0" fill="rgb(210,26,0)" rx="2" ry="2" />
<text  x="311.52" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.02%)</title><rect x="255.3" y="165" width="0.3" height="15.0" fill="rgb(207,171,41)" rx="2" ry="2" />
<text  x="258.35" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.02%)</title><rect x="91.6" y="197" width="0.3" height="15.0" fill="rgb(240,35,28)" rx="2" ry="2" />
<text  x="94.62" y="207.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_fast64 (1 samples, 0.02%)</title><rect x="85.9" y="181" width="0.3" height="15.0" fill="rgb(225,199,16)" rx="2" ry="2" />
<text  x="88.93" y="191.5" ></text>
</g>
<g >
<title>runtime.acquireSudog (1 samples, 0.02%)</title><rect x="324.6" y="229" width="0.2" height="15.0" fill="rgb(205,146,9)" rx="2" ry="2" />
<text  x="327.60" y="239.5" ></text>
</g>
<g >
<title>runtime.selectnbsend (1 samples, 0.02%)</title><rect x="86.9" y="165" width="0.3" height="15.0" fill="rgb(207,222,37)" rx="2" ry="2" />
<text  x="89.92" y="175.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.04%)</title><rect x="135.4" y="229" width="0.5" height="15.0" fill="rgb(212,100,30)" rx="2" ry="2" />
<text  x="138.40" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.parseHeader (1 samples, 0.02%)</title><rect x="91.6" y="261" width="0.3" height="15.0" fill="rgb(218,134,43)" rx="2" ry="2" />
<text  x="94.62" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*frameSorter).Pop (13 samples, 0.27%)</title><rect x="320.9" y="245" width="3.2" height="15.0" fill="rgb(225,145,42)" rx="2" ry="2" />
<text  x="323.89" y="255.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*marshalInfo).marshal (2 samples, 0.04%)</title><rect x="317.2" y="165" width="0.5" height="15.0" fill="rgb(231,180,48)" rx="2" ry="2" />
<text  x="320.18" y="175.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.02%)</title><rect x="1156.1" y="245" width="0.3" height="15.0" fill="rgb(241,152,21)" rx="2" ry="2" />
<text  x="1159.12" y="255.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.appendVarint (1 samples, 0.02%)</title><rect x="305.8" y="181" width="0.3" height="15.0" fill="rgb(233,67,40)" rx="2" ry="2" />
<text  x="308.80" y="191.5" ></text>
</g>
<g >
<title>runtime.libcCall (2 samples, 0.04%)</title><rect x="607.5" y="213" width="0.5" height="15.0" fill="rgb(242,222,43)" rx="2" ry="2" />
<text  x="610.54" y="223.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.02%)</title><rect x="84.0" y="181" width="0.2" height="15.0" fill="rgb(247,153,53)" rx="2" ry="2" />
<text  x="86.95" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="349.3" y="277" width="0.3" height="15.0" fill="rgb(208,70,27)" rx="2" ry="2" />
<text  x="352.33" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*ExtendedHeader).Write (3 samples, 0.06%)</title><rect x="134.2" y="229" width="0.7" height="15.0" fill="rgb(243,101,27)" rx="2" ry="2" />
<text  x="137.16" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (58 samples, 1.22%)</title><rect x="1175.7" y="245" width="14.3" height="15.0" fill="rgb(218,131,4)" rx="2" ry="2" />
<text  x="1178.65" y="255.5" ></text>
</g>
<g >
<title>runtime.growslice (6 samples, 0.13%)</title><rect x="325.6" y="293" width="1.5" height="15.0" fill="rgb(235,178,5)" rx="2" ry="2" />
<text  x="328.59" y="303.5" ></text>
</g>
<g >
<title>runtime.aeshashbody (1 samples, 0.02%)</title><rect x="12.2" y="261" width="0.3" height="15.0" fill="rgb(232,171,21)" rx="2" ry="2" />
<text  x="15.23" y="271.5" ></text>
</g>
<g >
<title>internal/poll.runtime_Semacquire (22 samples, 0.46%)</title><rect x="154.2" y="133" width="5.4" height="15.0" fill="rgb(214,20,27)" rx="2" ry="2" />
<text  x="157.19" y="143.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (2 samples, 0.04%)</title><rect x="1166.3" y="277" width="0.5" height="15.0" fill="rgb(238,193,10)" rx="2" ry="2" />
<text  x="1169.26" y="287.5" ></text>
</g>
<g >
<title>net.(*UDPConn).readFrom (273 samples, 5.72%)</title><rect x="13.5" y="277" width="67.5" height="15.0" fill="rgb(242,47,39)" rx="2" ry="2" />
<text  x="16.46" y="287.5" >net.(*U..</text>
</g>
<g >
<title>runtime.scanblock (1 samples, 0.02%)</title><rect x="307.0" y="85" width="0.3" height="15.0" fill="rgb(251,113,35)" rx="2" ry="2" />
<text  x="310.04" y="95.5" ></text>
</g>
<g >
<title>syscall.sendto (9 samples, 0.19%)</title><rect x="256.3" y="149" width="2.3" height="15.0" fill="rgb(209,130,15)" rx="2" ry="2" />
<text  x="259.34" y="159.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).ReceivedAck (6 samples, 0.13%)</title><rect x="84.7" y="213" width="1.5" height="15.0" fill="rgb(254,44,37)" rx="2" ry="2" />
<text  x="87.69" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (3 samples, 0.06%)</title><rect x="708.5" y="181" width="0.7" height="15.0" fill="rgb(250,174,30)" rx="2" ry="2" />
<text  x="711.45" y="191.5" ></text>
</g>
<g >
<title>runtime.goready (2 samples, 0.04%)</title><rect x="325.1" y="229" width="0.5" height="15.0" fill="rgb(217,227,31)" rx="2" ry="2" />
<text  x="328.10" y="239.5" ></text>
</g>
<g >
<title>runtime.sweepone (1 samples, 0.02%)</title><rect x="318.2" y="149" width="0.2" height="15.0" fill="rgb(226,6,50)" rx="2" ry="2" />
<text  x="321.17" y="159.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.02%)</title><rect x="255.8" y="229" width="0.3" height="15.0" fill="rgb(244,171,11)" rx="2" ry="2" />
<text  x="258.84" y="239.5" ></text>
</g>
<g >
<title>runtime.chanrecv (2 samples, 0.04%)</title><rect x="345.1" y="261" width="0.5" height="15.0" fill="rgb(242,217,14)" rx="2" ry="2" />
<text  x="348.13" y="271.5" ></text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (1 samples, 0.02%)</title><rect x="350.6" y="165" width="0.2" height="15.0" fill="rgb(241,168,7)" rx="2" ry="2" />
<text  x="353.57" y="175.5" ></text>
</g>
<g >
<title>runtime.(*_type).typeOff (1 samples, 0.02%)</title><rect x="316.4" y="165" width="0.3" height="15.0" fill="rgb(222,66,48)" rx="2" ry="2" />
<text  x="319.44" y="175.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (6 samples, 0.13%)</title><rect x="325.6" y="229" width="1.5" height="15.0" fill="rgb(222,127,52)" rx="2" ry="2" />
<text  x="328.59" y="239.5" ></text>
</g>
<g >
<title>net.(*netFD).writeTo (10 samples, 0.21%)</title><rect x="256.1" y="197" width="2.5" height="15.0" fill="rgb(212,28,11)" rx="2" ry="2" />
<text  x="259.09" y="207.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/pb.(*Msg).XXX_Unmarshal (3 samples, 0.06%)</title><rect x="302.1" y="245" width="0.7" height="15.0" fill="rgb(221,141,35)" rx="2" ry="2" />
<text  x="305.09" y="255.5" ></text>
</g>
<g >
<title>time.now (4 samples, 0.08%)</title><rect x="128.2" y="181" width="1.0" height="15.0" fill="rgb(216,174,34)" rx="2" ry="2" />
<text  x="131.22" y="191.5" ></text>
</g>
<g >
<title>runtime.assertE2I (1 samples, 0.02%)</title><rect x="316.7" y="213" width="0.2" height="15.0" fill="rgb(217,175,44)" rx="2" ry="2" />
<text  x="319.69" y="223.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.02%)</title><rect x="312.2" y="149" width="0.3" height="15.0" fill="rgb(231,181,3)" rx="2" ry="2" />
<text  x="315.23" y="159.5" ></text>
</g>
<g >
<title>fmt.newPrinter (1 samples, 0.02%)</title><rect x="255.6" y="197" width="0.2" height="15.0" fill="rgb(245,18,49)" rx="2" ry="2" />
<text  x="258.60" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).OnAlarm (1 samples, 0.02%)</title><rect x="259.1" y="293" width="0.2" height="15.0" fill="rgb(231,76,39)" rx="2" ry="2" />
<text  x="262.06" y="303.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Size (2 samples, 0.04%)</title><rect x="317.7" y="181" width="0.5" height="15.0" fill="rgb(234,190,48)" rx="2" ry="2" />
<text  x="320.68" y="191.5" ></text>
</g>
<g >
<title>memeqbody (1 samples, 0.02%)</title><rect x="12.0" y="261" width="0.2" height="15.0" fill="rgb(208,167,42)" rx="2" ry="2" />
<text  x="14.98" y="271.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (4 samples, 0.08%)</title><rect x="314.0" y="197" width="1.0" height="15.0" fill="rgb(234,64,22)" rx="2" ry="2" />
<text  x="316.97" y="207.5" ></text>
</g>
<g >
<title>runtime.notesleep (938 samples, 19.66%)</title><rect x="376.3" y="261" width="232.0" height="15.0" fill="rgb(213,177,25)" rx="2" ry="2" />
<text  x="379.29" y="271.5" >runtime.notesleep</text>
</g>
<g >
<title>reflect.(*rtype).In (1 samples, 0.02%)</title><rect x="310.8" y="181" width="0.2" height="15.0" fill="rgb(237,226,27)" rx="2" ry="2" />
<text  x="313.75" y="191.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.02%)</title><rect x="350.6" y="149" width="0.2" height="15.0" fill="rgb(209,116,20)" rx="2" ry="2" />
<text  x="353.57" y="159.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetPacker).writeAndSealPacket (14 samples, 0.29%)</title><rect x="132.4" y="245" width="3.5" height="15.0" fill="rgb(206,219,21)" rx="2" ry="2" />
<text  x="135.43" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (8 samples, 0.17%)</title><rect x="303.1" y="197" width="2.0" height="15.0" fill="rgb(212,126,50)" rx="2" ry="2" />
<text  x="306.08" y="207.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.04%)</title><rect x="140.1" y="165" width="0.5" height="15.0" fill="rgb(234,91,36)" rx="2" ry="2" />
<text  x="143.09" y="175.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).SentPacket (3 samples, 0.06%)</title><rect x="254.6" y="261" width="0.7" height="15.0" fill="rgb(227,122,48)" rx="2" ry="2" />
<text  x="257.61" y="271.5" ></text>
</g>
<g >
<title>crypto/aes.gcmAesEnc (1 samples, 0.02%)</title><rect x="133.7" y="181" width="0.2" height="15.0" fill="rgb(210,227,25)" rx="2" ry="2" />
<text  x="136.66" y="191.5" ></text>
</g>
<g >
<title>runtime.selectgo (162 samples, 3.40%)</title><rect x="259.3" y="293" width="40.1" height="15.0" fill="rgb(245,103,39)" rx="2" ry="2" />
<text  x="262.31" y="303.5" >run..</text>
</g>
<g >
<title>runtime.(*mspan).sweep (3 samples, 0.06%)</title><rect x="350.3" y="277" width="0.8" height="15.0" fill="rgb(226,45,16)" rx="2" ry="2" />
<text  x="353.32" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan.func1 (1 samples, 0.02%)</title><rect x="350.6" y="213" width="0.2" height="15.0" fill="rgb(209,209,6)" rx="2" ry="2" />
<text  x="353.57" y="223.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/pb.(*Request).XXX_Unmarshal (1 samples, 0.02%)</title><rect x="306.8" y="213" width="0.2" height="15.0" fill="rgb(230,27,28)" rx="2" ry="2" />
<text  x="309.79" y="223.5" ></text>
</g>
<g >
<title>runtime.osyield (2 samples, 0.04%)</title><rect x="610.8" y="229" width="0.5" height="15.0" fill="rgb(245,39,35)" rx="2" ry="2" />
<text  x="613.76" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (937 samples, 19.64%)</title><rect x="376.3" y="229" width="231.7" height="15.0" fill="rgb(208,33,15)" rx="2" ry="2" />
<text  x="379.29" y="239.5" >runtime.pthread_cond_wait</text>
</g>
<g >
<title>runtime.startm (39 samples, 0.82%)</title><rect x="1156.6" y="229" width="9.7" height="15.0" fill="rgb(254,5,0)" rx="2" ry="2" />
<text  x="1159.61" y="239.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.(*Server).Handler (48 samples, 1.01%)</title><rect x="306.5" y="261" width="11.9" height="15.0" fill="rgb(211,63,50)" rx="2" ry="2" />
<text  x="309.55" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).insert (1 samples, 0.02%)</title><rect x="350.6" y="181" width="0.2" height="15.0" fill="rgb(237,218,35)" rx="2" ry="2" />
<text  x="353.57" y="191.5" ></text>
</g>
<g >
<title>runtime.osyield (2 samples, 0.04%)</title><rect x="159.9" y="69" width="0.5" height="15.0" fill="rgb(231,162,6)" rx="2" ry="2" />
<text  x="162.88" y="79.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*conn).Write (467 samples, 9.79%)</title><rect x="138.1" y="245" width="115.5" height="15.0" fill="rgb(249,35,0)" rx="2" ry="2" />
<text  x="141.12" y="255.5" >github.com/luc..</text>
</g>
<g >
<title>runtime.freedefer (2 samples, 0.04%)</title><rect x="253.6" y="229" width="0.5" height="15.0" fill="rgb(229,84,20)" rx="2" ry="2" />
<text  x="256.62" y="239.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Kind (1 samples, 0.02%)</title><rect x="315.2" y="197" width="0.2" height="15.0" fill="rgb(232,91,12)" rx="2" ry="2" />
<text  x="318.20" y="207.5" ></text>
</g>
<g >
<title>runtime.netpoll (1 samples, 0.02%)</title><rect x="1152.2" y="229" width="0.2" height="15.0" fill="rgb(246,6,53)" rx="2" ry="2" />
<text  x="1155.16" y="239.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (1 samples, 0.02%)</title><rect x="90.6" y="133" width="0.3" height="15.0" fill="rgb(218,58,36)" rx="2" ry="2" />
<text  x="93.63" y="143.5" ></text>
</g>
<g >
<title>runtime.lock (2 samples, 0.04%)</title><rect x="610.8" y="245" width="0.5" height="15.0" fill="rgb(232,85,3)" rx="2" ry="2" />
<text  x="613.76" y="255.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.04%)</title><rect x="313.0" y="213" width="0.5" height="15.0" fill="rgb(223,13,15)" rx="2" ry="2" />
<text  x="315.98" y="223.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (4 samples, 0.08%)</title><rect x="129.7" y="197" width="1.0" height="15.0" fill="rgb(231,197,27)" rx="2" ry="2" />
<text  x="132.71" y="207.5" ></text>
</g>
<g >
<title>syscall.sendto (367 samples, 7.69%)</title><rect x="162.8" y="149" width="90.8" height="15.0" fill="rgb(248,51,9)" rx="2" ry="2" />
<text  x="165.85" y="159.5" >syscall.se..</text>
</g>
<g >
<title>runtime.semasleep (60 samples, 1.26%)</title><rect x="1175.2" y="261" width="14.8" height="15.0" fill="rgb(226,97,12)" rx="2" ry="2" />
<text  x="1178.16" y="271.5" ></text>
</g>
<g >
<title>time.startTimer (121 samples, 2.54%)</title><rect x="92.1" y="245" width="29.9" height="15.0" fill="rgb(243,98,50)" rx="2" ry="2" />
<text  x="95.11" y="255.5" >ti..</text>
</g>
<g >
<title>runtime.lock (1 samples, 0.02%)</title><rect x="298.6" y="261" width="0.3" height="15.0" fill="rgb(207,20,35)" rx="2" ry="2" />
<text  x="301.63" y="271.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Unmarshal (1 samples, 0.02%)</title><rect x="306.8" y="229" width="0.2" height="15.0" fill="rgb(227,162,14)" rx="2" ry="2" />
<text  x="309.79" y="239.5" ></text>
</g>
<g >
<title>runtime.scanobject (7 samples, 0.15%)</title><rect x="303.3" y="149" width="1.8" height="15.0" fill="rgb(237,93,37)" rx="2" ry="2" />
<text  x="306.33" y="159.5" ></text>
</g>
<g >
<title>runtime.wirep (1 samples, 0.02%)</title><rect x="610.5" y="229" width="0.3" height="15.0" fill="rgb(229,197,52)" rx="2" ry="2" />
<text  x="613.51" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.02%)</title><rect x="255.3" y="181" width="0.3" height="15.0" fill="rgb(241,189,21)" rx="2" ry="2" />
<text  x="258.35" y="191.5" ></text>
</g>
<g >
<title>runtime.assertI2I2 (1 samples, 0.02%)</title><rect x="302.8" y="245" width="0.3" height="15.0" fill="rgb(245,7,15)" rx="2" ry="2" />
<text  x="305.84" y="255.5" ></text>
</g>
<g >
<title>runtime.resetspinning (3 samples, 0.06%)</title><rect x="707.5" y="261" width="0.7" height="15.0" fill="rgb(232,229,21)" rx="2" ry="2" />
<text  x="710.46" y="271.5" ></text>
</g>
<g >
<title>runtime.spanOfUnchecked (1 samples, 0.02%)</title><rect x="304.8" y="133" width="0.3" height="15.0" fill="rgb(245,40,12)" rx="2" ry="2" />
<text  x="307.81" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (1 samples, 0.02%)</title><rect x="124.8" y="69" width="0.2" height="15.0" fill="rgb(226,29,40)" rx="2" ry="2" />
<text  x="127.76" y="79.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.02%)</title><rect x="708.2" y="213" width="0.3" height="15.0" fill="rgb(232,182,39)" rx="2" ry="2" />
<text  x="711.21" y="223.5" ></text>
</g>
<g >
<title>reflect.valueInterface (1 samples, 0.02%)</title><rect x="315.4" y="197" width="0.3" height="15.0" fill="rgb(215,30,28)" rx="2" ry="2" />
<text  x="318.45" y="207.5" ></text>
</g>
<g >
<title>runtime.semasleep (14 samples, 0.29%)</title><rect x="1152.4" y="213" width="3.5" height="15.0" fill="rgb(247,205,27)" rx="2" ry="2" />
<text  x="1155.41" y="223.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.(*Msg).Encode (4 samples, 0.08%)</title><rect x="305.6" y="277" width="0.9" height="15.0" fill="rgb(222,90,33)" rx="2" ry="2" />
<text  x="308.56" y="287.5" ></text>
</g>
<g >
<title>reflect.resolveTypeOff (2 samples, 0.04%)</title><rect x="316.2" y="181" width="0.5" height="15.0" fill="rgb(207,125,5)" rx="2" ry="2" />
<text  x="319.19" y="191.5" ></text>
</g>
<g >
<title>reflect.(*rtype).typeOff (1 samples, 0.02%)</title><rect x="312.7" y="197" width="0.3" height="15.0" fill="rgb(235,128,23)" rx="2" ry="2" />
<text  x="315.73" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*ExtendedHeader).readPacketNumber (2 samples, 0.04%)</title><rect x="83.2" y="197" width="0.5" height="15.0" fill="rgb(232,24,17)" rx="2" ry="2" />
<text  x="86.21" y="207.5" ></text>
</g>
<g >
<title>runtime.selectnbsend (4 samples, 0.08%)</title><rect x="10.2" y="261" width="1.0" height="15.0" fill="rgb(228,195,40)" rx="2" ry="2" />
<text  x="13.25" y="271.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (70 samples, 1.47%)</title><rect x="18.9" y="165" width="17.3" height="15.0" fill="rgb(229,107,29)" rx="2" ry="2" />
<text  x="21.90" y="175.5" ></text>
</g>
<g >
<title>runtime.freedefer (2 samples, 0.04%)</title><rect x="136.6" y="213" width="0.5" height="15.0" fill="rgb(253,22,49)" rx="2" ry="2" />
<text  x="139.63" y="223.5" ></text>
</g>
<g >
<title>runtime.ready (2 samples, 0.04%)</title><rect x="325.1" y="181" width="0.5" height="15.0" fill="rgb(238,15,17)" rx="2" ry="2" />
<text  x="328.10" y="191.5" ></text>
</g>
<g >
<title>runtime.aeshashbody (1 samples, 0.02%)</title><rect x="314.7" y="165" width="0.3" height="15.0" fill="rgb(228,191,10)" rx="2" ry="2" />
<text  x="317.71" y="175.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.appendVarintS32ValueNoZero (1 samples, 0.02%)</title><rect x="305.8" y="197" width="0.3" height="15.0" fill="rgb(214,9,29)" rx="2" ry="2" />
<text  x="308.80" y="207.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.02%)</title><rect x="707.2" y="245" width="0.3" height="15.0" fill="rgb(206,155,37)" rx="2" ry="2" />
<text  x="710.22" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*ExtendedHeader).writePacketNumber (1 samples, 0.02%)</title><rect x="134.7" y="197" width="0.2" height="15.0" fill="rgb(246,83,40)" rx="2" ry="2" />
<text  x="137.65" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (1 samples, 0.02%)</title><rect x="608.5" y="181" width="0.3" height="15.0" fill="rgb(243,157,18)" rx="2" ry="2" />
<text  x="611.53" y="191.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.(*Server).HandleRPC (48 samples, 1.01%)</title><rect x="306.5" y="277" width="11.9" height="15.0" fill="rgb(222,39,54)" rx="2" ry="2" />
<text  x="309.55" y="287.5" ></text>
</g>
<g >
<title>runtime.goready (1 samples, 0.02%)</title><rect x="125.5" y="101" width="0.2" height="15.0" fill="rgb(223,87,41)" rx="2" ry="2" />
<text  x="128.50" y="111.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.02%)</title><rect x="1156.4" y="213" width="0.2" height="15.0" fill="rgb(205,3,39)" rx="2" ry="2" />
<text  x="1159.36" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).freeSpan (3 samples, 0.06%)</title><rect x="350.3" y="261" width="0.8" height="15.0" fill="rgb(210,138,15)" rx="2" ry="2" />
<text  x="353.32" y="271.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (2 samples, 0.04%)</title><rect x="12.5" y="245" width="0.5" height="15.0" fill="rgb(224,145,48)" rx="2" ry="2" />
<text  x="15.47" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).maybeResetTimer (129 samples, 2.70%)</title><rect x="91.9" y="293" width="31.9" height="15.0" fill="rgb(226,121,31)" rx="2" ry="2" />
<text  x="94.87" y="303.5" >gi..</text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (1 samples, 0.02%)</title><rect x="1156.4" y="277" width="0.2" height="15.0" fill="rgb(231,44,8)" rx="2" ry="2" />
<text  x="1159.36" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.IsFrameAckEliciting (2 samples, 0.04%)</title><rect x="135.9" y="229" width="0.5" height="15.0" fill="rgb(220,139,21)" rx="2" ry="2" />
<text  x="138.89" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).sendPackedPacket (471 samples, 9.87%)</title><rect x="137.9" y="261" width="116.5" height="15.0" fill="rgb(215,50,43)" rx="2" ry="2" />
<text  x="140.87" y="271.5" >github.com/luc..</text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.04%)</title><rect x="126.0" y="165" width="0.5" height="15.0" fill="rgb(252,115,3)" rx="2" ry="2" />
<text  x="129.00" y="175.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetHandlerMap).listen (287 samples, 6.02%)</title><rect x="10.0" y="309" width="71.0" height="15.0" fill="rgb(206,191,16)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >github.c..</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/utils.bigEndian.WriteUintN (1 samples, 0.02%)</title><rect x="134.7" y="181" width="0.2" height="15.0" fill="rgb(240,112,20)" rx="2" ry="2" />
<text  x="137.65" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.02%)</title><rect x="89.1" y="149" width="0.3" height="15.0" fill="rgb(238,14,24)" rx="2" ry="2" />
<text  x="92.14" y="159.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (1 samples, 0.02%)</title><rect x="318.2" y="165" width="0.2" height="15.0" fill="rgb(210,62,36)" rx="2" ry="2" />
<text  x="321.17" y="175.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*receivedPacketTracker).GetAckFrame (6 samples, 0.13%)</title><rect x="130.9" y="213" width="1.5" height="15.0" fill="rgb(225,62,49)" rx="2" ry="2" />
<text  x="133.94" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.parseHeaderImpl (1 samples, 0.02%)</title><rect x="91.6" y="245" width="0.3" height="15.0" fill="rgb(220,21,28)" rx="2" ry="2" />
<text  x="94.62" y="255.5" ></text>
</g>
<g >
<title>runtime.ifaceeq (1 samples, 0.02%)</title><rect x="86.7" y="165" width="0.2" height="15.0" fill="rgb(252,140,29)" rx="2" ry="2" />
<text  x="89.67" y="175.5" ></text>
</g>
<g >
<title>runtime.chansend (1 samples, 0.02%)</title><rect x="344.9" y="213" width="0.2" height="15.0" fill="rgb(244,55,54)" rx="2" ry="2" />
<text  x="347.88" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.02%)</title><rect x="124.8" y="165" width="0.2" height="15.0" fill="rgb(240,87,22)" rx="2" ry="2" />
<text  x="127.76" y="175.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*ExtendedHeader).parseShortHeader (2 samples, 0.04%)</title><rect x="83.2" y="213" width="0.5" height="15.0" fill="rgb(231,170,10)" rx="2" ry="2" />
<text  x="86.21" y="223.5" ></text>
</g>
<g >
<title>runtime.heapBits.bits (1 samples, 0.02%)</title><rect x="326.8" y="165" width="0.3" height="15.0" fill="rgb(254,33,43)" rx="2" ry="2" />
<text  x="329.83" y="175.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="318.2" y="229" width="0.2" height="15.0" fill="rgb(227,144,27)" rx="2" ry="2" />
<text  x="321.17" y="239.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/protocol.UnpackStream (3 samples, 0.06%)</title><rect x="324.8" y="293" width="0.8" height="15.0" fill="rgb(248,184,54)" rx="2" ry="2" />
<text  x="327.85" y="303.5" ></text>
</g>
<g >
<title>runtime.runqsteal (19 samples, 0.40%)</title><rect x="364.9" y="245" width="4.7" height="15.0" fill="rgb(207,191,16)" rx="2" ry="2" />
<text  x="367.92" y="255.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.02%)</title><rect x="304.3" y="133" width="0.3" height="15.0" fill="rgb(240,88,16)" rx="2" ry="2" />
<text  x="307.32" y="143.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/flowcontrol.(*streamFlowController).AddBytesSent (1 samples, 0.02%)</title><rect x="125.7" y="165" width="0.3" height="15.0" fill="rgb(248,100,48)" rx="2" ry="2" />
<text  x="128.75" y="175.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*cryptoStreamImpl).HasData (1 samples, 0.02%)</title><rect x="130.7" y="229" width="0.2" height="15.0" fill="rgb(231,30,33)" rx="2" ry="2" />
<text  x="133.70" y="239.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_fast64 (2 samples, 0.04%)</title><rect x="343.9" y="229" width="0.5" height="15.0" fill="rgb(251,25,1)" rx="2" ry="2" />
<text  x="346.89" y="239.5" ></text>
</g>
<g >
<title>runtime.notewakeup (121 samples, 2.54%)</title><rect x="92.1" y="197" width="29.9" height="15.0" fill="rgb(213,31,37)" rx="2" ry="2" />
<text  x="95.11" y="207.5" >ru..</text>
</g>
<g >
<title>runtime.sweepone (1 samples, 0.02%)</title><rect x="89.1" y="101" width="0.3" height="15.0" fill="rgb(240,35,51)" rx="2" ry="2" />
<text  x="92.14" y="111.5" ></text>
</g>
<g >
<title>runtime.selectnbsend (1 samples, 0.02%)</title><rect x="125.5" y="149" width="0.2" height="15.0" fill="rgb(246,177,36)" rx="2" ry="2" />
<text  x="128.50" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (1 samples, 0.02%)</title><rect x="350.6" y="197" width="0.2" height="15.0" fill="rgb(213,36,45)" rx="2" ry="2" />
<text  x="353.57" y="207.5" ></text>
</g>
<g >
<title>runtime.notesleep (25 samples, 0.52%)</title><rect x="369.6" y="229" width="6.2" height="15.0" fill="rgb(253,166,26)" rx="2" ry="2" />
<text  x="372.61" y="239.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.02%)</title><rect x="304.6" y="133" width="0.2" height="15.0" fill="rgb(218,229,48)" rx="2" ry="2" />
<text  x="307.57" y="143.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (3 samples, 0.06%)</title><rect x="707.5" y="181" width="0.7" height="15.0" fill="rgb(254,123,0)" rx="2" ry="2" />
<text  x="710.46" y="191.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (1 samples, 0.02%)</title><rect x="315.0" y="181" width="0.2" height="15.0" fill="rgb(206,48,37)" rx="2" ry="2" />
<text  x="317.95" y="191.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (2 samples, 0.04%)</title><rect x="1151.9" y="277" width="0.5" height="15.0" fill="rgb(206,208,29)" rx="2" ry="2" />
<text  x="1154.91" y="287.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.02%)</title><rect x="79.5" y="69" width="0.2" height="15.0" fill="rgb(243,62,25)" rx="2" ry="2" />
<text  x="82.50" y="79.5" ></text>
</g>
<g >
<title>runtime.addtimer (121 samples, 2.54%)</title><rect x="92.1" y="229" width="29.9" height="15.0" fill="rgb(228,135,17)" rx="2" ry="2" />
<text  x="95.11" y="239.5" >ru..</text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.02%)</title><rect x="135.4" y="197" width="0.2" height="15.0" fill="rgb(254,24,37)" rx="2" ry="2" />
<text  x="138.40" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (6 samples, 0.13%)</title><rect x="325.6" y="277" width="1.5" height="15.0" fill="rgb(239,39,12)" rx="2" ry="2" />
<text  x="328.59" y="287.5" ></text>
</g>
<g >
<title>runtime.handoffp (1 samples, 0.02%)</title><rect x="258.1" y="69" width="0.2" height="15.0" fill="rgb(243,141,19)" rx="2" ry="2" />
<text  x="261.07" y="79.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/flowcontrol.(*streamFlowController).AddBytesRead (1 samples, 0.02%)</title><rect x="324.1" y="261" width="0.3" height="15.0" fill="rgb(243,80,9)" rx="2" ry="2" />
<text  x="327.11" y="271.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/pb.(*Response).XXX_Size (1 samples, 0.02%)</title><rect x="308.3" y="213" width="0.2" height="15.0" fill="rgb(220,45,24)" rx="2" ry="2" />
<text  x="311.28" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHistory).sentPacketImpl (1 samples, 0.02%)</title><rect x="255.1" y="229" width="0.2" height="15.0" fill="rgb(230,218,2)" rx="2" ry="2" />
<text  x="258.10" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (1 samples, 0.02%)</title><rect x="1156.4" y="197" width="0.2" height="15.0" fill="rgb(224,22,41)" rx="2" ry="2" />
<text  x="1159.36" y="207.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.02%)</title><rect x="1151.9" y="181" width="0.3" height="15.0" fill="rgb(211,120,33)" rx="2" ry="2" />
<text  x="1154.91" y="191.5" ></text>
</g>
<g >
<title>runtime.aeshash64 (1 samples, 0.02%)</title><rect x="86.4" y="133" width="0.3" height="15.0" fill="rgb(212,135,30)" rx="2" ry="2" />
<text  x="89.42" y="143.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.02%)</title><rect x="89.4" y="261" width="0.2" height="15.0" fill="rgb(208,182,9)" rx="2" ry="2" />
<text  x="92.39" y="271.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.02%)</title><rect x="609.3" y="261" width="0.2" height="15.0" fill="rgb(245,161,0)" rx="2" ry="2" />
<text  x="612.27" y="271.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.02%)</title><rect x="355.3" y="229" width="0.2" height="15.0" fill="rgb(226,14,54)" rx="2" ry="2" />
<text  x="358.27" y="239.5" ></text>
</g>
<g >
<title>runtime.stopm (25 samples, 0.52%)</title><rect x="369.6" y="245" width="6.2" height="15.0" fill="rgb(205,209,3)" rx="2" ry="2" />
<text  x="372.61" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*sendStream).popStreamFrameImpl (6 samples, 0.13%)</title><rect x="125.3" y="197" width="1.4" height="15.0" fill="rgb(210,225,29)" rx="2" ry="2" />
<text  x="128.25" y="207.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.02%)</title><rect x="306.3" y="261" width="0.2" height="15.0" fill="rgb(246,162,12)" rx="2" ry="2" />
<text  x="309.30" y="271.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.02%)</title><rect x="307.0" y="149" width="0.3" height="15.0" fill="rgb(247,229,49)" rx="2" ry="2" />
<text  x="310.04" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.02%)</title><rect x="91.6" y="165" width="0.3" height="15.0" fill="rgb(248,184,49)" rx="2" ry="2" />
<text  x="94.62" y="175.5" ></text>
</g>
<g >
<title>time.Time.IsZero (1 samples, 0.02%)</title><rect x="346.4" y="277" width="0.2" height="15.0" fill="rgb(248,94,21)" rx="2" ry="2" />
<text  x="349.37" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).insert (1 samples, 0.02%)</title><rect x="124.8" y="53" width="0.2" height="15.0" fill="rgb(251,83,27)" rx="2" ry="2" />
<text  x="127.76" y="63.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.02%)</title><rect x="359.0" y="245" width="0.2" height="15.0" fill="rgb(236,174,34)" rx="2" ry="2" />
<text  x="361.98" y="255.5" ></text>
</g>
<g >
<title>github.com/marten-seemann/qtls.(*xorNonceAEAD).Open (2 samples, 0.04%)</title><rect x="82.7" y="229" width="0.5" height="15.0" fill="rgb(208,112,27)" rx="2" ry="2" />
<text  x="85.71" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*receiveStream).handleStreamFrame (6 samples, 0.13%)</title><rect x="86.4" y="213" width="1.5" height="15.0" fill="rgb(234,48,49)" rx="2" ry="2" />
<text  x="89.42" y="223.5" ></text>
</g>
<g >
<title>runtime.markroot (1 samples, 0.02%)</title><rect x="307.0" y="117" width="0.3" height="15.0" fill="rgb(228,84,23)" rx="2" ry="2" />
<text  x="310.04" y="127.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (7 samples, 0.15%)</title><rect x="1170.7" y="277" width="1.7" height="15.0" fill="rgb(241,112,21)" rx="2" ry="2" />
<text  x="1173.71" y="287.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwunlock (3 samples, 0.06%)</title><rect x="159.6" y="149" width="0.8" height="15.0" fill="rgb(216,208,0)" rx="2" ry="2" />
<text  x="162.63" y="159.5" ></text>
</g>
<g >
<title>runtime.asmcgocall (2 samples, 0.04%)</title><rect x="300.1" y="229" width="0.5" height="15.0" fill="rgb(235,138,11)" rx="2" ry="2" />
<text  x="303.12" y="239.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.02%)</title><rect x="344.9" y="197" width="0.2" height="15.0" fill="rgb(250,31,25)" rx="2" ry="2" />
<text  x="347.88" y="207.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (7 samples, 0.15%)</title><rect x="351.3" y="165" width="1.7" height="15.0" fill="rgb(214,229,19)" rx="2" ry="2" />
<text  x="354.31" y="175.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (4 samples, 0.08%)</title><rect x="311.0" y="165" width="1.0" height="15.0" fill="rgb(232,22,43)" rx="2" ry="2" />
<text  x="314.00" y="175.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock_handoff (1,778 samples, 37.27%)</title><rect x="711.9" y="277" width="439.8" height="15.0" fill="rgb(239,77,8)" rx="2" ry="2" />
<text  x="714.92" y="287.5" >runtime.entersyscallblock_handoff</text>
</g>
<g >
<title>reflect.(*rtype).Kind (1 samples, 0.02%)</title><rect x="312.5" y="197" width="0.2" height="15.0" fill="rgb(237,195,20)" rx="2" ry="2" />
<text  x="315.48" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeManual (1 samples, 0.02%)</title><rect x="349.3" y="245" width="0.3" height="15.0" fill="rgb(229,67,15)" rx="2" ry="2" />
<text  x="352.33" y="255.5" ></text>
</g>
<g >
<title>runtime.mget (1 samples, 0.02%)</title><rect x="79.0" y="101" width="0.3" height="15.0" fill="rgb(221,228,2)" rx="2" ry="2" />
<text  x="82.00" y="111.5" ></text>
</g>
<g >
<title>runtime.semawakeup (3 samples, 0.06%)</title><rect x="79.3" y="85" width="0.7" height="15.0" fill="rgb(228,166,6)" rx="2" ry="2" />
<text  x="82.25" y="95.5" ></text>
</g>
<g >
<title>fmt.Errorf (1 samples, 0.02%)</title><rect x="255.6" y="229" width="0.2" height="15.0" fill="rgb(254,94,50)" rx="2" ry="2" />
<text  x="258.60" y="239.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (6 samples, 0.13%)</title><rect x="90.1" y="213" width="1.5" height="15.0" fill="rgb(217,69,13)" rx="2" ry="2" />
<text  x="93.13" y="223.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (5 samples, 0.10%)</title><rect x="313.7" y="213" width="1.3" height="15.0" fill="rgb(244,184,46)" rx="2" ry="2" />
<text  x="316.72" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).onHasStreamData (6 samples, 0.13%)</title><rect x="343.6" y="261" width="1.5" height="15.0" fill="rgb(224,184,12)" rx="2" ry="2" />
<text  x="346.64" y="271.5" ></text>
</g>
<g >
<title>runtime.morestack (3 samples, 0.06%)</title><rect x="708.5" y="309" width="0.7" height="15.0" fill="rgb(237,156,12)" rx="2" ry="2" />
<text  x="711.45" y="319.5" ></text>
</g>
<g >
<title>runtime.newobject (4 samples, 0.08%)</title><rect x="129.7" y="229" width="1.0" height="15.0" fill="rgb(230,166,43)" rx="2" ry="2" />
<text  x="132.71" y="239.5" ></text>
</g>
<g >
<title>runtime.deferreturn (2 samples, 0.04%)</title><rect x="11.5" y="277" width="0.5" height="15.0" fill="rgb(230,199,23)" rx="2" ry="2" />
<text  x="14.48" y="287.5" ></text>
</g>
<g >
<title>runtime.netpollblock (1 samples, 0.02%)</title><rect x="14.2" y="181" width="0.3" height="15.0" fill="rgb(232,216,30)" rx="2" ry="2" />
<text  x="17.20" y="191.5" ></text>
</g>
<g >
<title>runtime.duffcopy (1 samples, 0.02%)</title><rect x="306.1" y="261" width="0.2" height="15.0" fill="rgb(207,89,53)" rx="2" ry="2" />
<text  x="309.05" y="271.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.appendVarintS32ValueNoZero (2 samples, 0.04%)</title><rect x="317.2" y="149" width="0.5" height="15.0" fill="rgb(237,191,5)" rx="2" ry="2" />
<text  x="320.18" y="159.5" ></text>
</g>
<g >
<title>runtime.newdefer (1 samples, 0.02%)</title><rect x="136.4" y="213" width="0.2" height="15.0" fill="rgb(248,125,38)" rx="2" ry="2" />
<text  x="139.38" y="223.5" ></text>
</g>
<g >
<title>runtime.scanobject (6 samples, 0.13%)</title><rect x="325.6" y="181" width="1.5" height="15.0" fill="rgb(241,0,29)" rx="2" ry="2" />
<text  x="328.59" y="191.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*receivedPacketHandler).GetAckFrame (8 samples, 0.17%)</title><rect x="127.2" y="229" width="2.0" height="15.0" fill="rgb(249,164,50)" rx="2" ry="2" />
<text  x="130.23" y="239.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.02%)</title><rect x="159.1" y="69" width="0.3" height="15.0" fill="rgb(231,103,17)" rx="2" ry="2" />
<text  x="162.14" y="79.5" ></text>
</g>
<g >
<title>runtime.scang (1 samples, 0.02%)</title><rect x="1151.9" y="213" width="0.3" height="15.0" fill="rgb(251,106,39)" rx="2" ry="2" />
<text  x="1154.91" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.HasAckElicitingFrames (2 samples, 0.04%)</title><rect x="135.9" y="245" width="0.5" height="15.0" fill="rgb(216,15,21)" rx="2" ry="2" />
<text  x="138.89" y="255.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/funcs.(*Funcs).GetFunc (6 samples, 0.13%)</title><rect x="313.5" y="229" width="1.5" height="15.0" fill="rgb(216,122,5)" rx="2" ry="2" />
<text  x="316.47" y="239.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).ReadFrom (272 samples, 5.70%)</title><rect x="13.7" y="245" width="67.3" height="15.0" fill="rgb(252,64,20)" rx="2" ry="2" />
<text  x="16.71" y="255.5" >interna..</text>
</g>
<g >
<title>runtime.(*waitq).dequeue (1 samples, 0.02%)</title><rect x="318.9" y="261" width="0.3" height="15.0" fill="rgb(241,26,43)" rx="2" ry="2" />
<text  x="321.91" y="271.5" ></text>
</g>
</g>
</svg>

