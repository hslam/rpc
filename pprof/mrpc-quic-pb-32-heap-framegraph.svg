<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="390.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="373" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="373" > </text>
<g id="frames">
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*receivedPacketHandler).ReceivedPacket (3 samples, 0.06%)</title><rect x="86.0" y="261" width="0.7" height="15.0" fill="rgb(229,70,16)" rx="2" ry="2" />
<text  x="89.00" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.02%)</title><rect x="297.1" y="181" width="0.2" height="15.0" fill="rgb(254,168,34)" rx="2" ry="2" />
<text  x="300.09" y="191.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.02%)</title><rect x="344.7" y="261" width="0.2" height="15.0" fill="rgb(245,64,35)" rx="2" ry="2" />
<text  x="347.66" y="271.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.getMessageMarshalInfo (1 samples, 0.02%)</title><rect x="293.4" y="197" width="0.3" height="15.0" fill="rgb(247,188,19)" rx="2" ry="2" />
<text  x="296.42" y="207.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.02%)</title><rect x="238.5" y="181" width="0.2" height="15.0" fill="rgb(245,16,39)" rx="2" ry="2" />
<text  x="241.50" y="191.5" ></text>
</g>
<g >
<title>runtime.runqget (1 samples, 0.02%)</title><rect x="668.8" y="261" width="0.2" height="15.0" fill="rgb(236,19,9)" rx="2" ry="2" />
<text  x="671.77" y="271.5" ></text>
</g>
<g >
<title>runtime.notetsleepg (72 samples, 1.50%)</title><rect x="1172.1" y="309" width="17.7" height="15.0" fill="rgb(223,28,5)" rx="2" ry="2" />
<text  x="1175.10" y="319.5" ></text>
</g>
<g >
<title>time.sendTime (1 samples, 0.02%)</title><rect x="1189.8" y="309" width="0.2" height="15.0" fill="rgb(223,79,35)" rx="2" ry="2" />
<text  x="1192.75" y="319.5" ></text>
</g>
<g >
<title>runtime.schedule (2 samples, 0.04%)</title><rect x="719.5" y="261" width="0.5" height="15.0" fill="rgb(235,74,22)" rx="2" ry="2" />
<text  x="722.52" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.04%)</title><rect x="118.6" y="245" width="0.5" height="15.0" fill="rgb(227,153,32)" rx="2" ry="2" />
<text  x="121.61" y="255.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (2 samples, 0.04%)</title><rect x="719.5" y="277" width="0.5" height="15.0" fill="rgb(210,157,31)" rx="2" ry="2" />
<text  x="722.52" y="287.5" ></text>
</g>
<g >
<title>runtime.goparkunlock (1 samples, 0.02%)</title><rect x="332.6" y="277" width="0.3" height="15.0" fill="rgb(232,156,18)" rx="2" ry="2" />
<text  x="335.64" y="287.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.02%)</title><rect x="298.8" y="181" width="0.3" height="15.0" fill="rgb(242,112,44)" rx="2" ry="2" />
<text  x="301.81" y="191.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.parseStreamFrame (2 samples, 0.04%)</title><rect x="87.5" y="229" width="0.5" height="15.0" fill="rgb(247,115,43)" rx="2" ry="2" />
<text  x="90.47" y="239.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).WriteTo (436 samples, 9.06%)</title><rect x="130.9" y="197" width="106.9" height="15.0" fill="rgb(222,79,34)" rx="2" ry="2" />
<text  x="133.87" y="207.5" >internal/poll..</text>
</g>
<g >
<title>hslam.com/mgit/Mort/funcs.(*Funcs).GetFuncIn (2 samples, 0.04%)</title><rect x="298.8" y="245" width="0.5" height="15.0" fill="rgb(239,169,45)" rx="2" ry="2" />
<text  x="301.81" y="255.5" ></text>
</g>
<g >
<title>runtime.chanrecv (1 samples, 0.02%)</title><rect x="332.6" y="293" width="0.3" height="15.0" fill="rgb(249,172,17)" rx="2" ry="2" />
<text  x="335.64" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (2 samples, 0.04%)</title><rect x="17.6" y="149" width="0.5" height="15.0" fill="rgb(217,39,5)" rx="2" ry="2" />
<text  x="20.60" y="159.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (2 samples, 0.04%)</title><rect x="291.9" y="165" width="0.5" height="15.0" fill="rgb(246,148,30)" rx="2" ry="2" />
<text  x="294.94" y="175.5" ></text>
</g>
<g >
<title>runtime.scanobject (3 samples, 0.06%)</title><rect x="288.8" y="165" width="0.7" height="15.0" fill="rgb(231,24,0)" rx="2" ry="2" />
<text  x="291.76" y="175.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/pb.(*Msg).XXX_Marshal (2 samples, 0.04%)</title><rect x="290.0" y="261" width="0.5" height="15.0" fill="rgb(214,48,10)" rx="2" ry="2" />
<text  x="292.98" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="330.2" y="277" width="0.2" height="15.0" fill="rgb(227,118,1)" rx="2" ry="2" />
<text  x="333.19" y="287.5" ></text>
</g>
<g >
<title>runtime.deltimer (3 samples, 0.06%)</title><rect x="117.4" y="245" width="0.7" height="15.0" fill="rgb(225,25,3)" rx="2" ry="2" />
<text  x="120.38" y="255.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.02%)</title><rect x="340.2" y="213" width="0.3" height="15.0" fill="rgb(208,222,11)" rx="2" ry="2" />
<text  x="343.24" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*receivedPacketHistory).ReceivedPacket (1 samples, 0.02%)</title><rect x="86.5" y="229" width="0.2" height="15.0" fill="rgb(234,94,5)" rx="2" ry="2" />
<text  x="89.49" y="239.5" ></text>
</g>
<g >
<title>runtime.lock (3 samples, 0.06%)</title><rect x="341.0" y="293" width="0.7" height="15.0" fill="rgb(214,200,45)" rx="2" ry="2" />
<text  x="343.98" y="303.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (3 samples, 0.06%)</title><rect x="237.8" y="181" width="0.7" height="15.0" fill="rgb(223,89,27)" rx="2" ry="2" />
<text  x="240.76" y="191.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Unmarshal (5 samples, 0.10%)</title><rect x="291.2" y="213" width="1.2" height="15.0" fill="rgb(209,93,0)" rx="2" ry="2" />
<text  x="294.21" y="223.5" ></text>
</g>
<g >
<title>runtime.deferproc (1 samples, 0.02%)</title><rect x="238.7" y="261" width="0.3" height="15.0" fill="rgb(218,173,47)" rx="2" ry="2" />
<text  x="241.74" y="271.5" ></text>
</g>
<g >
<title>runtime.mapdelete_fast64 (25 samples, 0.52%)</title><rect x="303.0" y="245" width="6.1" height="15.0" fill="rgb(246,19,2)" rx="2" ry="2" />
<text  x="305.98" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/flowcontrol.(*streamFlowController).UpdateHighestReceived (1 samples, 0.02%)</title><rect x="85.3" y="197" width="0.2" height="15.0" fill="rgb(243,74,48)" rx="2" ry="2" />
<text  x="88.27" y="207.5" ></text>
</g>
<g >
<title>runtime.gopark (1 samples, 0.02%)</title><rect x="332.6" y="261" width="0.3" height="15.0" fill="rgb(220,148,9)" rx="2" ry="2" />
<text  x="335.64" y="271.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (2 samples, 0.04%)</title><rect x="298.8" y="213" width="0.5" height="15.0" fill="rgb(229,198,5)" rx="2" ry="2" />
<text  x="301.81" y="223.5" ></text>
</g>
<g >
<title>runtime.chanrecv2 (1 samples, 0.02%)</title><rect x="332.6" y="309" width="0.3" height="15.0" fill="rgb(250,140,32)" rx="2" ry="2" />
<text  x="335.64" y="319.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.02%)</title><rect x="719.5" y="197" width="0.3" height="15.0" fill="rgb(251,15,40)" rx="2" ry="2" />
<text  x="722.52" y="207.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock (1 samples, 0.02%)</title><rect x="76.7" y="197" width="0.2" height="15.0" fill="rgb(247,3,20)" rx="2" ry="2" />
<text  x="79.69" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*receivedPacketHandler).GetAckFrame (5 samples, 0.10%)</title><rect x="121.1" y="245" width="1.2" height="15.0" fill="rgb(237,114,40)" rx="2" ry="2" />
<text  x="124.06" y="255.5" ></text>
</g>
<g >
<title>runtime.lock (3 samples, 0.06%)</title><rect x="343.9" y="261" width="0.8" height="15.0" fill="rgb(224,61,27)" rx="2" ry="2" />
<text  x="346.92" y="271.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*unmarshalInfo).unmarshal (5 samples, 0.10%)</title><rect x="291.2" y="197" width="1.2" height="15.0" fill="rgb(242,167,45)" rx="2" ry="2" />
<text  x="294.21" y="207.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock_handoff (1,759 samples, 36.55%)</title><rect x="721.7" y="293" width="431.3" height="15.0" fill="rgb(217,94,0)" rx="2" ry="2" />
<text  x="724.73" y="303.5" >runtime.entersyscallblock_handoff</text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Size (1 samples, 0.02%)</title><rect x="300.0" y="197" width="0.3" height="15.0" fill="rgb(253,172,23)" rx="2" ry="2" />
<text  x="303.04" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*Header).ParseExtended (2 samples, 0.04%)</title><rect x="81.1" y="261" width="0.5" height="15.0" fill="rgb(229,24,1)" rx="2" ry="2" />
<text  x="84.10" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*ExtendedHeader).writePacketNumber (3 samples, 0.06%)</title><rect x="126.2" y="213" width="0.7" height="15.0" fill="rgb(210,226,22)" rx="2" ry="2" />
<text  x="129.21" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.parseAckFrame (2 samples, 0.04%)</title><rect x="87.0" y="229" width="0.5" height="15.0" fill="rgb(254,175,38)" rx="2" ry="2" />
<text  x="89.98" y="239.5" ></text>
</g>
<g >
<title>runtime.findfunc (2 samples, 0.04%)</title><rect x="337.3" y="181" width="0.5" height="15.0" fill="rgb(236,195,5)" rx="2" ry="2" />
<text  x="340.30" y="191.5" ></text>
</g>
<g >
<title>runtime.stopm (1,016 samples, 21.11%)</title><rect x="361.1" y="293" width="249.1" height="15.0" fill="rgb(227,64,15)" rx="2" ry="2" />
<text  x="364.08" y="303.5" >runtime.stopm</text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.ServeQUICConn (57 samples, 1.18%)</title><rect x="288.0" y="325" width="14.0" height="15.0" fill="rgb(253,1,24)" rx="2" ry="2" />
<text  x="291.02" y="335.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*frameParser).parseFrame (4 samples, 0.08%)</title><rect x="87.0" y="245" width="1.0" height="15.0" fill="rgb(215,64,2)" rx="2" ry="2" />
<text  x="89.98" y="255.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.02%)</title><rect x="147.8" y="117" width="0.2" height="15.0" fill="rgb(239,70,13)" rx="2" ry="2" />
<text  x="150.79" y="127.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Marshal (2 samples, 0.04%)</title><rect x="293.2" y="213" width="0.5" height="15.0" fill="rgb(227,153,44)" rx="2" ry="2" />
<text  x="296.17" y="223.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.02%)</title><rect x="343.9" y="245" width="0.3" height="15.0" fill="rgb(248,18,0)" rx="2" ry="2" />
<text  x="346.92" y="255.5" ></text>
</g>
<g >
<title>runtime.goparkunlock (1 samples, 0.02%)</title><rect x="309.6" y="245" width="0.2" height="15.0" fill="rgb(245,158,2)" rx="2" ry="2" />
<text  x="312.60" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/utils.(*Timer).Reset (116 samples, 2.41%)</title><rect x="89.9" y="293" width="28.5" height="15.0" fill="rgb(244,47,35)" rx="2" ry="2" />
<text  x="92.93" y="303.5" >gi..</text>
</g>
<g >
<title>callRet (1 samples, 0.02%)</title><rect x="295.1" y="197" width="0.3" height="15.0" fill="rgb(219,153,47)" rx="2" ry="2" />
<text  x="298.13" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*frameSorter).Pop (25 samples, 0.52%)</title><rect x="303.0" y="261" width="6.1" height="15.0" fill="rgb(238,6,31)" rx="2" ry="2" />
<text  x="305.98" y="271.5" ></text>
</g>
<g >
<title>runtime.(*_type).typeOff (1 samples, 0.02%)</title><rect x="296.8" y="181" width="0.3" height="15.0" fill="rgb(236,73,35)" rx="2" ry="2" />
<text  x="299.85" y="191.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (3 samples, 0.06%)</title><rect x="610.7" y="293" width="0.7" height="15.0" fill="rgb(210,158,43)" rx="2" ry="2" />
<text  x="613.66" y="303.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.02%)</title><rect x="1157.1" y="197" width="0.3" height="15.0" fill="rgb(251,151,18)" rx="2" ry="2" />
<text  x="1160.15" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (2 samples, 0.04%)</title><rect x="17.6" y="165" width="0.5" height="15.0" fill="rgb(212,198,26)" rx="2" ry="2" />
<text  x="20.60" y="175.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_lock (2 samples, 0.04%)</title><rect x="609.7" y="245" width="0.5" height="15.0" fill="rgb(252,214,29)" rx="2" ry="2" />
<text  x="612.68" y="255.5" ></text>
</g>
<g >
<title>github.com/marten-seemann/qtls.(*xorNonceAEAD).Seal (3 samples, 0.06%)</title><rect x="125.2" y="229" width="0.8" height="15.0" fill="rgb(205,63,5)" rx="2" ry="2" />
<text  x="128.23" y="239.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.02%)</title><rect x="341.5" y="277" width="0.2" height="15.0" fill="rgb(224,33,15)" rx="2" ry="2" />
<text  x="344.47" y="287.5" ></text>
</g>
<g >
<title>runtime.spanOf (1 samples, 0.02%)</title><rect x="238.3" y="69" width="0.2" height="15.0" fill="rgb(248,213,0)" rx="2" ry="2" />
<text  x="241.25" y="79.5" ></text>
</g>
<g >
<title>time.stopTimer (3 samples, 0.06%)</title><rect x="117.4" y="261" width="0.7" height="15.0" fill="rgb(212,155,19)" rx="2" ry="2" />
<text  x="120.38" y="271.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Size (1 samples, 0.02%)</title><rect x="290.5" y="245" width="0.2" height="15.0" fill="rgb(218,129,21)" rx="2" ry="2" />
<text  x="293.47" y="255.5" ></text>
</g>
<g >
<title>runtime.walltime (1 samples, 0.02%)</title><rect x="119.1" y="229" width="0.2" height="15.0" fill="rgb(252,117,23)" rx="2" ry="2" />
<text  x="122.10" y="239.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (1 samples, 0.02%)</title><rect x="289.5" y="165" width="0.2" height="15.0" fill="rgb(231,107,27)" rx="2" ry="2" />
<text  x="292.49" y="175.5" ></text>
</g>
<g >
<title>runtime.nilinterequal (1 samples, 0.02%)</title><rect x="298.6" y="197" width="0.2" height="15.0" fill="rgb(232,55,15)" rx="2" ry="2" />
<text  x="301.56" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (19 samples, 0.39%)</title><rect x="336.3" y="309" width="4.7" height="15.0" fill="rgb(247,137,48)" rx="2" ry="2" />
<text  x="339.32" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.04%)</title><rect x="130.1" y="165" width="0.5" height="15.0" fill="rgb(210,131,9)" rx="2" ry="2" />
<text  x="133.13" y="175.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeueSudoG (156 samples, 3.24%)</title><rect x="246.6" y="293" width="38.2" height="15.0" fill="rgb(242,156,6)" rx="2" ry="2" />
<text  x="249.59" y="303.5" >run..</text>
</g>
<g >
<title>runtime.funcspdelta (3 samples, 0.06%)</title><rect x="337.8" y="181" width="0.7" height="15.0" fill="rgb(231,115,1)" rx="2" ry="2" />
<text  x="340.79" y="191.5" ></text>
</g>
<g >
<title>runtime.mapassign_fast64 (1 samples, 0.02%)</title><rect x="242.2" y="229" width="0.2" height="15.0" fill="rgb(240,96,41)" rx="2" ry="2" />
<text  x="245.18" y="239.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (3 samples, 0.06%)</title><rect x="310.6" y="213" width="0.7" height="15.0" fill="rgb(224,208,35)" rx="2" ry="2" />
<text  x="313.58" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="120.6" y="101" width="0.2" height="15.0" fill="rgb(251,58,13)" rx="2" ry="2" />
<text  x="123.57" y="111.5" ></text>
</g>
<g >
<title>runtime.efaceeq (1 samples, 0.02%)</title><rect x="298.6" y="181" width="0.2" height="15.0" fill="rgb(251,208,18)" rx="2" ry="2" />
<text  x="301.56" y="191.5" ></text>
</g>
<g >
<title>runtime.usleep (51 samples, 1.06%)</title><rect x="669.3" y="229" width="12.5" height="15.0" fill="rgb(221,28,36)" rx="2" ry="2" />
<text  x="672.26" y="239.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (1 samples, 0.02%)</title><rect x="335.8" y="261" width="0.3" height="15.0" fill="rgb(228,78,5)" rx="2" ry="2" />
<text  x="338.83" y="271.5" ></text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.04%)</title><rect x="1153.0" y="229" width="0.5" height="15.0" fill="rgb(221,186,6)" rx="2" ry="2" />
<text  x="1155.98" y="239.5" ></text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.04%)</title><rect x="341.0" y="261" width="0.5" height="15.0" fill="rgb(216,0,39)" rx="2" ry="2" />
<text  x="343.98" y="271.5" ></text>
</g>
<g >
<title>runtime.add (1 samples, 0.02%)</title><rect x="83.1" y="165" width="0.2" height="15.0" fill="rgb(232,62,21)" rx="2" ry="2" />
<text  x="86.06" y="175.5" ></text>
</g>
<g >
<title>time.Time.Add (1 samples, 0.02%)</title><rect x="241.4" y="245" width="0.3" height="15.0" fill="rgb(248,199,34)" rx="2" ry="2" />
<text  x="244.44" y="255.5" ></text>
</g>
<g >
<title>runtime.scanblock (2 samples, 0.04%)</title><rect x="340.0" y="229" width="0.5" height="15.0" fill="rgb(253,180,50)" rx="2" ry="2" />
<text  x="343.00" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (1 samples, 0.02%)</title><rect x="118.6" y="117" width="0.3" height="15.0" fill="rgb(253,115,40)" rx="2" ry="2" />
<text  x="121.61" y="127.5" ></text>
</g>
<g >
<title>runtime.semawakeup (3 samples, 0.06%)</title><rect x="717.8" y="213" width="0.7" height="15.0" fill="rgb(213,112,19)" rx="2" ry="2" />
<text  x="720.80" y="223.5" ></text>
</g>
<g >
<title>sync.runtime_nanotime (1 samples, 0.02%)</title><rect x="309.8" y="261" width="0.3" height="15.0" fill="rgb(216,113,39)" rx="2" ry="2" />
<text  x="312.84" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*sendStream).Write (75 samples, 1.56%)</title><rect x="311.8" y="309" width="18.4" height="15.0" fill="rgb(219,187,11)" rx="2" ry="2" />
<text  x="314.80" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).insert (1 samples, 0.02%)</title><rect x="118.6" y="53" width="0.3" height="15.0" fill="rgb(214,27,11)" rx="2" ry="2" />
<text  x="121.61" y="63.5" ></text>
</g>
<g >
<title>runtime.semacquire1 (15 samples, 0.31%)</title><rect x="144.4" y="133" width="3.6" height="15.0" fill="rgb(241,215,20)" rx="2" ry="2" />
<text  x="147.35" y="143.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.02%)</title><rect x="18.1" y="181" width="0.2" height="15.0" fill="rgb(222,133,8)" rx="2" ry="2" />
<text  x="21.09" y="191.5" ></text>
</g>
<g >
<title>runtime.findObject (2 samples, 0.04%)</title><rect x="331.9" y="165" width="0.5" height="15.0" fill="rgb(214,176,14)" rx="2" ry="2" />
<text  x="334.91" y="175.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (3 samples, 0.06%)</title><rect x="1168.2" y="261" width="0.7" height="15.0" fill="rgb(251,168,48)" rx="2" ry="2" />
<text  x="1171.18" y="271.5" ></text>
</g>
<g >
<title>time.(*Timer).Reset (112 samples, 2.33%)</title><rect x="89.9" y="277" width="27.5" height="15.0" fill="rgb(206,220,45)" rx="2" ry="2" />
<text  x="92.93" y="287.5" >t..</text>
</g>
<g >
<title>runtime.gcDrainN (3 samples, 0.06%)</title><rect x="237.8" y="117" width="0.7" height="15.0" fill="rgb(223,203,8)" rx="2" ry="2" />
<text  x="240.76" y="127.5" ></text>
</g>
<g >
<title>bytes.NewReader (2 samples, 0.04%)</title><rect x="79.4" y="261" width="0.5" height="15.0" fill="rgb(245,185,31)" rx="2" ry="2" />
<text  x="82.38" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetUnpacker).Unpack (10 samples, 0.21%)</title><rect x="79.1" y="277" width="2.5" height="15.0" fill="rgb(233,176,32)" rx="2" ry="2" />
<text  x="82.14" y="287.5" ></text>
</g>
<g >
<title>runtime.addtimer (111 samples, 2.31%)</title><rect x="89.9" y="245" width="27.2" height="15.0" fill="rgb(239,167,46)" rx="2" ry="2" />
<text  x="92.93" y="255.5" >r..</text>
</g>
<g >
<title>reflect.Value.Type (1 samples, 0.02%)</title><rect x="296.8" y="229" width="0.3" height="15.0" fill="rgb(205,42,20)" rx="2" ry="2" />
<text  x="299.85" y="239.5" ></text>
</g>
<g >
<title>runtime.semacquire1 (1 samples, 0.02%)</title><rect x="242.7" y="133" width="0.2" height="15.0" fill="rgb(242,183,43)" rx="2" ry="2" />
<text  x="245.67" y="143.5" ></text>
</g>
<g >
<title>runtime.walltime (1 samples, 0.02%)</title><rect x="12.5" y="261" width="0.2" height="15.0" fill="rgb(231,38,43)" rx="2" ry="2" />
<text  x="15.45" y="271.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.02%)</title><rect x="721.2" y="245" width="0.3" height="15.0" fill="rgb(220,58,23)" rx="2" ry="2" />
<text  x="724.24" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/utils.(*defaultLogger).Debug (1 samples, 0.02%)</title><rect x="240.9" y="245" width="0.3" height="15.0" fill="rgb(230,211,6)" rx="2" ry="2" />
<text  x="243.95" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (3 samples, 0.06%)</title><rect x="88.2" y="181" width="0.7" height="15.0" fill="rgb(206,149,41)" rx="2" ry="2" />
<text  x="91.21" y="191.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.02%)</title><rect x="121.3" y="213" width="0.3" height="15.0" fill="rgb(223,104,30)" rx="2" ry="2" />
<text  x="124.31" y="223.5" ></text>
</g>
<g >
<title>syscall.Sendto (363 samples, 7.54%)</title><rect x="148.8" y="181" width="89.0" height="15.0" fill="rgb(233,60,7)" rx="2" ry="2" />
<text  x="151.77" y="191.5" >syscall.Se..</text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.02%)</title><rect x="123.0" y="133" width="0.3" height="15.0" fill="rgb(253,180,8)" rx="2" ry="2" />
<text  x="126.02" y="143.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.02%)</title><rect x="87.7" y="165" width="0.3" height="15.0" fill="rgb(232,124,4)" rx="2" ry="2" />
<text  x="90.72" y="175.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock (1 samples, 0.02%)</title><rect x="229.7" y="133" width="0.2" height="15.0" fill="rgb(234,226,52)" rx="2" ry="2" />
<text  x="232.67" y="143.5" ></text>
</g>
<g >
<title>runtime.semawakeup (108 samples, 2.24%)</title><rect x="89.9" y="197" width="26.5" height="15.0" fill="rgb(214,78,4)" rx="2" ry="2" />
<text  x="92.93" y="207.5" >r..</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*ExtendedHeader).readPacketNumber (1 samples, 0.02%)</title><rect x="81.3" y="213" width="0.3" height="15.0" fill="rgb(243,157,2)" rx="2" ry="2" />
<text  x="84.34" y="223.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.02%)</title><rect x="330.2" y="293" width="0.2" height="15.0" fill="rgb(240,209,29)" rx="2" ry="2" />
<text  x="333.19" y="303.5" ></text>
</g>
<g >
<title>runtime.selectnbsend (3 samples, 0.06%)</title><rect x="10.2" y="277" width="0.8" height="15.0" fill="rgb(212,57,18)" rx="2" ry="2" />
<text  x="13.25" y="287.5" ></text>
</g>
<g >
<title>bytes.(*Reader).Read (1 samples, 0.02%)</title><rect x="89.2" y="181" width="0.2" height="15.0" fill="rgb(250,55,37)" rx="2" ry="2" />
<text  x="92.19" y="191.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/handshake.(*cryptoSetup).GetOpener (1 samples, 0.02%)</title><rect x="79.9" y="261" width="0.2" height="15.0" fill="rgb(223,176,25)" rx="2" ry="2" />
<text  x="82.87" y="271.5" ></text>
</g>
<g >
<title>runtime.greyobject (2 samples, 0.04%)</title><rect x="310.8" y="181" width="0.5" height="15.0" fill="rgb(240,19,15)" rx="2" ry="2" />
<text  x="313.82" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc (6 samples, 0.12%)</title><rect x="310.1" y="293" width="1.5" height="15.0" fill="rgb(251,36,33)" rx="2" ry="2" />
<text  x="313.09" y="303.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.02%)</title><rect x="123.0" y="149" width="0.3" height="15.0" fill="rgb(245,188,27)" rx="2" ry="2" />
<text  x="126.02" y="159.5" ></text>
</g>
<g >
<title>runtime.notetsleep (15 samples, 0.31%)</title><rect x="1153.5" y="261" width="3.6" height="15.0" fill="rgb(227,121,37)" rx="2" ry="2" />
<text  x="1156.47" y="271.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (64 samples, 1.33%)</title><rect x="1174.1" y="293" width="15.7" height="15.0" fill="rgb(238,107,15)" rx="2" ry="2" />
<text  x="1177.06" y="303.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/handshake.(*opener).Open (3 samples, 0.06%)</title><rect x="80.4" y="261" width="0.7" height="15.0" fill="rgb(227,151,27)" rx="2" ry="2" />
<text  x="83.36" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="292.4" y="229" width="0.3" height="15.0" fill="rgb(230,91,22)" rx="2" ry="2" />
<text  x="295.44" y="239.5" ></text>
</g>
<g >
<title>runtime.newstack (2 samples, 0.04%)</title><rect x="719.5" y="309" width="0.5" height="15.0" fill="rgb(219,151,1)" rx="2" ry="2" />
<text  x="722.52" y="319.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (3 samples, 0.06%)</title><rect x="1168.2" y="293" width="0.7" height="15.0" fill="rgb(251,217,23)" rx="2" ry="2" />
<text  x="1171.18" y="303.5" ></text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.02%)</title><rect x="719.5" y="213" width="0.3" height="15.0" fill="rgb(240,127,19)" rx="2" ry="2" />
<text  x="722.52" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).ReceivedAck (9 samples, 0.19%)</title><rect x="82.1" y="229" width="2.2" height="15.0" fill="rgb(229,221,40)" rx="2" ry="2" />
<text  x="85.08" y="239.5" ></text>
</g>
<g >
<title>runtime.chansend1 (1 samples, 0.02%)</title><rect x="300.5" y="309" width="0.3" height="15.0" fill="rgb(225,172,20)" rx="2" ry="2" />
<text  x="303.53" y="319.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.02%)</title><rect x="116.9" y="197" width="0.2" height="15.0" fill="rgb(247,163,8)" rx="2" ry="2" />
<text  x="119.89" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetHandlerMap).handlePacket (11 samples, 0.23%)</title><rect x="10.0" y="309" width="2.7" height="15.0" fill="rgb(205,172,6)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>runtime.semrelease (1 samples, 0.02%)</title><rect x="336.1" y="293" width="0.2" height="15.0" fill="rgb(238,64,27)" rx="2" ry="2" />
<text  x="339.08" y="303.5" ></text>
</g>
<g >
<title>runtime.kevent (5 samples, 0.10%)</title><rect x="346.9" y="245" width="1.2" height="15.0" fill="rgb(205,164,32)" rx="2" ry="2" />
<text  x="349.86" y="255.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.(*Server).ServeRPC (50 samples, 1.04%)</title><rect x="288.3" y="309" width="12.2" height="15.0" fill="rgb(221,73,2)" rx="2" ry="2" />
<text  x="291.27" y="319.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_lock (3 samples, 0.06%)</title><rect x="1148.3" y="213" width="0.8" height="15.0" fill="rgb(222,80,14)" rx="2" ry="2" />
<text  x="1151.32" y="223.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwlock (1 samples, 0.02%)</title><rect x="242.7" y="165" width="0.2" height="15.0" fill="rgb(248,80,14)" rx="2" ry="2" />
<text  x="245.67" y="175.5" ></text>
</g>
<g >
<title>runtime.goready (1 samples, 0.02%)</title><rect x="336.1" y="245" width="0.2" height="15.0" fill="rgb(242,99,46)" rx="2" ry="2" />
<text  x="339.08" y="255.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.02%)</title><rect x="1157.1" y="213" width="0.3" height="15.0" fill="rgb(231,170,28)" rx="2" ry="2" />
<text  x="1160.15" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetBuffer).Release (4 samples, 0.08%)</title><rect x="237.8" y="261" width="0.9" height="15.0" fill="rgb(224,49,45)" rx="2" ry="2" />
<text  x="240.76" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*receivedPacketHandler).GetAckFrame (3 samples, 0.06%)</title><rect x="123.8" y="245" width="0.7" height="15.0" fill="rgb(242,106,51)" rx="2" ry="2" />
<text  x="126.76" y="255.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (1 samples, 0.02%)</title><rect x="309.8" y="277" width="0.3" height="15.0" fill="rgb(210,174,5)" rx="2" ry="2" />
<text  x="312.84" y="287.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.04%)</title><rect x="240.5" y="229" width="0.4" height="15.0" fill="rgb(219,186,7)" rx="2" ry="2" />
<text  x="243.46" y="239.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (8 samples, 0.17%)</title><rect x="330.7" y="213" width="1.9" height="15.0" fill="rgb(220,216,29)" rx="2" ry="2" />
<text  x="333.68" y="223.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).getPtr (1 samples, 0.02%)</title><rect x="336.6" y="197" width="0.2" height="15.0" fill="rgb(206,210,13)" rx="2" ry="2" />
<text  x="339.57" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.04%)</title><rect x="82.3" y="149" width="0.5" height="15.0" fill="rgb(213,58,51)" rx="2" ry="2" />
<text  x="85.32" y="159.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).SentPacketsAsRetransmission (2 samples, 0.04%)</title><rect x="245.1" y="277" width="0.5" height="15.0" fill="rgb(248,202,14)" rx="2" ry="2" />
<text  x="248.12" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="79.6" y="229" width="0.3" height="15.0" fill="rgb(222,113,51)" rx="2" ry="2" />
<text  x="82.63" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (4 samples, 0.08%)</title><rect x="237.8" y="197" width="0.9" height="15.0" fill="rgb(207,131,42)" rx="2" ry="2" />
<text  x="240.76" y="207.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (1 samples, 0.02%)</title><rect x="295.9" y="165" width="0.2" height="15.0" fill="rgb(246,16,23)" rx="2" ry="2" />
<text  x="298.87" y="175.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.02%)</title><rect x="117.1" y="245" width="0.3" height="15.0" fill="rgb(233,191,14)" rx="2" ry="2" />
<text  x="120.14" y="255.5" ></text>
</g>
<g >
<title>runtime.lock (2 samples, 0.04%)</title><rect x="286.1" y="277" width="0.5" height="15.0" fill="rgb(240,21,46)" rx="2" ry="2" />
<text  x="289.06" y="287.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Marshal (2 samples, 0.04%)</title><rect x="299.5" y="197" width="0.5" height="15.0" fill="rgb(231,155,45)" rx="2" ry="2" />
<text  x="302.54" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.02%)</title><rect x="297.1" y="149" width="0.2" height="15.0" fill="rgb(218,156,15)" rx="2" ry="2" />
<text  x="300.09" y="159.5" ></text>
</g>
<g >
<title>reflect.directlyAssignable (1 samples, 0.02%)</title><rect x="295.4" y="181" width="0.2" height="15.0" fill="rgb(242,91,53)" rx="2" ry="2" />
<text  x="298.38" y="191.5" ></text>
</g>
<g >
<title>reflect.resolveNameOff (1 samples, 0.02%)</title><rect x="294.4" y="181" width="0.2" height="15.0" fill="rgb(213,11,52)" rx="2" ry="2" />
<text  x="297.40" y="191.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/pb.(*Response).XXX_Size (2 samples, 0.04%)</title><rect x="293.7" y="229" width="0.5" height="15.0" fill="rgb(211,202,54)" rx="2" ry="2" />
<text  x="296.66" y="239.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (1 samples, 0.02%)</title><rect x="292.4" y="197" width="0.3" height="15.0" fill="rgb(229,117,54)" rx="2" ry="2" />
<text  x="295.44" y="207.5" ></text>
</g>
<g >
<title>time.when (1 samples, 0.02%)</title><rect x="117.1" y="261" width="0.3" height="15.0" fill="rgb(221,141,1)" rx="2" ry="2" />
<text  x="120.14" y="271.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/protocol.ReadStream (39 samples, 0.81%)</title><rect x="302.0" y="325" width="9.6" height="15.0" fill="rgb(243,145,30)" rx="2" ry="2" />
<text  x="305.00" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (1 samples, 0.02%)</title><rect x="681.8" y="213" width="0.2" height="15.0" fill="rgb(213,126,46)" rx="2" ry="2" />
<text  x="684.76" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).handleSinglePacket (36 samples, 0.75%)</title><rect x="79.1" y="293" width="8.9" height="15.0" fill="rgb(247,203,22)" rx="2" ry="2" />
<text  x="82.14" y="303.5" ></text>
</g>
<g >
<title>net.(*netFD).readFrom (268 samples, 5.57%)</title><rect x="12.7" y="277" width="65.7" height="15.0" fill="rgb(223,8,36)" rx="2" ry="2" />
<text  x="15.70" y="287.5" >net.(*n..</text>
</g>
<g >
<title>reflect.(*rtype).Kind (1 samples, 0.02%)</title><rect x="295.6" y="181" width="0.3" height="15.0" fill="rgb(227,52,22)" rx="2" ry="2" />
<text  x="298.62" y="191.5" ></text>
</g>
<g >
<title>runtime.duffcopy (1 samples, 0.02%)</title><rect x="245.4" y="229" width="0.2" height="15.0" fill="rgb(254,139,2)" rx="2" ry="2" />
<text  x="248.36" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*receiveStream).Read (32 samples, 0.66%)</title><rect x="302.2" y="309" width="7.9" height="15.0" fill="rgb(205,119,0)" rx="2" ry="2" />
<text  x="305.24" y="319.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (4 samples, 0.08%)</title><rect x="297.8" y="229" width="1.0" height="15.0" fill="rgb(229,120,48)" rx="2" ry="2" />
<text  x="300.83" y="239.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.02%)</title><rect x="117.1" y="229" width="0.3" height="15.0" fill="rgb(245,26,52)" rx="2" ry="2" />
<text  x="120.14" y="239.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (2 samples, 0.04%)</title><rect x="298.3" y="213" width="0.5" height="15.0" fill="rgb(225,146,52)" rx="2" ry="2" />
<text  x="301.32" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).determineNewlyAckedPackets (2 samples, 0.04%)</title><rect x="82.3" y="213" width="0.5" height="15.0" fill="rgb(215,138,10)" rx="2" ry="2" />
<text  x="85.32" y="223.5" ></text>
</g>
<g >
<title>runtime.sellock (5 samples, 0.10%)</title><rect x="285.3" y="293" width="1.3" height="15.0" fill="rgb(230,123,46)" rx="2" ry="2" />
<text  x="288.33" y="303.5" ></text>
</g>
<g >
<title>runtime.deferreturn (4 samples, 0.08%)</title><rect x="239.0" y="261" width="1.0" height="15.0" fill="rgb(248,107,9)" rx="2" ry="2" />
<text  x="241.99" y="271.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.02%)</title><rect x="292.4" y="213" width="0.3" height="15.0" fill="rgb(222,142,0)" rx="2" ry="2" />
<text  x="295.44" y="223.5" ></text>
</g>
<g >
<title>runtime.walltime (3 samples, 0.06%)</title><rect x="121.6" y="181" width="0.7" height="15.0" fill="rgb(240,83,28)" rx="2" ry="2" />
<text  x="124.55" y="191.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).handleUnpackedPacket (25 samples, 0.52%)</title><rect x="81.8" y="277" width="6.2" height="15.0" fill="rgb(216,35,46)" rx="2" ry="2" />
<text  x="84.83" y="287.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.appendUTF8StringValueNoZero (1 samples, 0.02%)</title><rect x="293.2" y="181" width="0.2" height="15.0" fill="rgb(218,59,20)" rx="2" ry="2" />
<text  x="296.17" y="191.5" ></text>
</g>
<g >
<title>runtime.readvarint (1 samples, 0.02%)</title><rect x="338.3" y="133" width="0.2" height="15.0" fill="rgb(206,218,38)" rx="2" ry="2" />
<text  x="341.28" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (2 samples, 0.04%)</title><rect x="17.6" y="181" width="0.5" height="15.0" fill="rgb(250,27,0)" rx="2" ry="2" />
<text  x="20.60" y="191.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.02%)</title><rect x="296.4" y="181" width="0.2" height="15.0" fill="rgb(221,216,53)" rx="2" ry="2" />
<text  x="299.36" y="191.5" ></text>
</g>
<g >
<title>runtime.ready (42 samples, 0.87%)</title><rect x="1157.9" y="277" width="10.3" height="15.0" fill="rgb(215,207,22)" rx="2" ry="2" />
<text  x="1160.88" y="287.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.getMessageMarshalInfo (1 samples, 0.02%)</title><rect x="293.9" y="197" width="0.3" height="15.0" fill="rgb(252,58,37)" rx="2" ry="2" />
<text  x="296.91" y="207.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (8 samples, 0.17%)</title><rect x="330.7" y="261" width="1.9" height="15.0" fill="rgb(237,100,10)" rx="2" ry="2" />
<text  x="333.68" y="271.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (4 samples, 0.08%)</title><rect x="288.8" y="181" width="0.9" height="15.0" fill="rgb(217,66,29)" rx="2" ry="2" />
<text  x="291.76" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (8 samples, 0.17%)</title><rect x="330.7" y="245" width="1.9" height="15.0" fill="rgb(230,160,21)" rx="2" ry="2" />
<text  x="333.68" y="255.5" ></text>
</g>
<g >
<title>syscall.syscall6 (9 samples, 0.19%)</title><rect x="242.9" y="149" width="2.2" height="15.0" fill="rgb(242,210,7)" rx="2" ry="2" />
<text  x="245.91" y="159.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.decodeVarint (1 samples, 0.02%)</title><rect x="291.7" y="165" width="0.2" height="15.0" fill="rgb(254,174,52)" rx="2" ry="2" />
<text  x="294.70" y="175.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Unmarshal (1 samples, 0.02%)</title><rect x="299.3" y="229" width="0.2" height="15.0" fill="rgb(214,19,27)" rx="2" ry="2" />
<text  x="302.30" y="239.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.02%)</title><rect x="338.3" y="149" width="0.2" height="15.0" fill="rgb(215,94,29)" rx="2" ry="2" />
<text  x="341.28" y="159.5" ></text>
</g>
<g >
<title>runtime.execute (1 samples, 0.02%)</title><rect x="611.9" y="277" width="0.2" height="15.0" fill="rgb(240,204,52)" rx="2" ry="2" />
<text  x="614.89" y="287.5" ></text>
</g>
<g >
<title>net.(*UDPConn).writeTo (11 samples, 0.23%)</title><rect x="242.4" y="229" width="2.7" height="15.0" fill="rgb(222,112,22)" rx="2" ry="2" />
<text  x="245.42" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (142 samples, 2.95%)</title><rect x="682.5" y="213" width="34.8" height="15.0" fill="rgb(225,136,4)" rx="2" ry="2" />
<text  x="685.50" y="223.5" >ru..</text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.02%)</title><rect x="147.8" y="101" width="0.2" height="15.0" fill="rgb(233,138,41)" rx="2" ry="2" />
<text  x="150.79" y="111.5" ></text>
</g>
<g >
<title>runtime.schedule (2 samples, 0.04%)</title><rect x="610.9" y="277" width="0.5" height="15.0" fill="rgb(207,11,36)" rx="2" ry="2" />
<text  x="613.91" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).sentPacketImpl (1 samples, 0.02%)</title><rect x="245.1" y="261" width="0.3" height="15.0" fill="rgb(227,81,25)" rx="2" ry="2" />
<text  x="248.12" y="271.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.04%)</title><rect x="118.6" y="261" width="0.5" height="15.0" fill="rgb(254,18,48)" rx="2" ry="2" />
<text  x="121.61" y="271.5" ></text>
</g>
<g >
<title>runtime.gopark (1 samples, 0.02%)</title><rect x="301.3" y="293" width="0.2" height="15.0" fill="rgb(254,212,3)" rx="2" ry="2" />
<text  x="304.26" y="303.5" ></text>
</g>
<g >
<title>reflect.(*rtype).In (1 samples, 0.02%)</title><rect x="295.6" y="197" width="0.3" height="15.0" fill="rgb(213,83,54)" rx="2" ry="2" />
<text  x="298.62" y="207.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.02%)</title><rect x="338.5" y="117" width="0.3" height="15.0" fill="rgb(234,58,52)" rx="2" ry="2" />
<text  x="341.53" y="127.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeue (1 samples, 0.02%)</title><rect x="85.0" y="149" width="0.3" height="15.0" fill="rgb(225,100,44)" rx="2" ry="2" />
<text  x="88.02" y="159.5" ></text>
</g>
<g >
<title>runtime.semawakeup (42 samples, 0.87%)</title><rect x="1157.9" y="213" width="10.3" height="15.0" fill="rgb(218,71,40)" rx="2" ry="2" />
<text  x="1160.88" y="223.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (15 samples, 0.31%)</title><rect x="1153.5" y="245" width="3.6" height="15.0" fill="rgb(226,8,2)" rx="2" ry="2" />
<text  x="1156.47" y="255.5" ></text>
</g>
<g >
<title>runtime.scanstack (14 samples, 0.29%)</title><rect x="336.6" y="213" width="3.4" height="15.0" fill="rgb(210,127,5)" rx="2" ry="2" />
<text  x="339.57" y="223.5" ></text>
</g>
<g >
<title>runtime.gcstopm (1 samples, 0.02%)</title><rect x="359.6" y="277" width="0.3" height="15.0" fill="rgb(243,50,39)" rx="2" ry="2" />
<text  x="362.61" y="287.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.(*Msg).Decode (7 samples, 0.15%)</title><rect x="288.3" y="293" width="1.7" height="15.0" fill="rgb(217,166,44)" rx="2" ry="2" />
<text  x="291.27" y="303.5" ></text>
</g>
<g >
<title>runtime.handoffp (1,759 samples, 36.55%)</title><rect x="721.7" y="277" width="431.3" height="15.0" fill="rgb(216,166,39)" rx="2" ry="2" />
<text  x="724.73" y="287.5" >runtime.handoffp</text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.02%)</title><rect x="719.8" y="229" width="0.2" height="15.0" fill="rgb(233,27,10)" rx="2" ry="2" />
<text  x="722.77" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*uniStreamSender).onHasStreamData (2 samples, 0.04%)</title><rect x="329.5" y="293" width="0.4" height="15.0" fill="rgb(253,214,4)" rx="2" ry="2" />
<text  x="332.46" y="303.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Marshal (1 samples, 0.02%)</title><rect x="290.2" y="245" width="0.3" height="15.0" fill="rgb(240,151,22)" rx="2" ry="2" />
<text  x="293.23" y="255.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.02%)</title><rect x="238.3" y="85" width="0.2" height="15.0" fill="rgb(205,181,51)" rx="2" ry="2" />
<text  x="241.25" y="95.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.02%)</title><rect x="359.6" y="261" width="0.3" height="15.0" fill="rgb(218,21,13)" rx="2" ry="2" />
<text  x="362.61" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.04%)</title><rect x="240.5" y="213" width="0.4" height="15.0" fill="rgb(222,31,28)" rx="2" ry="2" />
<text  x="243.46" y="223.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.02%)</title><rect x="1157.1" y="229" width="0.3" height="15.0" fill="rgb(241,199,7)" rx="2" ry="2" />
<text  x="1160.15" y="239.5" ></text>
</g>
<g >
<title>runtime.newobject (9 samples, 0.19%)</title><rect x="330.4" y="293" width="2.2" height="15.0" fill="rgb(244,135,39)" rx="2" ry="2" />
<text  x="333.44" y="303.5" ></text>
</g>
<g >
<title>net.(*UDPConn).ReadFrom (268 samples, 5.57%)</title><rect x="12.7" y="309" width="65.7" height="15.0" fill="rgb(232,84,41)" rx="2" ry="2" />
<text  x="15.70" y="319.5" >net.(*U..</text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.02%)</title><rect x="360.6" y="245" width="0.2" height="15.0" fill="rgb(218,185,35)" rx="2" ry="2" />
<text  x="363.59" y="255.5" ></text>
</g>
<g >
<title>runtime.scanobject (2 samples, 0.04%)</title><rect x="340.5" y="261" width="0.5" height="15.0" fill="rgb(236,5,7)" rx="2" ry="2" />
<text  x="343.49" y="271.5" ></text>
</g>
<g >
<title>runtime.unlock (2 samples, 0.04%)</title><rect x="610.2" y="293" width="0.5" height="15.0" fill="rgb(220,134,49)" rx="2" ry="2" />
<text  x="613.17" y="303.5" ></text>
</g>
<g >
<title>reflect.(*rtype).String (1 samples, 0.02%)</title><rect x="294.4" y="213" width="0.2" height="15.0" fill="rgb(246,187,13)" rx="2" ry="2" />
<text  x="297.40" y="223.5" ></text>
</g>
<g >
<title>runtime.assertI2I2 (1 samples, 0.02%)</title><rect x="300.3" y="213" width="0.2" height="15.0" fill="rgb(225,117,2)" rx="2" ry="2" />
<text  x="303.28" y="223.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.(*Server).HandleRPC (38 samples, 0.79%)</title><rect x="291.2" y="293" width="9.3" height="15.0" fill="rgb(243,75,40)" rx="2" ry="2" />
<text  x="294.21" y="303.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (1 samples, 0.02%)</title><rect x="719.5" y="181" width="0.3" height="15.0" fill="rgb(246,88,6)" rx="2" ry="2" />
<text  x="722.52" y="191.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).writeLock (1 samples, 0.02%)</title><rect x="242.7" y="181" width="0.2" height="15.0" fill="rgb(208,200,17)" rx="2" ry="2" />
<text  x="245.67" y="191.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.02%)</title><rect x="610.7" y="277" width="0.2" height="15.0" fill="rgb(217,61,53)" rx="2" ry="2" />
<text  x="613.66" y="287.5" ></text>
</g>
<g >
<title>crypto/aes.(*gcmAsm).Overhead (1 samples, 0.02%)</title><rect x="128.7" y="229" width="0.2" height="15.0" fill="rgb(214,78,3)" rx="2" ry="2" />
<text  x="131.66" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.02%)</title><rect x="297.1" y="165" width="0.2" height="15.0" fill="rgb(218,214,44)" rx="2" ry="2" />
<text  x="300.09" y="175.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (8 samples, 0.17%)</title><rect x="1172.1" y="293" width="2.0" height="15.0" fill="rgb(225,125,9)" rx="2" ry="2" />
<text  x="1175.10" y="303.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/pb.(*Msg).XXX_Size (1 samples, 0.02%)</title><rect x="290.5" y="261" width="0.2" height="15.0" fill="rgb(234,219,11)" rx="2" ry="2" />
<text  x="293.47" y="271.5" ></text>
</g>
<g >
<title>runtime.semasleep (54 samples, 1.12%)</title><rect x="1176.5" y="277" width="13.3" height="15.0" fill="rgb(247,164,46)" rx="2" ry="2" />
<text  x="1179.52" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.02%)</title><rect x="118.6" y="197" width="0.3" height="15.0" fill="rgb(223,192,0)" rx="2" ry="2" />
<text  x="121.61" y="207.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.06%)</title><rect x="717.8" y="229" width="0.7" height="15.0" fill="rgb(213,14,8)" rx="2" ry="2" />
<text  x="720.80" y="239.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.02%)</title><rect x="311.1" y="165" width="0.2" height="15.0" fill="rgb(251,129,18)" rx="2" ry="2" />
<text  x="314.07" y="175.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).onHasStreamData (2 samples, 0.04%)</title><rect x="329.5" y="277" width="0.4" height="15.0" fill="rgb(232,89,36)" rx="2" ry="2" />
<text  x="332.46" y="287.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.02%)</title><rect x="118.1" y="261" width="0.3" height="15.0" fill="rgb(249,197,21)" rx="2" ry="2" />
<text  x="121.12" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.04%)</title><rect x="298.8" y="197" width="0.5" height="15.0" fill="rgb(245,198,20)" rx="2" ry="2" />
<text  x="301.81" y="207.5" ></text>
</g>
<g >
<title>crypto/aes.(*gcmAsm).Open (1 samples, 0.02%)</title><rect x="80.9" y="229" width="0.2" height="15.0" fill="rgb(225,41,7)" rx="2" ry="2" />
<text  x="83.85" y="239.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (5 samples, 0.10%)</title><rect x="77.2" y="181" width="1.2" height="15.0" fill="rgb(219,128,35)" rx="2" ry="2" />
<text  x="80.18" y="191.5" ></text>
</g>
<g >
<title>runtime.assertI2I2 (1 samples, 0.02%)</title><rect x="288.3" y="261" width="0.2" height="15.0" fill="rgb(212,126,34)" rx="2" ry="2" />
<text  x="291.27" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/utils.MaxTime (1 samples, 0.02%)</title><rect x="89.7" y="277" width="0.2" height="15.0" fill="rgb(214,168,3)" rx="2" ry="2" />
<text  x="92.68" y="287.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_fast64 (1 samples, 0.02%)</title><rect x="83.3" y="197" width="0.3" height="15.0" fill="rgb(233,94,10)" rx="2" ry="2" />
<text  x="86.31" y="207.5" ></text>
</g>
<g >
<title>runtime.deferreturn (2 samples, 0.04%)</title><rect x="11.5" y="293" width="0.5" height="15.0" fill="rgb(253,113,21)" rx="2" ry="2" />
<text  x="14.47" y="303.5" ></text>
</g>
<g >
<title>runtime.kevent (214 samples, 4.45%)</title><rect x="615.8" y="245" width="52.5" height="15.0" fill="rgb(253,95,42)" rx="2" ry="2" />
<text  x="618.81" y="255.5" >runti..</text>
</g>
<g >
<title>runtime.heapBitsForAddr (1 samples, 0.02%)</title><rect x="296.6" y="149" width="0.2" height="15.0" fill="rgb(211,79,19)" rx="2" ry="2" />
<text  x="299.60" y="159.5" ></text>
</g>
<g >
<title>runtime.goready (1 samples, 0.02%)</title><rect x="120.6" y="117" width="0.2" height="15.0" fill="rgb(234,199,44)" rx="2" ry="2" />
<text  x="123.57" y="127.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (1 samples, 0.02%)</title><rect x="344.4" y="229" width="0.3" height="15.0" fill="rgb(216,209,11)" rx="2" ry="2" />
<text  x="347.41" y="239.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.(*Request).Decode (6 samples, 0.12%)</title><rect x="291.2" y="261" width="1.5" height="15.0" fill="rgb(226,11,34)" rx="2" ry="2" />
<text  x="294.21" y="271.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (1 samples, 0.02%)</title><rect x="244.9" y="133" width="0.2" height="15.0" fill="rgb(235,50,25)" rx="2" ry="2" />
<text  x="247.87" y="143.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).handlePacketImpl (44 samples, 0.91%)</title><rect x="78.9" y="309" width="10.8" height="15.0" fill="rgb(225,199,13)" rx="2" ry="2" />
<text  x="81.89" y="319.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.02%)</title><rect x="611.9" y="261" width="0.2" height="15.0" fill="rgb(235,144,41)" rx="2" ry="2" />
<text  x="614.89" y="271.5" ></text>
</g>
<g >
<title>runtime.chansend (1 samples, 0.02%)</title><rect x="300.5" y="293" width="0.3" height="15.0" fill="rgb(218,100,31)" rx="2" ry="2" />
<text  x="303.53" y="303.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Marshal (5 samples, 0.10%)</title><rect x="292.9" y="245" width="1.3" height="15.0" fill="rgb(243,195,41)" rx="2" ry="2" />
<text  x="295.93" y="255.5" ></text>
</g>
<g >
<title>runtime.chansend (1 samples, 0.02%)</title><rect x="85.0" y="165" width="0.3" height="15.0" fill="rgb(246,193,4)" rx="2" ry="2" />
<text  x="88.02" y="175.5" ></text>
</g>
<g >
<title>runtime.pcvalue (2 samples, 0.04%)</title><rect x="338.0" y="165" width="0.5" height="15.0" fill="rgb(249,25,54)" rx="2" ry="2" />
<text  x="341.04" y="175.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.02%)</title><rect x="121.3" y="181" width="0.3" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="124.31" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (54 samples, 1.12%)</title><rect x="1176.5" y="261" width="13.3" height="15.0" fill="rgb(243,108,47)" rx="2" ry="2" />
<text  x="1179.52" y="271.5" ></text>
</g>
<g >
<title>net.(*UDPConn).WriteTo (440 samples, 9.14%)</title><rect x="129.9" y="245" width="107.9" height="15.0" fill="rgb(229,169,30)" rx="2" ry="2" />
<text  x="132.89" y="255.5" >net.(*UDPConn..</text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (19 samples, 0.39%)</title><rect x="336.3" y="293" width="4.7" height="15.0" fill="rgb(213,71,17)" rx="2" ry="2" />
<text  x="339.32" y="303.5" ></text>
</g>
<g >
<title>syscall.(*SockaddrInet6).sockaddr (2 samples, 0.04%)</title><rect x="148.8" y="165" width="0.5" height="15.0" fill="rgb(252,83,43)" rx="2" ry="2" />
<text  x="151.77" y="175.5" ></text>
</g>
<g >
<title>runtime.runqempty (1 samples, 0.02%)</title><rect x="668.5" y="261" width="0.3" height="15.0" fill="rgb(241,69,38)" rx="2" ry="2" />
<text  x="671.52" y="271.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (2 samples, 0.04%)</title><rect x="1157.4" y="293" width="0.5" height="15.0" fill="rgb(214,147,16)" rx="2" ry="2" />
<text  x="1160.39" y="303.5" ></text>
</g>
<g >
<title>io.ReadFull (1 samples, 0.02%)</title><rect x="89.2" y="213" width="0.2" height="15.0" fill="rgb(212,190,2)" rx="2" ry="2" />
<text  x="92.19" y="223.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.02%)</title><rect x="123.0" y="165" width="0.3" height="15.0" fill="rgb(219,52,51)" rx="2" ry="2" />
<text  x="126.02" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (4 samples, 0.08%)</title><rect x="310.3" y="261" width="1.0" height="15.0" fill="rgb(229,166,20)" rx="2" ry="2" />
<text  x="313.33" y="271.5" ></text>
</g>
<g >
<title>time.Now (5 samples, 0.10%)</title><rect x="286.6" y="309" width="1.2" height="15.0" fill="rgb(240,205,54)" rx="2" ry="2" />
<text  x="289.55" y="319.5" ></text>
</g>
<g >
<title>runtime.resetspinning (4 samples, 0.08%)</title><rect x="717.6" y="277" width="0.9" height="15.0" fill="rgb(235,76,51)" rx="2" ry="2" />
<text  x="720.56" y="287.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (1 samples, 0.02%)</title><rect x="88.0" y="213" width="0.2" height="15.0" fill="rgb(245,107,41)" rx="2" ry="2" />
<text  x="90.96" y="223.5" ></text>
</g>
<g >
<title>runtime.semrelease (2 samples, 0.04%)</title><rect x="148.0" y="133" width="0.5" height="15.0" fill="rgb(248,106,22)" rx="2" ry="2" />
<text  x="151.03" y="143.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/pb.(*Request).XXX_Unmarshal (5 samples, 0.10%)</title><rect x="291.2" y="229" width="1.2" height="15.0" fill="rgb(229,152,38)" rx="2" ry="2" />
<text  x="294.21" y="239.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*marshalInfo).size (1 samples, 0.02%)</title><rect x="300.0" y="181" width="0.3" height="15.0" fill="rgb(221,60,20)" rx="2" ry="2" />
<text  x="303.04" y="191.5" ></text>
</g>
<g >
<title>runtime.lock (2 samples, 0.04%)</title><rect x="117.6" y="229" width="0.5" height="15.0" fill="rgb(236,198,6)" rx="2" ry="2" />
<text  x="120.63" y="239.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (1 samples, 0.02%)</title><rect x="244.9" y="117" width="0.2" height="15.0" fill="rgb(226,138,20)" rx="2" ry="2" />
<text  x="247.87" y="127.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.02%)</title><rect x="332.4" y="165" width="0.2" height="15.0" fill="rgb(239,72,23)" rx="2" ry="2" />
<text  x="335.40" y="175.5" ></text>
</g>
<g >
<title>time.now (3 samples, 0.06%)</title><rect x="287.0" y="293" width="0.8" height="15.0" fill="rgb(253,87,5)" rx="2" ry="2" />
<text  x="290.04" y="303.5" ></text>
</g>
<g >
<title>runtime.semrelease1 (2 samples, 0.04%)</title><rect x="148.0" y="117" width="0.5" height="15.0" fill="rgb(207,25,40)" rx="2" ry="2" />
<text  x="151.03" y="127.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.ParseConnectionID (2 samples, 0.04%)</title><rect x="11.0" y="293" width="0.5" height="15.0" fill="rgb(247,84,48)" rx="2" ry="2" />
<text  x="13.98" y="303.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.06%)</title><rect x="359.9" y="229" width="0.7" height="15.0" fill="rgb(229,72,23)" rx="2" ry="2" />
<text  x="362.86" y="239.5" ></text>
</g>
<g >
<title>runtime.markroot (16 samples, 0.33%)</title><rect x="336.6" y="261" width="3.9" height="15.0" fill="rgb(231,116,45)" rx="2" ry="2" />
<text  x="339.57" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.04%)</title><rect x="127.2" y="229" width="0.5" height="15.0" fill="rgb(220,207,50)" rx="2" ry="2" />
<text  x="130.19" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="121.3" y="197" width="0.3" height="15.0" fill="rgb(236,198,19)" rx="2" ry="2" />
<text  x="124.31" y="207.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.02%)</title><rect x="116.9" y="229" width="0.2" height="15.0" fill="rgb(239,214,12)" rx="2" ry="2" />
<text  x="119.89" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (1 samples, 0.02%)</title><rect x="361.3" y="245" width="0.3" height="15.0" fill="rgb(205,224,36)" rx="2" ry="2" />
<text  x="364.33" y="255.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/protocol.PacketStream (10 samples, 0.21%)</title><rect x="330.2" y="309" width="2.4" height="15.0" fill="rgb(210,136,3)" rx="2" ry="2" />
<text  x="333.19" y="319.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (1 samples, 0.02%)</title><rect x="290.7" y="229" width="0.3" height="15.0" fill="rgb(223,56,43)" rx="2" ry="2" />
<text  x="293.72" y="239.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/examples/example/pb/service.(*ArithResponse).XXX_Size (1 samples, 0.02%)</title><rect x="300.0" y="213" width="0.3" height="15.0" fill="rgb(208,199,36)" rx="2" ry="2" />
<text  x="303.04" y="223.5" ></text>
</g>
<g >
<title>runtime.siftupTimer (2 samples, 0.04%)</title><rect x="116.4" y="213" width="0.5" height="15.0" fill="rgb(251,78,15)" rx="2" ry="2" />
<text  x="119.40" y="223.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Size (2 samples, 0.04%)</title><rect x="293.7" y="213" width="0.5" height="15.0" fill="rgb(212,162,27)" rx="2" ry="2" />
<text  x="296.66" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHistory).Remove (2 samples, 0.04%)</title><rect x="82.8" y="197" width="0.5" height="15.0" fill="rgb(246,77,54)" rx="2" ry="2" />
<text  x="85.82" y="207.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.02%)</title><rect x="89.4" y="213" width="0.3" height="15.0" fill="rgb(223,157,10)" rx="2" ry="2" />
<text  x="92.43" y="223.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock_handoff (1 samples, 0.02%)</title><rect x="229.7" y="101" width="0.2" height="15.0" fill="rgb(247,197,46)" rx="2" ry="2" />
<text  x="232.67" y="111.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (1 samples, 0.02%)</title><rect x="611.2" y="197" width="0.2" height="15.0" fill="rgb(222,200,6)" rx="2" ry="2" />
<text  x="614.16" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).handleSinglePacket.func1 (1 samples, 0.02%)</title><rect x="81.6" y="277" width="0.2" height="15.0" fill="rgb(207,43,42)" rx="2" ry="2" />
<text  x="84.59" y="287.5" ></text>
</g>
<g >
<title>syscall.sendto (361 samples, 7.50%)</title><rect x="149.3" y="165" width="88.5" height="15.0" fill="rgb(247,159,41)" rx="2" ry="2" />
<text  x="152.26" y="175.5" >syscall.se..</text>
</g>
<g >
<title>runtime.findrunnable (430 samples, 8.93%)</title><rect x="612.1" y="277" width="105.5" height="15.0" fill="rgb(254,151,52)" rx="2" ry="2" />
<text  x="615.14" y="287.5" >runtime.find..</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).SendMode (1 samples, 0.02%)</title><rect x="245.9" y="293" width="0.2" height="15.0" fill="rgb(209,106,6)" rx="2" ry="2" />
<text  x="248.85" y="303.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (1 samples, 0.02%)</title><rect x="336.3" y="261" width="0.3" height="15.0" fill="rgb(248,39,32)" rx="2" ry="2" />
<text  x="339.32" y="271.5" ></text>
</g>
<g >
<title>runtime.send (2 samples, 0.04%)</title><rect x="10.5" y="245" width="0.5" height="15.0" fill="rgb(234,110,43)" rx="2" ry="2" />
<text  x="13.49" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).sendProbePacket (14 samples, 0.29%)</title><rect x="242.4" y="293" width="3.5" height="15.0" fill="rgb(207,219,45)" rx="2" ry="2" />
<text  x="245.42" y="303.5" ></text>
</g>
<g >
<title>time.startTimer (111 samples, 2.31%)</title><rect x="89.9" y="261" width="27.2" height="15.0" fill="rgb(205,192,29)" rx="2" ry="2" />
<text  x="92.93" y="271.5" >t..</text>
</g>
<g >
<title>runtime.markroot.func1 (14 samples, 0.29%)</title><rect x="336.6" y="245" width="3.4" height="15.0" fill="rgb(244,18,53)" rx="2" ry="2" />
<text  x="339.57" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*ExtendedHeader).parse (2 samples, 0.04%)</title><rect x="81.1" y="245" width="0.5" height="15.0" fill="rgb(230,207,46)" rx="2" ry="2" />
<text  x="84.10" y="255.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (6 samples, 0.12%)</title><rect x="331.2" y="197" width="1.4" height="15.0" fill="rgb(225,145,21)" rx="2" ry="2" />
<text  x="334.17" y="207.5" ></text>
</g>
<g >
<title>runtime.growslice (2 samples, 0.04%)</title><rect x="82.3" y="165" width="0.5" height="15.0" fill="rgb(242,8,45)" rx="2" ry="2" />
<text  x="85.32" y="175.5" ></text>
</g>
<g >
<title>runtime.resetspinning (3 samples, 0.06%)</title><rect x="359.9" y="277" width="0.7" height="15.0" fill="rgb(214,1,53)" rx="2" ry="2" />
<text  x="362.86" y="287.5" ></text>
</g>
<g >
<title>runtime.tracebackdefers (1 samples, 0.02%)</title><rect x="339.8" y="197" width="0.2" height="15.0" fill="rgb(208,200,5)" rx="2" ry="2" />
<text  x="342.75" y="207.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.02%)</title><rect x="309.8" y="245" width="0.3" height="15.0" fill="rgb(228,129,37)" rx="2" ry="2" />
<text  x="312.84" y="255.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.02%)</title><rect x="289.0" y="149" width="0.2" height="15.0" fill="rgb(237,217,31)" rx="2" ry="2" />
<text  x="292.00" y="159.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (1 samples, 0.02%)</title><rect x="1157.1" y="277" width="0.3" height="15.0" fill="rgb(206,223,49)" rx="2" ry="2" />
<text  x="1160.15" y="287.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.02%)</title><rect x="123.0" y="101" width="0.3" height="15.0" fill="rgb(212,70,1)" rx="2" ry="2" />
<text  x="126.02" y="111.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).freeSpan (1 samples, 0.02%)</title><rect x="118.6" y="133" width="0.3" height="15.0" fill="rgb(222,77,30)" rx="2" ry="2" />
<text  x="121.61" y="143.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.02%)</title><rect x="359.6" y="229" width="0.3" height="15.0" fill="rgb(228,13,26)" rx="2" ry="2" />
<text  x="362.61" y="239.5" ></text>
</g>
<g >
<title>runtime.aeshash64 (1 samples, 0.02%)</title><rect x="84.8" y="149" width="0.2" height="15.0" fill="rgb(243,101,42)" rx="2" ry="2" />
<text  x="87.78" y="159.5" ></text>
</g>
<g >
<title>net.(*UDPConn).writeTo (440 samples, 9.14%)</title><rect x="129.9" y="229" width="107.9" height="15.0" fill="rgb(252,145,0)" rx="2" ry="2" />
<text  x="132.89" y="239.5" >net.(*UDPConn..</text>
</g>
<g >
<title>runtime.startm (3 samples, 0.06%)</title><rect x="717.8" y="245" width="0.7" height="15.0" fill="rgb(242,225,37)" rx="2" ry="2" />
<text  x="720.80" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.LogFrame (1 samples, 0.02%)</title><rect x="85.8" y="245" width="0.2" height="15.0" fill="rgb(250,205,44)" rx="2" ry="2" />
<text  x="88.76" y="255.5" ></text>
</g>
<g >
<title>runtime.walltime (1 samples, 0.02%)</title><rect x="287.5" y="277" width="0.3" height="15.0" fill="rgb(236,142,45)" rx="2" ry="2" />
<text  x="290.53" y="287.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.02%)</title><rect x="719.8" y="197" width="0.2" height="15.0" fill="rgb(217,176,0)" rx="2" ry="2" />
<text  x="722.77" y="207.5" ></text>
</g>
<g >
<title>runtime.sysmon (7 samples, 0.15%)</title><rect x="720.0" y="293" width="1.7" height="15.0" fill="rgb(232,43,15)" rx="2" ry="2" />
<text  x="723.01" y="303.5" ></text>
</g>
<g >
<title>runtime.startm (1,759 samples, 36.55%)</title><rect x="721.7" y="261" width="431.3" height="15.0" fill="rgb(236,3,2)" rx="2" ry="2" />
<text  x="724.73" y="271.5" >runtime.startm</text>
</g>
<g >
<title>bytes.(*Reader).ReadByte (1 samples, 0.02%)</title><rect x="86.7" y="245" width="0.3" height="15.0" fill="rgb(223,207,9)" rx="2" ry="2" />
<text  x="89.74" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*frameParser).ParseNext (5 samples, 0.10%)</title><rect x="86.7" y="261" width="1.3" height="15.0" fill="rgb(211,102,22)" rx="2" ry="2" />
<text  x="89.74" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.06%)</title><rect x="88.2" y="213" width="0.7" height="15.0" fill="rgb(211,228,44)" rx="2" ry="2" />
<text  x="91.21" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*receivedPacketTracker).ReceivedPacket (2 samples, 0.04%)</title><rect x="86.2" y="245" width="0.5" height="15.0" fill="rgb(246,122,38)" rx="2" ry="2" />
<text  x="89.25" y="255.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (1 samples, 0.02%)</title><rect x="10.0" y="277" width="0.2" height="15.0" fill="rgb(238,119,53)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>runtime.syscall6 (1 samples, 0.02%)</title><rect x="1168.9" y="325" width="0.3" height="15.0" fill="rgb(228,16,45)" rx="2" ry="2" />
<text  x="1171.92" y="335.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).SentPacket (8 samples, 0.17%)</title><rect x="240.5" y="277" width="1.9" height="15.0" fill="rgb(220,183,30)" rx="2" ry="2" />
<text  x="243.46" y="287.5" ></text>
</g>
<g >
<title>runtime.acquirep (1 samples, 0.02%)</title><rect x="361.3" y="277" width="0.3" height="15.0" fill="rgb(219,223,20)" rx="2" ry="2" />
<text  x="364.33" y="287.5" ></text>
</g>
<g >
<title>time.now (1 samples, 0.02%)</title><rect x="1189.8" y="277" width="0.2" height="15.0" fill="rgb(249,207,42)" rx="2" ry="2" />
<text  x="1192.75" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packedPacket).ToAckHandlerPacket (3 samples, 0.06%)</title><rect x="118.6" y="277" width="0.7" height="15.0" fill="rgb(234,27,35)" rx="2" ry="2" />
<text  x="121.61" y="287.5" ></text>
</g>
<g >
<title>runtime.walltime (1 samples, 0.02%)</title><rect x="1189.8" y="261" width="0.2" height="15.0" fill="rgb(218,3,47)" rx="2" ry="2" />
<text  x="1192.75" y="271.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock_handoff (1 samples, 0.02%)</title><rect x="76.7" y="165" width="0.2" height="15.0" fill="rgb(232,131,37)" rx="2" ry="2" />
<text  x="79.69" y="175.5" ></text>
</g>
<g >
<title>runtime.sweepone (7 samples, 0.15%)</title><rect x="334.4" y="309" width="1.7" height="15.0" fill="rgb(227,175,49)" rx="2" ry="2" />
<text  x="337.36" y="319.5" ></text>
</g>
<g >
<title>runtime.osyield (2 samples, 0.04%)</title><rect x="341.0" y="277" width="0.5" height="15.0" fill="rgb(235,75,10)" rx="2" ry="2" />
<text  x="343.98" y="287.5" ></text>
</g>
<g >
<title>internal/poll.runtime_Semacquire (15 samples, 0.31%)</title><rect x="144.4" y="149" width="3.6" height="15.0" fill="rgb(226,50,54)" rx="2" ry="2" />
<text  x="147.35" y="159.5" ></text>
</g>
<g >
<title>runtime.mallocgc (9 samples, 0.19%)</title><rect x="330.4" y="277" width="2.2" height="15.0" fill="rgb(244,112,53)" rx="2" ry="2" />
<text  x="333.44" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*cryptoStreamImpl).HasData (1 samples, 0.02%)</title><rect x="123.5" y="245" width="0.3" height="15.0" fill="rgb(247,139,11)" rx="2" ry="2" />
<text  x="126.51" y="255.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (1 samples, 0.02%)</title><rect x="721.2" y="261" width="0.3" height="15.0" fill="rgb(212,181,6)" rx="2" ry="2" />
<text  x="724.24" y="271.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.unmarshalBytesValue (1 samples, 0.02%)</title><rect x="291.5" y="181" width="0.2" height="15.0" fill="rgb(242,112,48)" rx="2" ry="2" />
<text  x="294.45" y="191.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/utils.(*PacketIntervalElement).Prev (1 samples, 0.02%)</title><rect x="86.5" y="213" width="0.2" height="15.0" fill="rgb(215,130,31)" rx="2" ry="2" />
<text  x="89.49" y="223.5" ></text>
</g>
<g >
<title>runtime.freedefer (2 samples, 0.04%)</title><rect x="11.5" y="277" width="0.5" height="15.0" fill="rgb(232,155,50)" rx="2" ry="2" />
<text  x="14.47" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).handlePacket (3 samples, 0.06%)</title><rect x="10.2" y="293" width="0.8" height="15.0" fill="rgb(215,1,19)" rx="2" ry="2" />
<text  x="13.25" y="303.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.02%)</title><rect x="343.9" y="229" width="0.3" height="15.0" fill="rgb(211,96,35)" rx="2" ry="2" />
<text  x="346.92" y="239.5" ></text>
</g>
<g >
<title>runtime.efaceeq (1 samples, 0.02%)</title><rect x="295.9" y="133" width="0.2" height="15.0" fill="rgb(212,155,18)" rx="2" ry="2" />
<text  x="298.87" y="143.5" ></text>
</g>
<g >
<title>time.Time.Sub (1 samples, 0.02%)</title><rect x="84.0" y="213" width="0.3" height="15.0" fill="rgb(224,178,17)" rx="2" ry="2" />
<text  x="87.04" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/utils.VarIntLen (1 samples, 0.02%)</title><rect x="126.0" y="229" width="0.2" height="15.0" fill="rgb(205,185,22)" rx="2" ry="2" />
<text  x="128.97" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/utils.bigEndian.ReadUintN (1 samples, 0.02%)</title><rect x="81.3" y="197" width="0.3" height="15.0" fill="rgb(246,23,44)" rx="2" ry="2" />
<text  x="84.34" y="207.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.02%)</title><rect x="18.1" y="117" width="0.2" height="15.0" fill="rgb(254,99,6)" rx="2" ry="2" />
<text  x="21.09" y="127.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*marshalInfo).marshal (1 samples, 0.02%)</title><rect x="290.2" y="229" width="0.3" height="15.0" fill="rgb(236,92,36)" rx="2" ry="2" />
<text  x="293.23" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (107 samples, 2.22%)</title><rect x="89.9" y="181" width="26.3" height="15.0" fill="rgb(223,133,53)" rx="2" ry="2" />
<text  x="92.93" y="191.5" >r..</text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.02%)</title><rect x="360.6" y="229" width="0.2" height="15.0" fill="rgb(233,4,28)" rx="2" ry="2" />
<text  x="363.59" y="239.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (1 samples, 0.02%)</title><rect x="336.1" y="309" width="0.2" height="15.0" fill="rgb(215,131,32)" rx="2" ry="2" />
<text  x="339.08" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="245.6" y="261" width="0.3" height="15.0" fill="rgb(252,35,26)" rx="2" ry="2" />
<text  x="248.61" y="271.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*unmarshalInfo).unmarshal (1 samples, 0.02%)</title><rect x="299.3" y="181" width="0.2" height="15.0" fill="rgb(206,181,41)" rx="2" ry="2" />
<text  x="302.30" y="191.5" ></text>
</g>
<g >
<title>runtime.semasleep (3 samples, 0.06%)</title><rect x="1168.2" y="245" width="0.7" height="15.0" fill="rgb(225,32,31)" rx="2" ry="2" />
<text  x="1171.18" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.04%)</title><rect x="122.8" y="229" width="0.5" height="15.0" fill="rgb(210,45,28)" rx="2" ry="2" />
<text  x="125.78" y="239.5" ></text>
</g>
<g >
<title>runtime.mcall (1 samples, 0.02%)</title><rect x="332.9" y="309" width="0.2" height="15.0" fill="rgb(254,118,50)" rx="2" ry="2" />
<text  x="335.89" y="319.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*AckFrame).Length (1 samples, 0.02%)</title><rect x="126.0" y="245" width="0.2" height="15.0" fill="rgb(227,146,6)" rx="2" ry="2" />
<text  x="128.97" y="255.5" ></text>
</g>
<g >
<title>runtime.notetsleep (1 samples, 0.02%)</title><rect x="721.2" y="277" width="0.3" height="15.0" fill="rgb(213,159,24)" rx="2" ry="2" />
<text  x="724.24" y="287.5" ></text>
</g>
<g >
<title>syscall.syscall6 (360 samples, 7.48%)</title><rect x="149.5" y="149" width="88.3" height="15.0" fill="rgb(247,225,12)" rx="2" ry="2" />
<text  x="152.50" y="159.5" >syscall.sy..</text>
</g>
<g >
<title>syscall.Recvfrom (267 samples, 5.55%)</title><rect x="12.9" y="245" width="65.5" height="15.0" fill="rgb(239,169,54)" rx="2" ry="2" />
<text  x="15.94" y="255.5" >syscall..</text>
</g>
<g >
<title>runtime.pthread_cond_signal (3 samples, 0.06%)</title><rect x="717.8" y="197" width="0.7" height="15.0" fill="rgb(252,134,14)" rx="2" ry="2" />
<text  x="720.80" y="207.5" ></text>
</g>
<g >
<title>runtime.newobject (5 samples, 0.10%)</title><rect x="88.0" y="261" width="1.2" height="15.0" fill="rgb(228,164,1)" rx="2" ry="2" />
<text  x="90.96" y="271.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (59 samples, 1.23%)</title><rect x="18.3" y="181" width="14.5" height="15.0" fill="rgb(230,187,36)" rx="2" ry="2" />
<text  x="21.34" y="191.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*receivedPacketTracker).GetAckFrame (5 samples, 0.10%)</title><rect x="121.1" y="229" width="1.2" height="15.0" fill="rgb(221,227,41)" rx="2" ry="2" />
<text  x="124.06" y="239.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.ReplyEncode (4 samples, 0.08%)</title><rect x="299.5" y="245" width="1.0" height="15.0" fill="rgb(239,52,32)" rx="2" ry="2" />
<text  x="302.54" y="255.5" ></text>
</g>
<g >
<title>runtime.chanrecv (1 samples, 0.02%)</title><rect x="309.6" y="261" width="0.2" height="15.0" fill="rgb(210,150,25)" rx="2" ry="2" />
<text  x="312.60" y="271.5" ></text>
</g>
<g >
<title>time.Time.After (1 samples, 0.02%)</title><rect x="89.7" y="261" width="0.2" height="15.0" fill="rgb(249,121,22)" rx="2" ry="2" />
<text  x="92.68" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/congestion.(*cubicSender).TimeUntilSend (1 samples, 0.02%)</title><rect x="245.1" y="245" width="0.3" height="15.0" fill="rgb(241,154,11)" rx="2" ry="2" />
<text  x="248.12" y="255.5" ></text>
</g>
<g >
<title>time.Now (2 samples, 0.04%)</title><rect x="12.2" y="293" width="0.5" height="15.0" fill="rgb(251,161,16)" rx="2" ry="2" />
<text  x="15.21" y="303.5" ></text>
</g>
<g >
<title>reflect.(*rtype).typeOff (1 samples, 0.02%)</title><rect x="296.8" y="213" width="0.3" height="15.0" fill="rgb(218,22,17)" rx="2" ry="2" />
<text  x="299.85" y="223.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.02%)</title><rect x="360.6" y="261" width="0.2" height="15.0" fill="rgb(248,173,15)" rx="2" ry="2" />
<text  x="363.59" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mSpanList).remove (1 samples, 0.02%)</title><rect x="681.8" y="181" width="0.2" height="15.0" fill="rgb(230,7,12)" rx="2" ry="2" />
<text  x="684.76" y="191.5" ></text>
</g>
<g >
<title>time.Until (1 samples, 0.02%)</title><rect x="118.1" y="277" width="0.3" height="15.0" fill="rgb(205,15,17)" rx="2" ry="2" />
<text  x="121.12" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (4 samples, 0.08%)</title><rect x="310.3" y="245" width="1.0" height="15.0" fill="rgb(205,156,7)" rx="2" ry="2" />
<text  x="313.33" y="255.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (1 samples, 0.02%)</title><rect x="289.5" y="133" width="0.2" height="15.0" fill="rgb(213,228,40)" rx="2" ry="2" />
<text  x="292.49" y="143.5" ></text>
</g>
<g >
<title>time.Now (1 samples, 0.02%)</title><rect x="119.1" y="261" width="0.2" height="15.0" fill="rgb(227,209,3)" rx="2" ry="2" />
<text  x="122.10" y="271.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_fast64 (1 samples, 0.02%)</title><rect x="329.7" y="245" width="0.2" height="15.0" fill="rgb(232,191,46)" rx="2" ry="2" />
<text  x="332.70" y="255.5" ></text>
</g>
<g >
<title>crypto/aes.(*gcmAsm).Seal (3 samples, 0.06%)</title><rect x="125.2" y="213" width="0.8" height="15.0" fill="rgb(232,133,33)" rx="2" ry="2" />
<text  x="128.23" y="223.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.02%)</title><rect x="118.9" y="229" width="0.2" height="15.0" fill="rgb(233,174,3)" rx="2" ry="2" />
<text  x="121.86" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetBuffer).putBack (1 samples, 0.02%)</title><rect x="78.9" y="277" width="0.2" height="15.0" fill="rgb(228,181,12)" rx="2" ry="2" />
<text  x="81.89" y="287.5" ></text>
</g>
<g >
<title>runtime.selectgo (5 samples, 0.10%)</title><rect x="300.8" y="309" width="1.2" height="15.0" fill="rgb(237,225,50)" rx="2" ry="2" />
<text  x="303.77" y="319.5" ></text>
</g>
<g >
<title>bytes.(*Reader).Read (1 samples, 0.02%)</title><rect x="87.7" y="181" width="0.3" height="15.0" fill="rgb(217,183,13)" rx="2" ry="2" />
<text  x="90.72" y="191.5" ></text>
</g>
<g >
<title>runtime.asmcgocall (1 samples, 0.02%)</title><rect x="117.1" y="213" width="0.3" height="15.0" fill="rgb(232,62,16)" rx="2" ry="2" />
<text  x="120.14" y="223.5" ></text>
</g>
<g >
<title>bytes.NewReader (5 samples, 0.10%)</title><rect x="88.0" y="277" width="1.2" height="15.0" fill="rgb(224,71,39)" rx="2" ry="2" />
<text  x="90.96" y="287.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func3 (1 samples, 0.02%)</title><rect x="1157.1" y="293" width="0.3" height="15.0" fill="rgb(243,203,50)" rx="2" ry="2" />
<text  x="1160.15" y="303.5" ></text>
</g>
<g >
<title>runtime.park_m (441 samples, 9.16%)</title><rect x="611.4" y="309" width="108.1" height="15.0" fill="rgb(214,86,31)" rx="2" ry="2" />
<text  x="614.40" y="319.5" >runtime.park_m</text>
</g>
<g >
<title>runtime.selectnbsend (1 samples, 0.02%)</title><rect x="120.6" y="165" width="0.2" height="15.0" fill="rgb(226,73,32)" rx="2" ry="2" />
<text  x="123.57" y="175.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.02%)</title><rect x="359.6" y="245" width="0.3" height="15.0" fill="rgb(222,40,48)" rx="2" ry="2" />
<text  x="362.61" y="255.5" ></text>
</g>
<g >
<title>reflect.funcLayout (1 samples, 0.02%)</title><rect x="295.9" y="197" width="0.2" height="15.0" fill="rgb(224,178,11)" rx="2" ry="2" />
<text  x="298.87" y="207.5" ></text>
</g>
<g >
<title>runtime.growslice (4 samples, 0.08%)</title><rect x="237.8" y="213" width="0.9" height="15.0" fill="rgb(246,106,1)" rx="2" ry="2" />
<text  x="240.76" y="223.5" ></text>
</g>
<g >
<title>runtime.startm (42 samples, 0.87%)</title><rect x="1157.9" y="245" width="10.3" height="15.0" fill="rgb(254,177,47)" rx="2" ry="2" />
<text  x="1160.88" y="255.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.02%)</title><rect x="332.4" y="149" width="0.2" height="15.0" fill="rgb(235,118,23)" rx="2" ry="2" />
<text  x="335.40" y="159.5" ></text>
</g>
<g >
<title>runtime.unlock (3 samples, 0.06%)</title><rect x="718.8" y="277" width="0.7" height="15.0" fill="rgb(244,225,48)" rx="2" ry="2" />
<text  x="721.78" y="287.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.02%)</title><rect x="721.5" y="277" width="0.2" height="15.0" fill="rgb(223,1,15)" rx="2" ry="2" />
<text  x="724.48" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*windowUpdateQueue).QueueAll (1 samples, 0.02%)</title><rect x="240.2" y="277" width="0.3" height="15.0" fill="rgb(218,141,41)" rx="2" ry="2" />
<text  x="243.21" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*ExtendedHeader).writeShortHeader (3 samples, 0.06%)</title><rect x="126.2" y="229" width="0.7" height="15.0" fill="rgb(231,179,37)" rx="2" ry="2" />
<text  x="129.21" y="239.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.02%)</title><rect x="12.0" y="293" width="0.2" height="15.0" fill="rgb(214,111,9)" rx="2" ry="2" />
<text  x="14.96" y="303.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.02%)</title><rect x="130.4" y="149" width="0.2" height="15.0" fill="rgb(207,115,31)" rx="2" ry="2" />
<text  x="133.38" y="159.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (1 samples, 0.02%)</title><rect x="719.8" y="245" width="0.2" height="15.0" fill="rgb(223,0,41)" rx="2" ry="2" />
<text  x="722.77" y="255.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.(*Response).Encode (6 samples, 0.12%)</title><rect x="292.7" y="261" width="1.5" height="15.0" fill="rgb(226,134,30)" rx="2" ry="2" />
<text  x="295.68" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (5 samples, 0.10%)</title><rect x="88.0" y="245" width="1.2" height="15.0" fill="rgb(216,132,1)" rx="2" ry="2" />
<text  x="90.96" y="255.5" ></text>
</g>
<g >
<title>runtime.semasleep (2 samples, 0.04%)</title><rect x="1157.4" y="229" width="0.5" height="15.0" fill="rgb(231,82,51)" rx="2" ry="2" />
<text  x="1160.39" y="239.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/pb.(*Response).XXX_Marshal (3 samples, 0.06%)</title><rect x="292.9" y="229" width="0.8" height="15.0" fill="rgb(251,76,45)" rx="2" ry="2" />
<text  x="295.93" y="239.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.02%)</title><rect x="148.3" y="85" width="0.2" height="15.0" fill="rgb(230,97,29)" rx="2" ry="2" />
<text  x="151.28" y="95.5" ></text>
</g>
<g >
<title>runtime.osyield (2 samples, 0.04%)</title><rect x="612.9" y="245" width="0.5" height="15.0" fill="rgb(243,144,23)" rx="2" ry="2" />
<text  x="615.87" y="255.5" ></text>
</g>
<g >
<title>runtime.(*timersBucket).deltimerLocked (1 samples, 0.02%)</title><rect x="117.4" y="229" width="0.2" height="15.0" fill="rgb(219,96,7)" rx="2" ry="2" />
<text  x="120.38" y="239.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.02%)</title><rect x="288.3" y="245" width="0.2" height="15.0" fill="rgb(211,207,17)" rx="2" ry="2" />
<text  x="291.27" y="255.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.02%)</title><rect x="148.3" y="101" width="0.2" height="15.0" fill="rgb(239,59,8)" rx="2" ry="2" />
<text  x="151.28" y="111.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).handleFrame (17 samples, 0.35%)</title><rect x="81.8" y="261" width="4.2" height="15.0" fill="rgb(229,192,8)" rx="2" ry="2" />
<text  x="84.83" y="271.5" ></text>
</g>
<g >
<title>runtime.resolveTypeOff (1 samples, 0.02%)</title><rect x="296.8" y="165" width="0.3" height="15.0" fill="rgb(228,51,42)" rx="2" ry="2" />
<text  x="299.85" y="175.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetPacker).getHeader (4 samples, 0.08%)</title><rect x="122.3" y="261" width="1.0" height="15.0" fill="rgb(240,59,30)" rx="2" ry="2" />
<text  x="125.29" y="271.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Marshal (4 samples, 0.08%)</title><rect x="299.5" y="229" width="1.0" height="15.0" fill="rgb(245,116,17)" rx="2" ry="2" />
<text  x="302.54" y="239.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).next (2 samples, 0.04%)</title><rect x="343.4" y="261" width="0.5" height="15.0" fill="rgb(252,186,25)" rx="2" ry="2" />
<text  x="346.43" y="271.5" ></text>
</g>
<g >
<title>sync.(*Pool).pin (1 samples, 0.02%)</title><rect x="78.9" y="245" width="0.2" height="15.0" fill="rgb(236,175,17)" rx="2" ry="2" />
<text  x="81.89" y="255.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.02%)</title><rect x="289.0" y="133" width="0.2" height="15.0" fill="rgb(243,189,47)" rx="2" ry="2" />
<text  x="292.00" y="143.5" ></text>
</g>
<g >
<title>runtime.nanotime (2 samples, 0.04%)</title><rect x="287.0" y="277" width="0.5" height="15.0" fill="rgb(240,114,45)" rx="2" ry="2" />
<text  x="290.04" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (5 samples, 0.10%)</title><rect x="288.5" y="213" width="1.2" height="15.0" fill="rgb(228,5,12)" rx="2" ry="2" />
<text  x="291.51" y="223.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.(*Server).CallService (26 samples, 0.54%)</title><rect x="294.2" y="261" width="6.3" height="15.0" fill="rgb(242,136,10)" rx="2" ry="2" />
<text  x="297.15" y="271.5" ></text>
</g>
<g >
<title>runtime.nanotime (12 samples, 0.25%)</title><rect x="1169.2" y="309" width="2.9" height="15.0" fill="rgb(207,176,12)" rx="2" ry="2" />
<text  x="1172.16" y="319.5" ></text>
</g>
<g >
<title>runtime.netpollready (1 samples, 0.02%)</title><rect x="668.3" y="245" width="0.2" height="15.0" fill="rgb(211,81,7)" rx="2" ry="2" />
<text  x="671.28" y="255.5" ></text>
</g>
<g >
<title>runtime.newobject (63 samples, 1.31%)</title><rect x="17.4" y="213" width="15.4" height="15.0" fill="rgb(233,156,25)" rx="2" ry="2" />
<text  x="20.36" y="223.5" ></text>
</g>
<g >
<title>io.ReadFull (1 samples, 0.02%)</title><rect x="87.7" y="213" width="0.3" height="15.0" fill="rgb(253,92,38)" rx="2" ry="2" />
<text  x="90.72" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mspan).sweep (1 samples, 0.02%)</title><rect x="335.8" y="293" width="0.3" height="15.0" fill="rgb(222,97,14)" rx="2" ry="2" />
<text  x="338.83" y="303.5" ></text>
</g>
<g >
<title>runtime.findrunnable (68 samples, 1.41%)</title><rect x="342.9" y="277" width="16.7" height="15.0" fill="rgb(240,20,33)" rx="2" ry="2" />
<text  x="345.94" y="287.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1,759 samples, 36.55%)</title><rect x="721.7" y="245" width="431.3" height="15.0" fill="rgb(253,150,33)" rx="2" ry="2" />
<text  x="724.73" y="255.5" >runtime.notewakeup</text>
</g>
<g >
<title>time.(*Timer).Stop (3 samples, 0.06%)</title><rect x="117.4" y="277" width="0.7" height="15.0" fill="rgb(236,61,4)" rx="2" ry="2" />
<text  x="120.38" y="287.5" ></text>
</g>
<g >
<title>runtime.walltime (3 samples, 0.06%)</title><rect x="123.8" y="181" width="0.7" height="15.0" fill="rgb(213,48,20)" rx="2" ry="2" />
<text  x="126.76" y="191.5" ></text>
</g>
<g >
<title>runtime.chansend (1 samples, 0.02%)</title><rect x="120.6" y="149" width="0.2" height="15.0" fill="rgb(215,109,48)" rx="2" ry="2" />
<text  x="123.57" y="159.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (1 samples, 0.02%)</title><rect x="360.6" y="277" width="0.2" height="15.0" fill="rgb(243,186,6)" rx="2" ry="2" />
<text  x="363.59" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.02%)</title><rect x="118.6" y="213" width="0.3" height="15.0" fill="rgb(230,33,38)" rx="2" ry="2" />
<text  x="121.61" y="223.5" ></text>
</g>
<g >
<title>runtime.readyWithTime (1 samples, 0.02%)</title><rect x="336.1" y="261" width="0.2" height="15.0" fill="rgb(221,86,4)" rx="2" ry="2" />
<text  x="339.08" y="271.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*marshalInfo).size (1 samples, 0.02%)</title><rect x="293.7" y="197" width="0.2" height="15.0" fill="rgb(208,11,19)" rx="2" ry="2" />
<text  x="296.66" y="207.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).WriteTo (11 samples, 0.23%)</title><rect x="242.4" y="197" width="2.7" height="15.0" fill="rgb(251,130,40)" rx="2" ry="2" />
<text  x="245.42" y="207.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).queue (13 samples, 0.27%)</title><rect x="144.6" y="117" width="3.2" height="15.0" fill="rgb(252,115,6)" rx="2" ry="2" />
<text  x="147.60" y="127.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.02%)</title><rect x="1157.1" y="261" width="0.3" height="15.0" fill="rgb(214,190,39)" rx="2" ry="2" />
<text  x="1160.15" y="271.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.06%)</title><rect x="129.9" y="181" width="0.7" height="15.0" fill="rgb(243,180,4)" rx="2" ry="2" />
<text  x="132.89" y="191.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).handleStreamFrame (6 samples, 0.12%)</title><rect x="84.3" y="245" width="1.5" height="15.0" fill="rgb(216,169,19)" rx="2" ry="2" />
<text  x="87.29" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.02%)</title><rect x="118.6" y="229" width="0.3" height="15.0" fill="rgb(207,39,47)" rx="2" ry="2" />
<text  x="121.61" y="239.5" ></text>
</g>
<g >
<title>runtime.reflectcallmove (1 samples, 0.02%)</title><rect x="295.1" y="181" width="0.3" height="15.0" fill="rgb(224,171,35)" rx="2" ry="2" />
<text  x="298.13" y="191.5" ></text>
</g>
<g >
<title>runtime.chanrecv1 (1 samples, 0.02%)</title><rect x="309.6" y="277" width="0.2" height="15.0" fill="rgb(239,206,26)" rx="2" ry="2" />
<text  x="312.60" y="287.5" ></text>
</g>
<g >
<title>runtime.spanOf (1 samples, 0.02%)</title><rect x="332.2" y="149" width="0.2" height="15.0" fill="rgb(210,43,34)" rx="2" ry="2" />
<text  x="335.15" y="159.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.HasAckElicitingFrames (1 samples, 0.02%)</title><rect x="127.7" y="261" width="0.2" height="15.0" fill="rgb(228,79,19)" rx="2" ry="2" />
<text  x="130.68" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetPacker).composeNextPacket (12 samples, 0.25%)</title><rect x="119.3" y="261" width="3.0" height="15.0" fill="rgb(223,43,10)" rx="2" ry="2" />
<text  x="122.35" y="271.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (8 samples, 0.17%)</title><rect x="1172.1" y="277" width="2.0" height="15.0" fill="rgb(240,195,51)" rx="2" ry="2" />
<text  x="1175.10" y="287.5" ></text>
</g>
<g >
<title>github.com/marten-seemann/qtls.(*xorNonceAEAD).Overhead (3 samples, 0.06%)</title><rect x="128.2" y="245" width="0.7" height="15.0" fill="rgb(223,206,33)" rx="2" ry="2" />
<text  x="131.17" y="255.5" ></text>
</g>
<g >
<title>runtime.scang (14 samples, 0.29%)</title><rect x="336.6" y="229" width="3.4" height="15.0" fill="rgb(213,205,33)" rx="2" ry="2" />
<text  x="339.57" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (1,824 samples, 37.90%)</title><rect x="721.7" y="309" width="447.2" height="15.0" fill="rgb(223,185,36)" rx="2" ry="2" />
<text  x="724.73" y="319.5" >runtime.systemstack</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*receivedPacketTracker).GetAckFrame (3 samples, 0.06%)</title><rect x="123.8" y="229" width="0.7" height="15.0" fill="rgb(219,214,15)" rx="2" ry="2" />
<text  x="126.76" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (5 samples, 0.10%)</title><rect x="288.5" y="229" width="1.2" height="15.0" fill="rgb(209,114,29)" rx="2" ry="2" />
<text  x="291.51" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).onPacketAcked (2 samples, 0.04%)</title><rect x="82.8" y="213" width="0.5" height="15.0" fill="rgb(228,46,13)" rx="2" ry="2" />
<text  x="85.82" y="223.5" ></text>
</g>
<g >
<title>runtime.runqgrab (52 samples, 1.08%)</title><rect x="669.0" y="245" width="12.8" height="15.0" fill="rgb(228,52,31)" rx="2" ry="2" />
<text  x="672.02" y="255.5" ></text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.02%)</title><rect x="719.5" y="229" width="0.3" height="15.0" fill="rgb(218,118,48)" rx="2" ry="2" />
<text  x="722.52" y="239.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (1 samples, 0.02%)</title><rect x="120.3" y="229" width="0.3" height="15.0" fill="rgb(230,177,33)" rx="2" ry="2" />
<text  x="123.33" y="239.5" ></text>
</g>
<g >
<title>runtime.runqempty (1 samples, 0.02%)</title><rect x="229.7" y="69" width="0.2" height="15.0" fill="rgb(205,138,30)" rx="2" ry="2" />
<text  x="232.67" y="79.5" ></text>
</g>
<g >
<title>runtime.convT64 (1 samples, 0.02%)</title><rect x="245.6" y="277" width="0.3" height="15.0" fill="rgb(250,129,11)" rx="2" ry="2" />
<text  x="248.61" y="287.5" ></text>
</g>
<g >
<title>time.Time.IsZero (1 samples, 0.02%)</title><rect x="287.8" y="309" width="0.2" height="15.0" fill="rgb(225,63,26)" rx="2" ry="2" />
<text  x="290.78" y="319.5" ></text>
</g>
<g >
<title>runtime.notesleep (144 samples, 2.99%)</title><rect x="682.0" y="245" width="35.3" height="15.0" fill="rgb(227,39,27)" rx="2" ry="2" />
<text  x="685.01" y="255.5" >ru..</text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (5 samples, 0.10%)</title><rect x="288.5" y="197" width="1.2" height="15.0" fill="rgb(212,191,7)" rx="2" ry="2" />
<text  x="291.51" y="207.5" ></text>
</g>
<g >
<title>runtime.netpoll (217 samples, 4.51%)</title><rect x="615.3" y="261" width="53.2" height="15.0" fill="rgb(243,164,32)" rx="2" ry="2" />
<text  x="618.32" y="271.5" >runti..</text>
</g>
<g >
<title>runtime.scanblock (3 samples, 0.06%)</title><rect x="338.8" y="149" width="0.7" height="15.0" fill="rgb(213,109,26)" rx="2" ry="2" />
<text  x="341.77" y="159.5" ></text>
</g>
<g >
<title>runtime.stopm (29 samples, 0.60%)</title><rect x="352.5" y="261" width="7.1" height="15.0" fill="rgb(245,226,29)" rx="2" ry="2" />
<text  x="355.50" y="271.5" ></text>
</g>
<g >
<title>runtime.siftupTimer (1 samples, 0.02%)</title><rect x="117.4" y="213" width="0.2" height="15.0" fill="rgb(228,46,24)" rx="2" ry="2" />
<text  x="120.38" y="223.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).ReadFrom (268 samples, 5.57%)</title><rect x="12.7" y="261" width="65.7" height="15.0" fill="rgb(238,144,37)" rx="2" ry="2" />
<text  x="15.70" y="271.5" >interna..</text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (3 samples, 0.06%)</title><rect x="237.8" y="149" width="0.7" height="15.0" fill="rgb(227,142,52)" rx="2" ry="2" />
<text  x="240.76" y="159.5" ></text>
</g>
<g >
<title>runtime.resolveNameOff (1 samples, 0.02%)</title><rect x="294.4" y="165" width="0.2" height="15.0" fill="rgb(239,188,32)" rx="2" ry="2" />
<text  x="297.40" y="175.5" ></text>
</g>
<g >
<title>runtime.lock (2 samples, 0.04%)</title><rect x="612.9" y="261" width="0.5" height="15.0" fill="rgb(208,114,18)" rx="2" ry="2" />
<text  x="615.87" y="271.5" ></text>
</g>
<g >
<title>runtime.getStackMap (1 samples, 0.02%)</title><rect x="338.5" y="149" width="0.3" height="15.0" fill="rgb(211,106,14)" rx="2" ry="2" />
<text  x="341.53" y="159.5" ></text>
</g>
<g >
<title>runtime.mallocgc (63 samples, 1.31%)</title><rect x="17.4" y="197" width="15.4" height="15.0" fill="rgb(235,172,52)" rx="2" ry="2" />
<text  x="20.36" y="207.5" ></text>
</g>
<g >
<title>runtime.osyield (2 samples, 0.04%)</title><rect x="1153.0" y="245" width="0.5" height="15.0" fill="rgb(209,148,47)" rx="2" ry="2" />
<text  x="1155.98" y="255.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (6 samples, 0.12%)</title><rect x="76.9" y="197" width="1.5" height="15.0" fill="rgb(220,121,42)" rx="2" ry="2" />
<text  x="79.93" y="207.5" ></text>
</g>
<g >
<title>github.com/marten-seemann/qtls.(*xorNonceAEAD).Overhead (1 samples, 0.02%)</title><rect x="125.0" y="229" width="0.2" height="15.0" fill="rgb(242,201,49)" rx="2" ry="2" />
<text  x="127.98" y="239.5" ></text>
</g>
<g >
<title>runtime.aeshash64 (24 samples, 0.50%)</title><rect x="303.2" y="229" width="5.9" height="15.0" fill="rgb(243,111,4)" rx="2" ry="2" />
<text  x="306.22" y="239.5" ></text>
</g>
<g >
<title>syscall.anyToSockaddr (65 samples, 1.35%)</title><rect x="16.9" y="229" width="15.9" height="15.0" fill="rgb(233,204,38)" rx="2" ry="2" />
<text  x="19.86" y="239.5" ></text>
</g>
<g >
<title>runtime.acquireSudog (1 samples, 0.02%)</title><rect x="284.8" y="293" width="0.3" height="15.0" fill="rgb(240,57,7)" rx="2" ry="2" />
<text  x="287.83" y="303.5" ></text>
</g>
<g >
<title>time.Now (3 samples, 0.06%)</title><rect x="121.6" y="213" width="0.7" height="15.0" fill="rgb(251,215,5)" rx="2" ry="2" />
<text  x="124.55" y="223.5" ></text>
</g>
<g >
<title>runtime.semasleep (27 samples, 0.56%)</title><rect x="353.0" y="229" width="6.6" height="15.0" fill="rgb(213,132,21)" rx="2" ry="2" />
<text  x="355.99" y="239.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.02%)</title><rect x="290.7" y="245" width="0.3" height="15.0" fill="rgb(237,143,42)" rx="2" ry="2" />
<text  x="293.72" y="255.5" ></text>
</g>
<g >
<title>runtime.goready (2 samples, 0.04%)</title><rect x="10.5" y="229" width="0.5" height="15.0" fill="rgb(226,150,35)" rx="2" ry="2" />
<text  x="13.49" y="239.5" ></text>
</g>
<g >
<title>runtime.timerproc (85 samples, 1.77%)</title><rect x="1169.2" y="325" width="20.8" height="15.0" fill="rgb(226,68,29)" rx="2" ry="2" />
<text  x="1172.16" y="335.5" ></text>
</g>
<g >
<title>runtime.notewakeup (108 samples, 2.24%)</title><rect x="89.9" y="213" width="26.5" height="15.0" fill="rgb(214,23,50)" rx="2" ry="2" />
<text  x="92.93" y="223.5" >r..</text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.02%)</title><rect x="116.9" y="213" width="0.2" height="15.0" fill="rgb(218,47,13)" rx="2" ry="2" />
<text  x="119.89" y="223.5" ></text>
</g>
<g >
<title>syscall.sendto (9 samples, 0.19%)</title><rect x="242.9" y="165" width="2.2" height="15.0" fill="rgb(224,173,15)" rx="2" ry="2" />
<text  x="245.91" y="175.5" ></text>
</g>
<g >
<title>runtime.stopm (145 samples, 3.01%)</title><rect x="681.8" y="261" width="35.5" height="15.0" fill="rgb(211,153,20)" rx="2" ry="2" />
<text  x="684.76" y="271.5" >run..</text>
</g>
<g >
<title>runtime.chansend (3 samples, 0.06%)</title><rect x="10.2" y="261" width="0.8" height="15.0" fill="rgb(254,154,38)" rx="2" ry="2" />
<text  x="13.25" y="271.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/funcs.(*Funcs).Call (15 samples, 0.31%)</title><rect x="294.2" y="245" width="3.6" height="15.0" fill="rgb(222,175,31)" rx="2" ry="2" />
<text  x="297.15" y="255.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).writeUnlock (2 samples, 0.04%)</title><rect x="148.0" y="181" width="0.5" height="15.0" fill="rgb(229,66,53)" rx="2" ry="2" />
<text  x="151.03" y="191.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Unmarshal (5 samples, 0.10%)</title><rect x="291.2" y="245" width="1.2" height="15.0" fill="rgb(208,138,12)" rx="2" ry="2" />
<text  x="294.21" y="255.5" ></text>
</g>
<g >
<title>runtime.handoffp (1 samples, 0.02%)</title><rect x="76.7" y="149" width="0.2" height="15.0" fill="rgb(210,30,35)" rx="2" ry="2" />
<text  x="79.69" y="159.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*ExtendedHeader).parseShortHeader (1 samples, 0.02%)</title><rect x="81.3" y="229" width="0.3" height="15.0" fill="rgb(247,213,14)" rx="2" ry="2" />
<text  x="84.34" y="239.5" ></text>
</g>
<g >
<title>io.ReadAtLeast (1 samples, 0.02%)</title><rect x="87.7" y="197" width="0.3" height="15.0" fill="rgb(252,199,8)" rx="2" ry="2" />
<text  x="90.72" y="207.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.02%)</title><rect x="611.2" y="213" width="0.2" height="15.0" fill="rgb(224,174,44)" rx="2" ry="2" />
<text  x="614.16" y="223.5" ></text>
</g>
<g >
<title>runtime.findObject (2 samples, 0.04%)</title><rect x="339.0" y="133" width="0.5" height="15.0" fill="rgb(245,141,5)" rx="2" ry="2" />
<text  x="342.02" y="143.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (4 samples, 0.08%)</title><rect x="338.5" y="165" width="1.0" height="15.0" fill="rgb(235,147,54)" rx="2" ry="2" />
<text  x="341.53" y="175.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.02%)</title><rect x="123.0" y="117" width="0.3" height="15.0" fill="rgb(218,223,4)" rx="2" ry="2" />
<text  x="126.02" y="127.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/handshake.(*opener).DecryptHeader (1 samples, 0.02%)</title><rect x="80.1" y="261" width="0.3" height="15.0" fill="rgb(224,121,31)" rx="2" ry="2" />
<text  x="83.12" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*framerI).AppendStreamFrames (2 samples, 0.04%)</title><rect x="120.6" y="245" width="0.5" height="15.0" fill="rgb(212,214,36)" rx="2" ry="2" />
<text  x="123.57" y="255.5" ></text>
</g>
<g >
<title>runtime.newMarkBits (1 samples, 0.02%)</title><rect x="335.8" y="277" width="0.3" height="15.0" fill="rgb(239,176,13)" rx="2" ry="2" />
<text  x="338.83" y="287.5" ></text>
</g>
<g >
<title>time.now (2 samples, 0.04%)</title><rect x="12.2" y="277" width="0.5" height="15.0" fill="rgb(238,54,14)" rx="2" ry="2" />
<text  x="15.21" y="287.5" ></text>
</g>
<g >
<title>runtime.mapdelete_fast64 (1 samples, 0.02%)</title><rect x="83.1" y="181" width="0.2" height="15.0" fill="rgb(246,217,17)" rx="2" ry="2" />
<text  x="86.06" y="191.5" ></text>
</g>
<g >
<title>runtime.schedule (78 samples, 1.62%)</title><rect x="342.0" y="293" width="19.1" height="15.0" fill="rgb(242,180,53)" rx="2" ry="2" />
<text  x="344.96" y="303.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.02%)</title><rect x="289.7" y="245" width="0.3" height="15.0" fill="rgb(254,121,53)" rx="2" ry="2" />
<text  x="292.74" y="255.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (1 samples, 0.02%)</title><rect x="300.3" y="181" width="0.2" height="15.0" fill="rgb(212,69,27)" rx="2" ry="2" />
<text  x="303.28" y="191.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (2 samples, 0.04%)</title><rect x="1157.4" y="245" width="0.5" height="15.0" fill="rgb(252,102,39)" rx="2" ry="2" />
<text  x="1160.39" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.ParsePacket (7 samples, 0.15%)</title><rect x="88.0" y="293" width="1.7" height="15.0" fill="rgb(224,71,16)" rx="2" ry="2" />
<text  x="90.96" y="303.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/examples/example/pb/service.(*ArithResponse).XXX_Marshal (2 samples, 0.04%)</title><rect x="299.5" y="213" width="0.5" height="15.0" fill="rgb(222,47,47)" rx="2" ry="2" />
<text  x="302.54" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.02%)</title><rect x="361.3" y="261" width="0.3" height="15.0" fill="rgb(247,195,29)" rx="2" ry="2" />
<text  x="364.33" y="271.5" ></text>
</g>
<g >
<title>runtime.growslice (6 samples, 0.12%)</title><rect x="310.1" y="309" width="1.5" height="15.0" fill="rgb(231,208,29)" rx="2" ry="2" />
<text  x="313.09" y="319.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Name (2 samples, 0.04%)</title><rect x="294.2" y="229" width="0.4" height="15.0" fill="rgb(250,29,4)" rx="2" ry="2" />
<text  x="297.15" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*Header).parseShortHeader (2 samples, 0.04%)</title><rect x="89.2" y="245" width="0.5" height="15.0" fill="rgb(247,176,4)" rx="2" ry="2" />
<text  x="92.19" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetHandlerMap).maybeHandleStatelessReset (1 samples, 0.02%)</title><rect x="10.0" y="293" width="0.2" height="15.0" fill="rgb(211,124,38)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.stripNonAckElicitingFrames (2 samples, 0.04%)</title><rect x="240.5" y="245" width="0.4" height="15.0" fill="rgb(246,155,13)" rx="2" ry="2" />
<text  x="243.46" y="255.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/examples/example/pb/service.(*ArithRequest).XXX_Unmarshal (1 samples, 0.02%)</title><rect x="299.3" y="213" width="0.2" height="15.0" fill="rgb(234,104,39)" rx="2" ry="2" />
<text  x="302.30" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.parseHeaderImpl (2 samples, 0.04%)</title><rect x="89.2" y="261" width="0.5" height="15.0" fill="rgb(251,109,45)" rx="2" ry="2" />
<text  x="92.19" y="271.5" ></text>
</g>
<g >
<title>runtime.sweepone (1 samples, 0.02%)</title><rect x="118.6" y="165" width="0.3" height="15.0" fill="rgb(210,13,37)" rx="2" ry="2" />
<text  x="121.61" y="175.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*streamsMap).GetOrOpenSendStream (1 samples, 0.02%)</title><rect x="120.8" y="229" width="0.3" height="15.0" fill="rgb(246,70,8)" rx="2" ry="2" />
<text  x="123.82" y="239.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (1 samples, 0.02%)</title><rect x="120.6" y="85" width="0.2" height="15.0" fill="rgb(213,6,42)" rx="2" ry="2" />
<text  x="123.57" y="95.5" ></text>
</g>
<g >
<title>runtime.semrelease1 (1 samples, 0.02%)</title><rect x="88.0" y="181" width="0.2" height="15.0" fill="rgb(216,199,4)" rx="2" ry="2" />
<text  x="90.96" y="191.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (20 samples, 0.42%)</title><rect x="336.1" y="325" width="4.9" height="15.0" fill="rgb(228,58,40)" rx="2" ry="2" />
<text  x="339.08" y="335.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetPacker).writeAndSealPacket (13 samples, 0.27%)</title><rect x="124.5" y="261" width="3.2" height="15.0" fill="rgb(238,217,31)" rx="2" ry="2" />
<text  x="127.49" y="271.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.02%)</title><rect x="344.4" y="245" width="0.3" height="15.0" fill="rgb(247,31,38)" rx="2" ry="2" />
<text  x="347.41" y="255.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.(*Server).Handler (38 samples, 0.79%)</title><rect x="291.2" y="277" width="9.3" height="15.0" fill="rgb(233,181,43)" rx="2" ry="2" />
<text  x="294.21" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).sendPackedPacket (11 samples, 0.23%)</title><rect x="242.4" y="277" width="2.7" height="15.0" fill="rgb(206,12,3)" rx="2" ry="2" />
<text  x="245.42" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHistory).SentPacket (3 samples, 0.06%)</title><rect x="241.7" y="261" width="0.7" height="15.0" fill="rgb(221,127,37)" rx="2" ry="2" />
<text  x="244.69" y="271.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.02%)</title><rect x="338.5" y="101" width="0.3" height="15.0" fill="rgb(205,136,28)" rx="2" ry="2" />
<text  x="341.53" y="111.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (2 samples, 0.04%)</title><rect x="1157.4" y="213" width="0.5" height="15.0" fill="rgb(227,13,4)" rx="2" ry="2" />
<text  x="1160.39" y="223.5" ></text>
</g>
<g >
<title>runtime.nanotime (8 samples, 0.17%)</title><rect x="613.4" y="261" width="1.9" height="15.0" fill="rgb(227,102,12)" rx="2" ry="2" />
<text  x="616.36" y="271.5" ></text>
</g>
<g >
<title>runtime.newobject (6 samples, 0.12%)</title><rect x="288.5" y="277" width="1.5" height="15.0" fill="rgb(235,176,50)" rx="2" ry="2" />
<text  x="291.51" y="287.5" ></text>
</g>
<g >
<title>runtime.schedule (437 samples, 9.08%)</title><rect x="611.6" y="293" width="107.2" height="15.0" fill="rgb(223,49,21)" rx="2" ry="2" />
<text  x="614.65" y="303.5" >runtime.sched..</text>
</g>
<g >
<title>sync.(*Mutex).Lock (1 samples, 0.02%)</title><rect x="79.9" y="245" width="0.2" height="15.0" fill="rgb(245,76,33)" rx="2" ry="2" />
<text  x="82.87" y="255.5" ></text>
</g>
<g >
<title>runtime.gosched_m (3 samples, 0.06%)</title><rect x="610.7" y="309" width="0.7" height="15.0" fill="rgb(210,217,19)" rx="2" ry="2" />
<text  x="613.66" y="319.5" ></text>
</g>
<g >
<title>runtime.semasleep (143 samples, 2.97%)</title><rect x="682.3" y="229" width="35.0" height="15.0" fill="rgb(244,123,53)" rx="2" ry="2" />
<text  x="685.25" y="239.5" >ru..</text>
</g>
<g >
<title>runtime.scanobject (3 samples, 0.06%)</title><rect x="237.8" y="101" width="0.7" height="15.0" fill="rgb(205,163,39)" rx="2" ry="2" />
<text  x="240.76" y="111.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*frameSorter).push (2 samples, 0.04%)</title><rect x="84.5" y="181" width="0.5" height="15.0" fill="rgb(223,12,20)" rx="2" ry="2" />
<text  x="87.53" y="191.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.02%)</title><rect x="18.1" y="101" width="0.2" height="15.0" fill="rgb(235,152,54)" rx="2" ry="2" />
<text  x="21.09" y="111.5" ></text>
</g>
<g >
<title>net.(*UDPAddr).sockaddr (3 samples, 0.06%)</title><rect x="129.9" y="213" width="0.7" height="15.0" fill="rgb(249,211,23)" rx="2" ry="2" />
<text  x="132.89" y="223.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (4 samples, 0.08%)</title><rect x="237.8" y="229" width="0.9" height="15.0" fill="rgb(240,223,40)" rx="2" ry="2" />
<text  x="240.76" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="229.7" y="117" width="0.2" height="15.0" fill="rgb(254,52,16)" rx="2" ry="2" />
<text  x="232.67" y="127.5" ></text>
</g>
<g >
<title>reflect.(*rtype).AssignableTo (1 samples, 0.02%)</title><rect x="295.4" y="197" width="0.2" height="15.0" fill="rgb(247,198,45)" rx="2" ry="2" />
<text  x="298.38" y="207.5" ></text>
</g>
<g >
<title>runtime.runqput (1 samples, 0.02%)</title><rect x="120.6" y="53" width="0.2" height="15.0" fill="rgb(206,140,35)" rx="2" ry="2" />
<text  x="123.57" y="63.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetPacker).maybePackCryptoPacket (5 samples, 0.10%)</title><rect x="123.3" y="261" width="1.2" height="15.0" fill="rgb(246,140,14)" rx="2" ry="2" />
<text  x="126.27" y="271.5" ></text>
</g>
<g >
<title>net.(*UDPConn).WriteTo (11 samples, 0.23%)</title><rect x="242.4" y="245" width="2.7" height="15.0" fill="rgb(253,28,40)" rx="2" ry="2" />
<text  x="245.42" y="255.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (5 samples, 0.10%)</title><rect x="288.5" y="245" width="1.2" height="15.0" fill="rgb(214,206,52)" rx="2" ry="2" />
<text  x="291.51" y="255.5" ></text>
</g>
<g >
<title>runtime.runqsteal (52 samples, 1.08%)</title><rect x="669.0" y="261" width="12.8" height="15.0" fill="rgb(244,221,20)" rx="2" ry="2" />
<text  x="672.02" y="271.5" ></text>
</g>
<g >
<title>runtime.wakep (3 samples, 0.06%)</title><rect x="717.8" y="261" width="0.7" height="15.0" fill="rgb(224,21,52)" rx="2" ry="2" />
<text  x="720.80" y="271.5" ></text>
</g>
<g >
<title>runtime.lock (2 samples, 0.04%)</title><rect x="1153.0" y="261" width="0.5" height="15.0" fill="rgb(250,133,26)" rx="2" ry="2" />
<text  x="1155.98" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHistory).SentPacketsAsRetransmission (1 samples, 0.02%)</title><rect x="245.4" y="261" width="0.2" height="15.0" fill="rgb(216,64,29)" rx="2" ry="2" />
<text  x="248.36" y="271.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Unmarshal (1 samples, 0.02%)</title><rect x="288.3" y="277" width="0.2" height="15.0" fill="rgb(231,157,31)" rx="2" ry="2" />
<text  x="291.27" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).updateLossDetectionAlarm (1 samples, 0.02%)</title><rect x="241.4" y="261" width="0.3" height="15.0" fill="rgb(237,187,33)" rx="2" ry="2" />
<text  x="244.44" y="271.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/funcs.(*Funcs).GetFunc (4 samples, 0.08%)</title><rect x="297.8" y="245" width="1.0" height="15.0" fill="rgb(228,150,25)" rx="2" ry="2" />
<text  x="300.83" y="255.5" ></text>
</g>
<g >
<title>runtime.semrelease (1 samples, 0.02%)</title><rect x="88.0" y="197" width="0.2" height="15.0" fill="rgb(206,1,54)" rx="2" ry="2" />
<text  x="90.96" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*receiveStream).handleStreamFrame (4 samples, 0.08%)</title><rect x="84.5" y="229" width="1.0" height="15.0" fill="rgb(212,159,13)" rx="2" ry="2" />
<text  x="87.53" y="239.5" ></text>
</g>
<g >
<title>reflect.resolveTypeOff (1 samples, 0.02%)</title><rect x="296.8" y="197" width="0.3" height="15.0" fill="rgb(206,171,26)" rx="2" ry="2" />
<text  x="299.85" y="207.5" ></text>
</g>
<g >
<title>runtime.notetsleep (2 samples, 0.04%)</title><rect x="1157.4" y="261" width="0.5" height="15.0" fill="rgb(206,78,7)" rx="2" ry="2" />
<text  x="1160.39" y="271.5" ></text>
</g>
<g >
<title>runtime.semasleep (1,014 samples, 21.07%)</title><rect x="361.6" y="261" width="248.6" height="15.0" fill="rgb(240,160,49)" rx="2" ry="2" />
<text  x="364.57" y="271.5" >runtime.semasleep</text>
</g>
<g >
<title>runtime.gcAssistAlloc (4 samples, 0.08%)</title><rect x="88.0" y="229" width="0.9" height="15.0" fill="rgb(217,196,2)" rx="2" ry="2" />
<text  x="90.96" y="239.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.02%)</title><rect x="123.0" y="181" width="0.3" height="15.0" fill="rgb(232,215,17)" rx="2" ry="2" />
<text  x="126.02" y="191.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).handleAckFrame (10 samples, 0.21%)</title><rect x="81.8" y="245" width="2.5" height="15.0" fill="rgb(226,107,42)" rx="2" ry="2" />
<text  x="84.83" y="255.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (1 samples, 0.02%)</title><rect x="288.3" y="229" width="0.2" height="15.0" fill="rgb(222,74,26)" rx="2" ry="2" />
<text  x="291.27" y="239.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.02%)</title><rect x="240.7" y="197" width="0.2" height="15.0" fill="rgb(228,108,9)" rx="2" ry="2" />
<text  x="243.70" y="207.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (2 samples, 0.04%)</title><rect x="10.5" y="197" width="0.5" height="15.0" fill="rgb(208,124,16)" rx="2" ry="2" />
<text  x="13.49" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).maybeResetTimer (117 samples, 2.43%)</title><rect x="89.7" y="309" width="28.7" height="15.0" fill="rgb(251,145,35)" rx="2" ry="2" />
<text  x="92.68" y="319.5" >gi..</text>
</g>
<g >
<title>runtime.runqempty (1 samples, 0.02%)</title><rect x="76.7" y="133" width="0.2" height="15.0" fill="rgb(249,75,8)" rx="2" ry="2" />
<text  x="79.69" y="143.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/flowcontrol.(*streamFlowController).AddBytesRead (2 samples, 0.04%)</title><rect x="309.1" y="277" width="0.5" height="15.0" fill="rgb(239,220,14)" rx="2" ry="2" />
<text  x="312.11" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*receiveStream).handleStreamFrameImpl (4 samples, 0.08%)</title><rect x="84.5" y="213" width="1.0" height="15.0" fill="rgb(243,47,6)" rx="2" ry="2" />
<text  x="87.53" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/handshake.(*sealer).Overhead (4 samples, 0.08%)</title><rect x="127.9" y="261" width="1.0" height="15.0" fill="rgb(242,87,52)" rx="2" ry="2" />
<text  x="130.93" y="271.5" ></text>
</g>
<g >
<title>crypto/aes.(*gcmAsm).Overhead (1 samples, 0.02%)</title><rect x="125.0" y="213" width="0.2" height="15.0" fill="rgb(226,145,19)" rx="2" ry="2" />
<text  x="127.98" y="223.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.02%)</title><rect x="123.0" y="213" width="0.3" height="15.0" fill="rgb(242,193,17)" rx="2" ry="2" />
<text  x="126.02" y="223.5" ></text>
</g>
<g >
<title>runtime.spanOf (1 samples, 0.02%)</title><rect x="339.3" y="117" width="0.2" height="15.0" fill="rgb(237,40,6)" rx="2" ry="2" />
<text  x="342.26" y="127.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.06%)</title><rect x="122.5" y="245" width="0.8" height="15.0" fill="rgb(237,159,37)" rx="2" ry="2" />
<text  x="125.53" y="255.5" ></text>
</g>
<g >
<title>net.(*netFD).writeTo (11 samples, 0.23%)</title><rect x="242.4" y="213" width="2.7" height="15.0" fill="rgb(217,26,51)" rx="2" ry="2" />
<text  x="245.42" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetBuffer).MaybeRelease (1 samples, 0.02%)</title><rect x="78.9" y="293" width="0.2" height="15.0" fill="rgb(243,96,43)" rx="2" ry="2" />
<text  x="81.89" y="303.5" ></text>
</g>
<g >
<title>runtime.handoff (1 samples, 0.02%)</title><rect x="336.3" y="245" width="0.3" height="15.0" fill="rgb(240,37,6)" rx="2" ry="2" />
<text  x="339.32" y="255.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (3 samples, 0.06%)</title><rect x="1168.2" y="229" width="0.7" height="15.0" fill="rgb(239,91,30)" rx="2" ry="2" />
<text  x="1171.18" y="239.5" ></text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.02%)</title><rect x="611.2" y="229" width="0.2" height="15.0" fill="rgb(216,118,23)" rx="2" ry="2" />
<text  x="614.16" y="239.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.02%)</title><rect x="717.1" y="197" width="0.2" height="15.0" fill="rgb(223,79,53)" rx="2" ry="2" />
<text  x="720.07" y="207.5" ></text>
</g>
<g >
<title>bytes.(*Reader).ReadByte (1 samples, 0.02%)</title><rect x="87.5" y="197" width="0.2" height="15.0" fill="rgb(206,226,15)" rx="2" ry="2" />
<text  x="90.47" y="207.5" ></text>
</g>
<g >
<title>io.ReadAtLeast (1 samples, 0.02%)</title><rect x="89.2" y="197" width="0.2" height="15.0" fill="rgb(235,106,20)" rx="2" ry="2" />
<text  x="92.19" y="207.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (1 samples, 0.02%)</title><rect x="78.9" y="261" width="0.2" height="15.0" fill="rgb(206,110,9)" rx="2" ry="2" />
<text  x="81.89" y="271.5" ></text>
</g>
<g >
<title>crypto/aes.(*aesCipherAsm).Encrypt (1 samples, 0.02%)</title><rect x="80.1" y="245" width="0.3" height="15.0" fill="rgb(254,57,3)" rx="2" ry="2" />
<text  x="83.12" y="255.5" ></text>
</g>
<g >
<title>crypto/aes.gcmAesEnc (1 samples, 0.02%)</title><rect x="125.7" y="197" width="0.3" height="15.0" fill="rgb(219,184,21)" rx="2" ry="2" />
<text  x="128.72" y="207.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.02%)</title><rect x="127.4" y="213" width="0.3" height="15.0" fill="rgb(248,12,13)" rx="2" ry="2" />
<text  x="130.44" y="223.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.02%)</title><rect x="82.6" y="133" width="0.2" height="15.0" fill="rgb(248,13,45)" rx="2" ry="2" />
<text  x="85.57" y="143.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast.func1 (2 samples, 0.04%)</title><rect x="1153.0" y="293" width="0.5" height="15.0" fill="rgb(233,78,39)" rx="2" ry="2" />
<text  x="1155.98" y="303.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_lock (1 samples, 0.02%)</title><rect x="116.2" y="181" width="0.2" height="15.0" fill="rgb(211,188,28)" rx="2" ry="2" />
<text  x="119.16" y="191.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.(*Msg).Encode (5 samples, 0.10%)</title><rect x="290.0" y="293" width="1.2" height="15.0" fill="rgb(234,49,31)" rx="2" ry="2" />
<text  x="292.98" y="303.5" ></text>
</g>
<g >
<title>syscall.Sendto (9 samples, 0.19%)</title><rect x="242.9" y="181" width="2.2" height="15.0" fill="rgb(206,138,18)" rx="2" ry="2" />
<text  x="245.91" y="191.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (42 samples, 0.87%)</title><rect x="1157.9" y="293" width="10.3" height="15.0" fill="rgb(220,89,6)" rx="2" ry="2" />
<text  x="1160.88" y="303.5" ></text>
</g>
<g >
<title>runtime.scanblock (1 samples, 0.02%)</title><rect x="339.5" y="197" width="0.3" height="15.0" fill="rgb(234,19,28)" rx="2" ry="2" />
<text  x="342.51" y="207.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.02%)</title><rect x="296.6" y="165" width="0.2" height="15.0" fill="rgb(216,90,38)" rx="2" ry="2" />
<text  x="299.60" y="175.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*marshalInfo).size (1 samples, 0.02%)</title><rect x="290.5" y="229" width="0.2" height="15.0" fill="rgb(246,129,14)" rx="2" ry="2" />
<text  x="293.47" y="239.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.unmarshalUTF8StringValue (3 samples, 0.06%)</title><rect x="291.7" y="181" width="0.7" height="15.0" fill="rgb(207,126,12)" rx="2" ry="2" />
<text  x="294.70" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.06%)</title><rect x="237.8" y="165" width="0.7" height="15.0" fill="rgb(230,79,10)" rx="2" ry="2" />
<text  x="240.76" y="175.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (1 samples, 0.02%)</title><rect x="118.6" y="181" width="0.3" height="15.0" fill="rgb(230,141,20)" rx="2" ry="2" />
<text  x="121.61" y="191.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.04%)</title><rect x="127.2" y="245" width="0.5" height="15.0" fill="rgb(213,212,46)" rx="2" ry="2" />
<text  x="130.19" y="255.5" ></text>
</g>
<g >
<title>runtime.asmcgocall (3 samples, 0.06%)</title><rect x="333.6" y="325" width="0.8" height="15.0" fill="rgb(239,128,46)" rx="2" ry="2" />
<text  x="336.62" y="335.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/handshake.(*sealer).Overhead (1 samples, 0.02%)</title><rect x="125.0" y="245" width="0.2" height="15.0" fill="rgb(249,168,12)" rx="2" ry="2" />
<text  x="127.98" y="255.5" ></text>
</g>
<g >
<title>runtime.deductSweepCredit (2 samples, 0.04%)</title><rect x="17.6" y="133" width="0.5" height="15.0" fill="rgb(254,13,50)" rx="2" ry="2" />
<text  x="20.60" y="143.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (27 samples, 0.56%)</title><rect x="353.0" y="213" width="6.6" height="15.0" fill="rgb(232,122,45)" rx="2" ry="2" />
<text  x="355.99" y="223.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.02%)</title><rect x="79.6" y="245" width="0.3" height="15.0" fill="rgb(239,79,19)" rx="2" ry="2" />
<text  x="82.63" y="255.5" ></text>
</g>
<g >
<title>runtime.bgsweep (7 samples, 0.15%)</title><rect x="334.4" y="325" width="1.7" height="15.0" fill="rgb(247,41,46)" rx="2" ry="2" />
<text  x="337.36" y="335.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*conn).Write (441 samples, 9.16%)</title><rect x="129.6" y="261" width="108.2" height="15.0" fill="rgb(215,156,30)" rx="2" ry="2" />
<text  x="132.64" y="271.5" >github.com/lu..</text>
</g>
<g >
<title>runtime.gcAssistAlloc (4 samples, 0.08%)</title><rect x="310.3" y="277" width="1.0" height="15.0" fill="rgb(208,102,15)" rx="2" ry="2" />
<text  x="313.33" y="287.5" ></text>
</g>
<g >
<title>runtime.gcDrain (19 samples, 0.39%)</title><rect x="336.3" y="277" width="4.7" height="15.0" fill="rgb(250,115,13)" rx="2" ry="2" />
<text  x="339.32" y="287.5" ></text>
</g>
<g >
<title>net.(*UDPConn).readFrom (268 samples, 5.57%)</title><rect x="12.7" y="293" width="65.7" height="15.0" fill="rgb(240,18,4)" rx="2" ry="2" />
<text  x="15.70" y="303.5" >net.(*U..</text>
</g>
<g >
<title>reflect.New (2 samples, 0.04%)</title><rect x="298.8" y="229" width="0.5" height="15.0" fill="rgb(254,192,32)" rx="2" ry="2" />
<text  x="301.81" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*receiveStream).readImpl (31 samples, 0.64%)</title><rect x="302.5" y="293" width="7.6" height="15.0" fill="rgb(250,121,40)" rx="2" ry="2" />
<text  x="305.49" y="303.5" ></text>
</g>
<g >
<title>runtime.usleep (18 samples, 0.37%)</title><rect x="348.1" y="229" width="4.4" height="15.0" fill="rgb(217,64,41)" rx="2" ry="2" />
<text  x="351.09" y="239.5" ></text>
</g>
<g >
<title>time.now (1 samples, 0.02%)</title><rect x="119.1" y="245" width="0.2" height="15.0" fill="rgb(226,31,13)" rx="2" ry="2" />
<text  x="122.10" y="255.5" ></text>
</g>
<g >
<title>reflect.Value.call (8 samples, 0.17%)</title><rect x="294.9" y="213" width="1.9" height="15.0" fill="rgb(235,37,42)" rx="2" ry="2" />
<text  x="297.89" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetHandlerMap).listen (279 samples, 5.80%)</title><rect x="10.0" y="325" width="68.4" height="15.0" fill="rgb(231,36,35)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >github...</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/congestion.(*RTTStats).UpdateRTT (2 samples, 0.04%)</title><rect x="83.6" y="213" width="0.4" height="15.0" fill="rgb(240,2,47)" rx="2" ry="2" />
<text  x="86.55" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHistory).sentPacketImpl (1 samples, 0.02%)</title><rect x="245.4" y="245" width="0.2" height="15.0" fill="rgb(210,4,0)" rx="2" ry="2" />
<text  x="248.36" y="255.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (2 samples, 0.04%)</title><rect x="719.5" y="293" width="0.5" height="15.0" fill="rgb(240,226,4)" rx="2" ry="2" />
<text  x="722.52" y="303.5" ></text>
</g>
<g >
<title>runtime.(*randomOrder).start (1 samples, 0.02%)</title><rect x="612.6" y="261" width="0.3" height="15.0" fill="rgb(250,196,36)" rx="2" ry="2" />
<text  x="615.63" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*ExtendedHeader).Write (3 samples, 0.06%)</title><rect x="126.2" y="245" width="0.7" height="15.0" fill="rgb(244,224,1)" rx="2" ry="2" />
<text  x="129.21" y="255.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Unmarshal (1 samples, 0.02%)</title><rect x="299.3" y="197" width="0.2" height="15.0" fill="rgb(232,98,22)" rx="2" ry="2" />
<text  x="302.30" y="207.5" ></text>
</g>
<g >
<title>runtime.(*guintptr).cas (1 samples, 0.02%)</title><rect x="120.6" y="37" width="0.2" height="15.0" fill="rgb(227,229,45)" rx="2" ry="2" />
<text  x="123.57" y="47.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (3 samples, 0.06%)</title><rect x="88.2" y="197" width="0.7" height="15.0" fill="rgb(231,82,50)" rx="2" ry="2" />
<text  x="91.21" y="207.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.ArgsDecode (1 samples, 0.02%)</title><rect x="299.3" y="245" width="0.2" height="15.0" fill="rgb(234,40,42)" rx="2" ry="2" />
<text  x="302.30" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).run (855 samples, 17.76%)</title><rect x="78.4" y="325" width="209.6" height="15.0" fill="rgb(225,225,11)" rx="2" ry="2" />
<text  x="81.40" y="335.5" >github.com/lucas-clemente/q..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="89.4" y="197" width="0.3" height="15.0" fill="rgb(225,113,15)" rx="2" ry="2" />
<text  x="92.43" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.04%)</title><rect x="333.1" y="309" width="0.5" height="15.0" fill="rgb(243,0,32)" rx="2" ry="2" />
<text  x="336.13" y="319.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeue (1 samples, 0.02%)</title><rect x="10.2" y="245" width="0.3" height="15.0" fill="rgb(206,100,16)" rx="2" ry="2" />
<text  x="13.25" y="255.5" ></text>
</g>
<g >
<title>runtime.wakep (42 samples, 0.87%)</title><rect x="1157.9" y="261" width="10.3" height="15.0" fill="rgb(211,156,54)" rx="2" ry="2" />
<text  x="1160.88" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*receivedPacketTracker).IgnoreBelow (1 samples, 0.02%)</title><rect x="81.8" y="213" width="0.3" height="15.0" fill="rgb(220,36,44)" rx="2" ry="2" />
<text  x="84.83" y="223.5" ></text>
</g>
<g >
<title>runtime.notewakeup (42 samples, 0.87%)</title><rect x="1157.9" y="229" width="10.3" height="15.0" fill="rgb(228,39,32)" rx="2" ry="2" />
<text  x="1160.88" y="239.5" ></text>
</g>
<g >
<title>runtime.selectgo (165 samples, 3.43%)</title><rect x="246.1" y="309" width="40.5" height="15.0" fill="rgb(247,70,51)" rx="2" ry="2" />
<text  x="249.10" y="319.5" >run..</text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.02%)</title><rect x="147.8" y="85" width="0.2" height="15.0" fill="rgb(222,91,28)" rx="2" ry="2" />
<text  x="150.79" y="95.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*sendStream).signalWrite (1 samples, 0.02%)</title><rect x="120.6" y="181" width="0.2" height="15.0" fill="rgb(246,65,41)" rx="2" ry="2" />
<text  x="123.57" y="191.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.02%)</title><rect x="88.9" y="229" width="0.3" height="15.0" fill="rgb(227,188,29)" rx="2" ry="2" />
<text  x="91.94" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).sendPacket (505 samples, 10.49%)</title><rect x="118.6" y="293" width="123.8" height="15.0" fill="rgb(229,203,42)" rx="2" ry="2" />
<text  x="121.61" y="303.5" >github.com/luca..</text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.02%)</title><rect x="117.9" y="197" width="0.2" height="15.0" fill="rgb(226,78,20)" rx="2" ry="2" />
<text  x="120.87" y="207.5" ></text>
</g>
<g >
<title>internal/poll.runtime_Semrelease (2 samples, 0.04%)</title><rect x="148.0" y="149" width="0.5" height="15.0" fill="rgb(207,136,7)" rx="2" ry="2" />
<text  x="151.03" y="159.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (1 samples, 0.02%)</title><rect x="296.6" y="197" width="0.2" height="15.0" fill="rgb(253,159,24)" rx="2" ry="2" />
<text  x="299.60" y="207.5" ></text>
</g>
<g >
<title>runtime.gentraceback (11 samples, 0.23%)</title><rect x="336.8" y="197" width="2.7" height="15.0" fill="rgb(239,97,16)" rx="2" ry="2" />
<text  x="339.81" y="207.5" ></text>
</g>
<g >
<title>runtime.scanobject (6 samples, 0.12%)</title><rect x="331.2" y="181" width="1.4" height="15.0" fill="rgb(251,67,21)" rx="2" ry="2" />
<text  x="334.17" y="191.5" ></text>
</g>
<g >
<title>runtime.strequal (1 samples, 0.02%)</title><rect x="298.6" y="165" width="0.2" height="15.0" fill="rgb(210,39,51)" rx="2" ry="2" />
<text  x="301.56" y="175.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/handshake.(*sealer).Seal (3 samples, 0.06%)</title><rect x="125.2" y="245" width="0.8" height="15.0" fill="rgb(247,20,32)" rx="2" ry="2" />
<text  x="128.23" y="255.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1,759 samples, 36.55%)</title><rect x="721.7" y="229" width="431.3" height="15.0" fill="rgb(229,160,47)" rx="2" ry="2" />
<text  x="724.73" y="239.5" >runtime.semawakeup</text>
</g>
<g >
<title>runtime.nanotime (10 samples, 0.21%)</title><rect x="1174.1" y="277" width="2.4" height="15.0" fill="rgb(206,73,43)" rx="2" ry="2" />
<text  x="1177.06" y="287.5" ></text>
</g>
<g >
<title>net.(*netFD).writeTo (437 samples, 9.08%)</title><rect x="130.6" y="213" width="107.2" height="15.0" fill="rgb(220,111,4)" rx="2" ry="2" />
<text  x="133.62" y="223.5" >net.(*netFD)...</text>
</g>
<g >
<title>runtime.semasleep (15 samples, 0.31%)</title><rect x="1153.5" y="229" width="3.6" height="15.0" fill="rgb(209,59,43)" rx="2" ry="2" />
<text  x="1156.47" y="239.5" ></text>
</g>
<g >
<title>reflect.methodReceiver (2 samples, 0.04%)</title><rect x="296.1" y="197" width="0.5" height="15.0" fill="rgb(240,168,9)" rx="2" ry="2" />
<text  x="299.11" y="207.5" ></text>
</g>
<g >
<title>runtime.freedefer (4 samples, 0.08%)</title><rect x="239.0" y="245" width="1.0" height="15.0" fill="rgb(246,37,29)" rx="2" ry="2" />
<text  x="241.99" y="255.5" ></text>
</g>
<g >
<title>runtime.mapassign_fast64 (2 samples, 0.04%)</title><rect x="84.5" y="165" width="0.5" height="15.0" fill="rgb(250,37,11)" rx="2" ry="2" />
<text  x="87.53" y="175.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.02%)</title><rect x="311.3" y="277" width="0.3" height="15.0" fill="rgb(253,204,7)" rx="2" ry="2" />
<text  x="314.31" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).idleTimeoutStartTime (1 samples, 0.02%)</title><rect x="89.7" y="293" width="0.2" height="15.0" fill="rgb(230,97,24)" rx="2" ry="2" />
<text  x="92.68" y="303.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.02%)</title><rect x="79.6" y="213" width="0.3" height="15.0" fill="rgb(221,129,16)" rx="2" ry="2" />
<text  x="82.63" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*sendStream).getDataForWriting (1 samples, 0.02%)</title><rect x="120.6" y="197" width="0.2" height="15.0" fill="rgb(220,50,30)" rx="2" ry="2" />
<text  x="123.57" y="207.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (32 samples, 0.66%)</title><rect x="229.9" y="117" width="7.9" height="15.0" fill="rgb(219,98,47)" rx="2" ry="2" />
<text  x="232.92" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.02%)</title><rect x="297.1" y="133" width="0.2" height="15.0" fill="rgb(254,68,9)" rx="2" ry="2" />
<text  x="300.09" y="143.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.02%)</title><rect x="300.3" y="197" width="0.2" height="15.0" fill="rgb(218,177,8)" rx="2" ry="2" />
<text  x="303.28" y="207.5" ></text>
</g>
<g >
<title>runtime.runqget (1 samples, 0.02%)</title><rect x="360.8" y="277" width="0.3" height="15.0" fill="rgb(245,100,44)" rx="2" ry="2" />
<text  x="363.84" y="287.5" ></text>
</g>
<g >
<title>runtime.selparkcommit (3 samples, 0.06%)</title><rect x="718.8" y="293" width="0.7" height="15.0" fill="rgb(235,104,5)" rx="2" ry="2" />
<text  x="721.78" y="303.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (42 samples, 0.87%)</title><rect x="1157.9" y="197" width="10.3" height="15.0" fill="rgb(220,151,39)" rx="2" ry="2" />
<text  x="1160.88" y="207.5" ></text>
</g>
<g >
<title>runtime.nanotime (5 samples, 0.10%)</title><rect x="720.0" y="277" width="1.2" height="15.0" fill="rgb(208,171,6)" rx="2" ry="2" />
<text  x="723.01" y="287.5" ></text>
</g>
<g >
<title>runtime.gcstopm (1 samples, 0.02%)</title><rect x="719.5" y="245" width="0.3" height="15.0" fill="rgb(234,30,1)" rx="2" ry="2" />
<text  x="722.52" y="255.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (1 samples, 0.02%)</title><rect x="341.5" y="261" width="0.2" height="15.0" fill="rgb(240,171,7)" rx="2" ry="2" />
<text  x="344.47" y="271.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*marshalInfo).marshal (1 samples, 0.02%)</title><rect x="293.2" y="197" width="0.2" height="15.0" fill="rgb(218,21,54)" rx="2" ry="2" />
<text  x="296.17" y="207.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwlock (15 samples, 0.31%)</title><rect x="144.4" y="165" width="3.6" height="15.0" fill="rgb(223,66,23)" rx="2" ry="2" />
<text  x="147.35" y="175.5" ></text>
</g>
<g >
<title>runtime.mcall (1,544 samples, 32.08%)</title><rect x="341.0" y="325" width="378.5" height="15.0" fill="rgb(235,19,42)" rx="2" ry="2" />
<text  x="343.98" y="335.5" >runtime.mcall</text>
</g>
<g >
<title>runtime.gopark (1 samples, 0.02%)</title><rect x="285.1" y="293" width="0.2" height="15.0" fill="rgb(223,189,25)" rx="2" ry="2" />
<text  x="288.08" y="303.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="296.6" y="181" width="0.2" height="15.0" fill="rgb(246,162,20)" rx="2" ry="2" />
<text  x="299.60" y="191.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.02%)</title><rect x="117.9" y="213" width="0.2" height="15.0" fill="rgb(229,74,24)" rx="2" ry="2" />
<text  x="120.87" y="223.5" ></text>
</g>
<g >
<title>runtime.assertI2I2 (1 samples, 0.02%)</title><rect x="290.7" y="261" width="0.3" height="15.0" fill="rgb(215,10,32)" rx="2" ry="2" />
<text  x="293.72" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHistory).Iterate (2 samples, 0.04%)</title><rect x="82.3" y="197" width="0.5" height="15.0" fill="rgb(217,65,44)" rx="2" ry="2" />
<text  x="85.32" y="207.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.02%)</title><rect x="295.9" y="181" width="0.2" height="15.0" fill="rgb(211,219,34)" rx="2" ry="2" />
<text  x="298.87" y="191.5" ></text>
</g>
<g >
<title>runtime.nilinterequal (1 samples, 0.02%)</title><rect x="295.9" y="149" width="0.2" height="15.0" fill="rgb(247,149,46)" rx="2" ry="2" />
<text  x="298.87" y="159.5" ></text>
</g>
<g >
<title>runtime.runqget (1 samples, 0.02%)</title><rect x="718.5" y="277" width="0.3" height="15.0" fill="rgb(218,70,30)" rx="2" ry="2" />
<text  x="721.54" y="287.5" ></text>
</g>
<g >
<title>runtime.scanobject (3 samples, 0.06%)</title><rect x="310.6" y="197" width="0.7" height="15.0" fill="rgb(223,78,21)" rx="2" ry="2" />
<text  x="313.58" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.02%)</title><rect x="681.8" y="229" width="0.2" height="15.0" fill="rgb(238,198,11)" rx="2" ry="2" />
<text  x="684.76" y="239.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepareWrite (1 samples, 0.02%)</title><rect x="148.5" y="181" width="0.3" height="15.0" fill="rgb(214,177,6)" rx="2" ry="2" />
<text  x="151.52" y="191.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*receivedPacketHistory).GetAckRanges (1 samples, 0.02%)</title><rect x="121.1" y="213" width="0.2" height="15.0" fill="rgb(228,70,29)" rx="2" ry="2" />
<text  x="124.06" y="223.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.02%)</title><rect x="1157.1" y="245" width="0.3" height="15.0" fill="rgb(208,35,16)" rx="2" ry="2" />
<text  x="1160.15" y="255.5" ></text>
</g>
<g >
<title>time.Now (1 samples, 0.02%)</title><rect x="1189.8" y="293" width="0.2" height="15.0" fill="rgb(238,45,44)" rx="2" ry="2" />
<text  x="1192.75" y="303.5" ></text>
</g>
<g >
<title>runtime.semrelease1 (1 samples, 0.02%)</title><rect x="336.1" y="277" width="0.2" height="15.0" fill="rgb(246,39,34)" rx="2" ry="2" />
<text  x="339.08" y="287.5" ></text>
</g>
<g >
<title>runtime.jmpdefer (1 samples, 0.02%)</title><rect x="240.0" y="261" width="0.2" height="15.0" fill="rgb(249,119,24)" rx="2" ry="2" />
<text  x="242.97" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.02%)</title><rect x="361.3" y="229" width="0.3" height="15.0" fill="rgb(232,108,3)" rx="2" ry="2" />
<text  x="364.33" y="239.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.02%)</title><rect x="717.3" y="261" width="0.3" height="15.0" fill="rgb(234,210,27)" rx="2" ry="2" />
<text  x="720.31" y="271.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.02%)</title><rect x="299.1" y="181" width="0.2" height="15.0" fill="rgb(209,41,26)" rx="2" ry="2" />
<text  x="302.05" y="191.5" ></text>
</g>
<g >
<title>runtime.deferproc (1 samples, 0.02%)</title><rect x="329.9" y="293" width="0.3" height="15.0" fill="rgb(207,210,0)" rx="2" ry="2" />
<text  x="332.95" y="303.5" ></text>
</g>
<g >
<title>runtime.puintptr.ptr (1 samples, 0.02%)</title><rect x="11.7" y="261" width="0.3" height="15.0" fill="rgb(211,141,30)" rx="2" ry="2" />
<text  x="14.72" y="271.5" ></text>
</g>
<g >
<title>runtime.wakep (3 samples, 0.06%)</title><rect x="359.9" y="261" width="0.7" height="15.0" fill="rgb(234,129,10)" rx="2" ry="2" />
<text  x="362.86" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*conn).Write (11 samples, 0.23%)</title><rect x="242.4" y="261" width="2.7" height="15.0" fill="rgb(243,14,17)" rx="2" ry="2" />
<text  x="245.42" y="271.5" ></text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.02%)</title><rect x="611.2" y="245" width="0.2" height="15.0" fill="rgb(230,68,12)" rx="2" ry="2" />
<text  x="614.16" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*sendStream).popStreamFrame (1 samples, 0.02%)</title><rect x="120.6" y="229" width="0.2" height="15.0" fill="rgb(245,209,54)" rx="2" ry="2" />
<text  x="123.57" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1,740 samples, 36.15%)</title><rect x="721.7" y="213" width="426.6" height="15.0" fill="rgb(239,189,28)" rx="2" ry="2" />
<text  x="724.73" y="223.5" >runtime.pthread_cond_signal</text>
</g>
<g >
<title>runtime.netpoll (13 samples, 0.27%)</title><rect x="344.9" y="261" width="3.2" height="15.0" fill="rgb(242,36,40)" rx="2" ry="2" />
<text  x="347.90" y="271.5" ></text>
</g>
<g >
<title>runtime.notetsleep (3 samples, 0.06%)</title><rect x="1168.2" y="277" width="0.7" height="15.0" fill="rgb(215,206,12)" rx="2" ry="2" />
<text  x="1171.18" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (6 samples, 0.12%)</title><rect x="288.5" y="261" width="1.5" height="15.0" fill="rgb(250,125,7)" rx="2" ry="2" />
<text  x="291.51" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*receivedPacketHandler).IgnoreBelow (1 samples, 0.02%)</title><rect x="81.8" y="229" width="0.3" height="15.0" fill="rgb(207,182,37)" rx="2" ry="2" />
<text  x="84.83" y="239.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast_pidle (2 samples, 0.04%)</title><rect x="1153.0" y="277" width="0.5" height="15.0" fill="rgb(220,161,20)" rx="2" ry="2" />
<text  x="1155.98" y="287.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.02%)</title><rect x="719.8" y="213" width="0.2" height="15.0" fill="rgb(209,203,36)" rx="2" ry="2" />
<text  x="722.77" y="223.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).writeLock (15 samples, 0.31%)</title><rect x="144.4" y="181" width="3.6" height="15.0" fill="rgb(219,212,5)" rx="2" ry="2" />
<text  x="147.35" y="191.5" ></text>
</g>
<g >
<title>runtime.ready (1 samples, 0.02%)</title><rect x="120.6" y="69" width="0.2" height="15.0" fill="rgb(226,134,27)" rx="2" ry="2" />
<text  x="123.57" y="79.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.02%)</title><rect x="148.3" y="69" width="0.2" height="15.0" fill="rgb(227,95,1)" rx="2" ry="2" />
<text  x="151.28" y="79.5" ></text>
</g>
<g >
<title>syscall.syscall6 (185 samples, 3.84%)</title><rect x="33.0" y="213" width="45.4" height="15.0" fill="rgb(234,229,35)" rx="2" ry="2" />
<text  x="36.05" y="223.5" >sysc..</text>
</g>
<g >
<title>runtime.execute (1 samples, 0.02%)</title><rect x="610.9" y="261" width="0.3" height="15.0" fill="rgb(250,217,54)" rx="2" ry="2" />
<text  x="613.91" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*receiveStream).dequeueNextFrame (25 samples, 0.52%)</title><rect x="303.0" y="277" width="6.1" height="15.0" fill="rgb(239,115,24)" rx="2" ry="2" />
<text  x="305.98" y="287.5" ></text>
</g>
<g >
<title>runtime.notesleep (1,014 samples, 21.07%)</title><rect x="361.6" y="277" width="248.6" height="15.0" fill="rgb(253,115,49)" rx="2" ry="2" />
<text  x="364.57" y="287.5" >runtime.notesleep</text>
</g>
<g >
<title>runtime.runqgrab (18 samples, 0.37%)</title><rect x="348.1" y="245" width="4.4" height="15.0" fill="rgb(235,64,22)" rx="2" ry="2" />
<text  x="351.09" y="255.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwunlock (2 samples, 0.04%)</title><rect x="148.0" y="165" width="0.5" height="15.0" fill="rgb(242,33,15)" rx="2" ry="2" />
<text  x="151.03" y="175.5" ></text>
</g>
<g >
<title>runtime.runqsteal (18 samples, 0.37%)</title><rect x="348.1" y="261" width="4.4" height="15.0" fill="rgb(254,68,27)" rx="2" ry="2" />
<text  x="351.09" y="271.5" ></text>
</g>
<g >
<title>runtime.sellock (2 samples, 0.04%)</title><rect x="301.5" y="293" width="0.5" height="15.0" fill="rgb(223,92,22)" rx="2" ry="2" />
<text  x="304.51" y="303.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/utils.bigEndian.WriteUintN (1 samples, 0.02%)</title><rect x="126.7" y="197" width="0.2" height="15.0" fill="rgb(247,40,43)" rx="2" ry="2" />
<text  x="129.70" y="207.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).queue (1 samples, 0.02%)</title><rect x="242.7" y="117" width="0.2" height="15.0" fill="rgb(221,15,12)" rx="2" ry="2" />
<text  x="245.67" y="127.5" ></text>
</g>
<g >
<title>runtime.walltime_trampoline (1 samples, 0.02%)</title><rect x="334.1" y="309" width="0.3" height="15.0" fill="rgb(248,229,45)" rx="2" ry="2" />
<text  x="337.11" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (1 samples, 0.02%)</title><rect x="118.6" y="69" width="0.3" height="15.0" fill="rgb(229,124,7)" rx="2" ry="2" />
<text  x="121.61" y="79.5" ></text>
</g>
<g >
<title>runtime.morestack (2 samples, 0.04%)</title><rect x="719.5" y="325" width="0.5" height="15.0" fill="rgb(233,179,38)" rx="2" ry="2" />
<text  x="722.52" y="335.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*framerI).AppendControlFrames (3 samples, 0.06%)</title><rect x="119.8" y="245" width="0.8" height="15.0" fill="rgb(239,153,36)" rx="2" ry="2" />
<text  x="122.84" y="255.5" ></text>
</g>
<g >
<title>internal/poll.(*pollDesc).prepare (1 samples, 0.02%)</title><rect x="148.5" y="165" width="0.3" height="15.0" fill="rgb(208,173,28)" rx="2" ry="2" />
<text  x="151.52" y="175.5" ></text>
</g>
<g >
<title>runtime.mstart (1,831 samples, 38.04%)</title><rect x="720.0" y="325" width="448.9" height="15.0" fill="rgb(247,38,47)" rx="2" ry="2" />
<text  x="723.01" y="335.5" >runtime.mstart</text>
</g>
<g >
<title>runtime.pcdatavalue (1 samples, 0.02%)</title><rect x="338.5" y="133" width="0.3" height="15.0" fill="rgb(206,69,47)" rx="2" ry="2" />
<text  x="341.53" y="143.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.02%)</title><rect x="18.1" y="133" width="0.2" height="15.0" fill="rgb(208,81,32)" rx="2" ry="2" />
<text  x="21.09" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mSpanList).remove (1 samples, 0.02%)</title><rect x="361.3" y="213" width="0.3" height="15.0" fill="rgb(233,149,26)" rx="2" ry="2" />
<text  x="364.33" y="223.5" ></text>
</g>
<g >
<title>time.Now (3 samples, 0.06%)</title><rect x="123.8" y="213" width="0.7" height="15.0" fill="rgb(206,54,30)" rx="2" ry="2" />
<text  x="126.76" y="223.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (1 samples, 0.02%)</title><rect x="289.5" y="149" width="0.2" height="15.0" fill="rgb(242,221,5)" rx="2" ry="2" />
<text  x="292.49" y="159.5" ></text>
</g>
<g >
<title>all (4,813 samples, 100%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(214,50,14)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>time.now (3 samples, 0.06%)</title><rect x="121.6" y="197" width="0.7" height="15.0" fill="rgb(254,91,52)" rx="2" ry="2" />
<text  x="124.55" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="18.1" y="165" width="0.2" height="15.0" fill="rgb(221,110,50)" rx="2" ry="2" />
<text  x="21.09" y="175.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="118.6" y="101" width="0.3" height="15.0" fill="rgb(221,185,4)" rx="2" ry="2" />
<text  x="121.61" y="111.5" ></text>
</g>
<g >
<title>runtime.mstart1 (7 samples, 0.15%)</title><rect x="720.0" y="309" width="1.7" height="15.0" fill="rgb(234,222,48)" rx="2" ry="2" />
<text  x="723.01" y="319.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.04%)</title><rect x="10.5" y="213" width="0.5" height="15.0" fill="rgb(207,157,36)" rx="2" ry="2" />
<text  x="13.49" y="223.5" ></text>
</g>
<g >
<title>runtime.forEachP (2 samples, 0.04%)</title><rect x="1157.4" y="277" width="0.5" height="15.0" fill="rgb(248,196,50)" rx="2" ry="2" />
<text  x="1160.39" y="287.5" ></text>
</g>
<g >
<title>reflect.Value.Call (9 samples, 0.19%)</title><rect x="294.6" y="229" width="2.2" height="15.0" fill="rgb(232,221,33)" rx="2" ry="2" />
<text  x="297.64" y="239.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).readLock (1 samples, 0.02%)</title><rect x="12.7" y="245" width="0.2" height="15.0" fill="rgb(235,137,16)" rx="2" ry="2" />
<text  x="15.70" y="255.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeue (1 samples, 0.02%)</title><rect x="300.5" y="277" width="0.3" height="15.0" fill="rgb(248,57,40)" rx="2" ry="2" />
<text  x="303.53" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetBuffer).putBack (4 samples, 0.08%)</title><rect x="237.8" y="245" width="0.9" height="15.0" fill="rgb(207,106,7)" rx="2" ry="2" />
<text  x="240.76" y="255.5" ></text>
</g>
<g >
<title>runtime.memequal128 (1 samples, 0.02%)</title><rect x="295.9" y="117" width="0.2" height="15.0" fill="rgb(218,181,43)" rx="2" ry="2" />
<text  x="298.87" y="127.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.02%)</title><rect x="309.4" y="245" width="0.2" height="15.0" fill="rgb(243,224,15)" rx="2" ry="2" />
<text  x="312.35" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*framerI).AddActiveStream (2 samples, 0.04%)</title><rect x="329.5" y="261" width="0.4" height="15.0" fill="rgb(222,174,34)" rx="2" ry="2" />
<text  x="332.46" y="271.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (1 samples, 0.02%)</title><rect x="721.2" y="229" width="0.3" height="15.0" fill="rgb(254,31,46)" rx="2" ry="2" />
<text  x="724.24" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (1,012 samples, 21.03%)</title><rect x="361.6" y="245" width="248.1" height="15.0" fill="rgb(212,229,30)" rx="2" ry="2" />
<text  x="364.57" y="255.5" >runtime.pthread_cond_wait</text>
</g>
<g >
<title>reflect.(*rtype).nameOff (1 samples, 0.02%)</title><rect x="294.4" y="197" width="0.2" height="15.0" fill="rgb(227,27,21)" rx="2" ry="2" />
<text  x="297.40" y="207.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.02%)</title><rect x="339.8" y="181" width="0.2" height="15.0" fill="rgb(234,80,46)" rx="2" ry="2" />
<text  x="342.75" y="191.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (4 samples, 0.08%)</title><rect x="310.3" y="229" width="1.0" height="15.0" fill="rgb(206,7,10)" rx="2" ry="2" />
<text  x="313.33" y="239.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).findRunnableGCWorker (1 samples, 0.02%)</title><rect x="342.7" y="277" width="0.2" height="15.0" fill="rgb(244,122,22)" rx="2" ry="2" />
<text  x="345.69" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*sendStream).popStreamFrameImpl (1 samples, 0.02%)</title><rect x="120.6" y="213" width="0.2" height="15.0" fill="rgb(235,123,33)" rx="2" ry="2" />
<text  x="123.57" y="223.5" ></text>
</g>
<g >
<title>runtime.findrunnable (1 samples, 0.02%)</title><rect x="611.2" y="261" width="0.2" height="15.0" fill="rgb(230,88,48)" rx="2" ry="2" />
<text  x="614.16" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHistory).GetPacket (1 samples, 0.02%)</title><rect x="83.3" y="213" width="0.3" height="15.0" fill="rgb(235,181,40)" rx="2" ry="2" />
<text  x="86.31" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*frameSorter).Push (2 samples, 0.04%)</title><rect x="84.5" y="197" width="0.5" height="15.0" fill="rgb(210,158,49)" rx="2" ry="2" />
<text  x="87.53" y="207.5" ></text>
</g>
<g >
<title>runtime.duffcopy (1 samples, 0.02%)</title><rect x="241.9" y="229" width="0.3" height="15.0" fill="rgb(245,197,45)" rx="2" ry="2" />
<text  x="244.93" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="291.5" y="149" width="0.2" height="15.0" fill="rgb(228,97,39)" rx="2" ry="2" />
<text  x="294.45" y="159.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.02%)</title><rect x="18.1" y="149" width="0.2" height="15.0" fill="rgb(253,151,40)" rx="2" ry="2" />
<text  x="21.09" y="159.5" ></text>
</g>
<g >
<title>net.ipToSockaddr (3 samples, 0.06%)</title><rect x="129.9" y="197" width="0.7" height="15.0" fill="rgb(231,228,12)" rx="2" ry="2" />
<text  x="132.89" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).determineNewlyAckedPackets.func1 (2 samples, 0.04%)</title><rect x="82.3" y="181" width="0.5" height="15.0" fill="rgb(217,87,40)" rx="2" ry="2" />
<text  x="85.32" y="191.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (15 samples, 0.31%)</title><rect x="1153.5" y="293" width="3.6" height="15.0" fill="rgb(224,25,11)" rx="2" ry="2" />
<text  x="1156.47" y="303.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).WriteByte (1 samples, 0.02%)</title><rect x="126.7" y="181" width="0.2" height="15.0" fill="rgb(231,74,7)" rx="2" ry="2" />
<text  x="129.70" y="191.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.02%)</title><rect x="292.4" y="245" width="0.3" height="15.0" fill="rgb(231,10,3)" rx="2" ry="2" />
<text  x="295.44" y="255.5" ></text>
</g>
<g >
<title>runtime.notesleep (27 samples, 0.56%)</title><rect x="353.0" y="245" width="6.6" height="15.0" fill="rgb(222,191,38)" rx="2" ry="2" />
<text  x="355.99" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).sendPackedPacket (454 samples, 9.43%)</title><rect x="128.9" y="277" width="111.3" height="15.0" fill="rgb(240,210,38)" rx="2" ry="2" />
<text  x="131.91" y="287.5" >github.com/lu..</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/protocol.ReadConnectionID (2 samples, 0.04%)</title><rect x="89.2" y="229" width="0.5" height="15.0" fill="rgb(253,112,50)" rx="2" ry="2" />
<text  x="92.19" y="239.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (2 samples, 0.04%)</title><rect x="340.0" y="245" width="0.5" height="15.0" fill="rgb(252,22,40)" rx="2" ry="2" />
<text  x="343.00" y="255.5" ></text>
</g>
<g >
<title>runtime.ready (2 samples, 0.04%)</title><rect x="10.5" y="181" width="0.5" height="15.0" fill="rgb(244,199,35)" rx="2" ry="2" />
<text  x="13.49" y="191.5" ></text>
</g>
<g >
<title>runtime.(*timersBucket).addtimerLocked (110 samples, 2.29%)</title><rect x="89.9" y="229" width="27.0" height="15.0" fill="rgb(234,140,37)" rx="2" ry="2" />
<text  x="92.93" y="239.5" >r..</text>
</g>
<g >
<title>runtime.handoffp (1 samples, 0.02%)</title><rect x="229.7" y="85" width="0.2" height="15.0" fill="rgb(216,118,35)" rx="2" ry="2" />
<text  x="232.67" y="95.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/protocol.WriteStream (87 samples, 1.81%)</title><rect x="311.6" y="325" width="21.3" height="15.0" fill="rgb(252,74,11)" rx="2" ry="2" />
<text  x="314.56" y="335.5" >h..</text>
</g>
<g >
<title>sync.runtime_procPin (1 samples, 0.02%)</title><rect x="78.9" y="229" width="0.2" height="15.0" fill="rgb(253,214,43)" rx="2" ry="2" />
<text  x="81.89" y="239.5" ></text>
</g>
<g >
<title>runtime.forEachP (15 samples, 0.31%)</title><rect x="1153.5" y="277" width="3.6" height="15.0" fill="rgb(224,25,25)" rx="2" ry="2" />
<text  x="1156.47" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).sentPacketImpl (4 samples, 0.08%)</title><rect x="240.5" y="261" width="0.9" height="15.0" fill="rgb(220,226,26)" rx="2" ry="2" />
<text  x="243.46" y="271.5" ></text>
</g>
<g >
<title>runtime.schedEnabled (1 samples, 0.02%)</title><rect x="341.7" y="293" width="0.3" height="15.0" fill="rgb(251,105,42)" rx="2" ry="2" />
<text  x="344.71" y="303.5" ></text>
</g>
<g >
<title>runtime.exitsyscall0 (1,100 samples, 22.85%)</title><rect x="341.0" y="309" width="269.7" height="15.0" fill="rgb(230,145,46)" rx="2" ry="2" />
<text  x="343.98" y="319.5" >runtime.exitsyscall0</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHistory).sentPacketImpl (3 samples, 0.06%)</title><rect x="241.7" y="245" width="0.7" height="15.0" fill="rgb(245,5,30)" rx="2" ry="2" />
<text  x="244.69" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/utils.ReadVarInt (1 samples, 0.02%)</title><rect x="87.5" y="213" width="0.2" height="15.0" fill="rgb(231,115,22)" rx="2" ry="2" />
<text  x="90.47" y="223.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (8 samples, 0.17%)</title><rect x="330.7" y="229" width="1.9" height="15.0" fill="rgb(245,54,22)" rx="2" ry="2" />
<text  x="333.68" y="239.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*marshalInfo).marshal (2 samples, 0.04%)</title><rect x="299.5" y="181" width="0.5" height="15.0" fill="rgb(236,106,35)" rx="2" ry="2" />
<text  x="302.54" y="191.5" ></text>
</g>
<g >
<title>crypto/aes.encryptBlockAsm (1 samples, 0.02%)</title><rect x="80.1" y="229" width="0.3" height="15.0" fill="rgb(251,201,45)" rx="2" ry="2" />
<text  x="83.12" y="239.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (32 samples, 0.66%)</title><rect x="229.9" y="133" width="7.9" height="15.0" fill="rgb(207,18,21)" rx="2" ry="2" />
<text  x="232.92" y="143.5" ></text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.04%)</title><rect x="612.9" y="229" width="0.5" height="15.0" fill="rgb(239,50,52)" rx="2" ry="2" />
<text  x="615.87" y="239.5" ></text>
</g>
<g >
<title>time.now (3 samples, 0.06%)</title><rect x="123.8" y="197" width="0.7" height="15.0" fill="rgb(239,63,31)" rx="2" ry="2" />
<text  x="126.76" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/utils.WriteVarInt (1 samples, 0.02%)</title><rect x="126.9" y="229" width="0.3" height="15.0" fill="rgb(243,157,17)" rx="2" ry="2" />
<text  x="129.95" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).sendPackets (521 samples, 10.82%)</title><rect x="118.4" y="309" width="127.7" height="15.0" fill="rgb(233,142,43)" rx="2" ry="2" />
<text  x="121.36" y="319.5" >github.com/lucas..</text>
</g>
<g >
<title>runtime.heapBits.bits (1 samples, 0.02%)</title><rect x="289.2" y="149" width="0.3" height="15.0" fill="rgb(239,88,30)" rx="2" ry="2" />
<text  x="292.25" y="159.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.02%)</title><rect x="344.2" y="245" width="0.2" height="15.0" fill="rgb(241,117,52)" rx="2" ry="2" />
<text  x="347.17" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetPacker).PackPacket (39 samples, 0.81%)</title><rect x="119.3" y="277" width="9.6" height="15.0" fill="rgb(250,166,33)" rx="2" ry="2" />
<text  x="122.35" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (3 samples, 0.06%)</title><rect x="237.8" y="133" width="0.7" height="15.0" fill="rgb(210,57,14)" rx="2" ry="2" />
<text  x="240.76" y="143.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.02%)</title><rect x="291.0" y="277" width="0.2" height="15.0" fill="rgb(248,75,48)" rx="2" ry="2" />
<text  x="293.96" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.06%)</title><rect x="297.1" y="213" width="0.7" height="15.0" fill="rgb(241,47,4)" rx="2" ry="2" />
<text  x="300.09" y="223.5" ></text>
</g>
<g >
<title>internal/poll.(*fdMutex).rwlock (1 samples, 0.02%)</title><rect x="12.7" y="229" width="0.2" height="15.0" fill="rgb(235,198,19)" rx="2" ry="2" />
<text  x="15.70" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (15 samples, 0.31%)</title><rect x="1153.5" y="213" width="3.6" height="15.0" fill="rgb(243,227,15)" rx="2" ry="2" />
<text  x="1156.47" y="223.5" ></text>
</g>
<g >
<title>runtime.acquirep (1 samples, 0.02%)</title><rect x="681.8" y="245" width="0.2" height="15.0" fill="rgb(215,200,27)" rx="2" ry="2" />
<text  x="684.76" y="255.5" ></text>
</g>
<g >
<title>crypto/aes.gcmAesDec (1 samples, 0.02%)</title><rect x="80.9" y="213" width="0.2" height="15.0" fill="rgb(248,15,20)" rx="2" ry="2" />
<text  x="83.85" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan.func1 (1 samples, 0.02%)</title><rect x="118.6" y="85" width="0.3" height="15.0" fill="rgb(251,2,10)" rx="2" ry="2" />
<text  x="121.61" y="95.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (3 samples, 0.06%)</title><rect x="359.9" y="197" width="0.7" height="15.0" fill="rgb(213,168,53)" rx="2" ry="2" />
<text  x="362.86" y="207.5" ></text>
</g>
<g >
<title>runtime.startm (3 samples, 0.06%)</title><rect x="359.9" y="245" width="0.7" height="15.0" fill="rgb(214,184,21)" rx="2" ry="2" />
<text  x="362.86" y="255.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.02%)</title><rect x="127.2" y="213" width="0.2" height="15.0" fill="rgb(236,177,23)" rx="2" ry="2" />
<text  x="130.19" y="223.5" ></text>
</g>
<g >
<title>runtime._System (3 samples, 0.06%)</title><rect x="332.9" y="325" width="0.7" height="15.0" fill="rgb(251,112,17)" rx="2" ry="2" />
<text  x="335.89" y="335.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (2 samples, 0.04%)</title><rect x="297.3" y="197" width="0.5" height="15.0" fill="rgb(229,20,3)" rx="2" ry="2" />
<text  x="300.34" y="207.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.appendVarintS32ValueNoZero (1 samples, 0.02%)</title><rect x="299.8" y="165" width="0.2" height="15.0" fill="rgb(222,97,7)" rx="2" ry="2" />
<text  x="302.79" y="175.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Marshal (4 samples, 0.08%)</title><rect x="290.0" y="277" width="1.0" height="15.0" fill="rgb(230,224,2)" rx="2" ry="2" />
<text  x="292.98" y="287.5" ></text>
</g>
<g >
<title>runtime.selectnbsend (1 samples, 0.02%)</title><rect x="85.0" y="181" width="0.3" height="15.0" fill="rgb(207,150,47)" rx="2" ry="2" />
<text  x="88.02" y="191.5" ></text>
</g>
<g >
<title>github.com/marten-seemann/qtls.(*xorNonceAEAD).Open (3 samples, 0.06%)</title><rect x="80.4" y="245" width="0.7" height="15.0" fill="rgb(213,192,40)" rx="2" ry="2" />
<text  x="83.36" y="255.5" ></text>
</g>
<g >
<title>internal/poll.runtime_Semacquire (1 samples, 0.02%)</title><rect x="242.7" y="149" width="0.2" height="15.0" fill="rgb(222,215,36)" rx="2" ry="2" />
<text  x="245.67" y="159.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.parseHeader (2 samples, 0.04%)</title><rect x="89.2" y="277" width="0.5" height="15.0" fill="rgb(242,28,54)" rx="2" ry="2" />
<text  x="92.19" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.02%)</title><rect x="297.1" y="197" width="0.2" height="15.0" fill="rgb(250,155,9)" rx="2" ry="2" />
<text  x="300.09" y="207.5" ></text>
</g>
<g >
<title>syscall.recvfrom (186 samples, 3.86%)</title><rect x="32.8" y="229" width="45.6" height="15.0" fill="rgb(217,172,19)" rx="2" ry="2" />
<text  x="35.80" y="239.5" >sysc..</text>
</g>
<g >
<title>runtime.gopark (1 samples, 0.02%)</title><rect x="309.6" y="229" width="0.2" height="15.0" fill="rgb(222,92,13)" rx="2" ry="2" />
<text  x="312.60" y="239.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.02%)</title><rect x="291.5" y="165" width="0.2" height="15.0" fill="rgb(242,11,31)" rx="2" ry="2" />
<text  x="294.45" y="175.5" ></text>
</g>
<g >
<title>time.Time.Add (1 samples, 0.02%)</title><rect x="241.2" y="245" width="0.2" height="15.0" fill="rgb(230,119,20)" rx="2" ry="2" />
<text  x="244.19" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*streamsMap).GetOrOpenReceiveStream (1 samples, 0.02%)</title><rect x="85.5" y="229" width="0.3" height="15.0" fill="rgb(248,72,50)" rx="2" ry="2" />
<text  x="88.51" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (16 samples, 0.33%)</title><rect x="1149.1" y="213" width="3.9" height="15.0" fill="rgb(238,141,10)" rx="2" ry="2" />
<text  x="1152.06" y="223.5" ></text>
</g>
<g >
<title>runtime.semawakeup (3 samples, 0.06%)</title><rect x="359.9" y="213" width="0.7" height="15.0" fill="rgb(236,12,26)" rx="2" ry="2" />
<text  x="362.86" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mspan).sweep (1 samples, 0.02%)</title><rect x="118.6" y="149" width="0.3" height="15.0" fill="rgb(219,168,6)" rx="2" ry="2" />
<text  x="121.61" y="159.5" ></text>
</g>
<g >
<title>runtime.send (1 samples, 0.02%)</title><rect x="120.6" y="133" width="0.2" height="15.0" fill="rgb(229,67,7)" rx="2" ry="2" />
<text  x="123.57" y="143.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/flowcontrol.(*baseFlowController).AddBytesRead (1 samples, 0.02%)</title><rect x="309.4" y="261" width="0.2" height="15.0" fill="rgb(212,87,37)" rx="2" ry="2" />
<text  x="312.35" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.02%)</title><rect x="681.8" y="197" width="0.2" height="15.0" fill="rgb(237,131,28)" rx="2" ry="2" />
<text  x="684.76" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*StreamFrame).Write (1 samples, 0.02%)</title><rect x="126.9" y="245" width="0.3" height="15.0" fill="rgb(229,91,0)" rx="2" ry="2" />
<text  x="129.95" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*receiveStream).signalRead (1 samples, 0.02%)</title><rect x="85.0" y="197" width="0.3" height="15.0" fill="rgb(214,130,26)" rx="2" ry="2" />
<text  x="88.02" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="123.0" y="197" width="0.3" height="15.0" fill="rgb(224,61,40)" rx="2" ry="2" />
<text  x="126.02" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="76.7" y="181" width="0.2" height="15.0" fill="rgb(253,224,17)" rx="2" ry="2" />
<text  x="79.69" y="191.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (4 samples, 0.08%)</title><rect x="338.5" y="181" width="1.0" height="15.0" fill="rgb(208,128,45)" rx="2" ry="2" />
<text  x="341.53" y="191.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.02%)</title><rect x="336.3" y="229" width="0.3" height="15.0" fill="rgb(227,1,40)" rx="2" ry="2" />
<text  x="339.32" y="239.5" ></text>
</g>
<g >
<title>runtime.makeslice (3 samples, 0.06%)</title><rect x="297.1" y="229" width="0.7" height="15.0" fill="rgb(232,207,51)" rx="2" ry="2" />
<text  x="300.09" y="239.5" ></text>
</g>
</g>
</svg>

