<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="406.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="389" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="389" > </text>
<g id="frames">
<g >
<title>github.com/golang/protobuf/proto.appendVarint64ValueNoZero (2 samples, 0.05%)</title><rect x="31.3" y="213" width="0.6" height="15.0" fill="rgb(213,97,15)" rx="2" ry="2" />
<text  x="34.32" y="223.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (1 samples, 0.02%)</title><rect x="440.1" y="277" width="0.3" height="15.0" fill="rgb(217,22,9)" rx="2" ry="2" />
<text  x="443.13" y="287.5" ></text>
</g>
<g >
<title>runtime.runqput (1 samples, 0.02%)</title><rect x="98.5" y="197" width="0.3" height="15.0" fill="rgb(230,108,7)" rx="2" ry="2" />
<text  x="101.48" y="207.5" ></text>
</g>
<g >
<title>runtime.send (1 samples, 0.02%)</title><rect x="98.5" y="277" width="0.3" height="15.0" fill="rgb(225,93,29)" rx="2" ry="2" />
<text  x="101.48" y="287.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.02%)</title><rect x="271.6" y="261" width="0.3" height="15.0" fill="rgb(217,105,32)" rx="2" ry="2" />
<text  x="274.64" y="271.5" ></text>
</g>
<g >
<title>runtime.newMarkBits (1 samples, 0.02%)</title><rect x="439.5" y="293" width="0.3" height="15.0" fill="rgb(210,215,36)" rx="2" ry="2" />
<text  x="442.54" y="303.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Unmarshal (12 samples, 0.30%)</title><rect x="38.0" y="245" width="3.5" height="15.0" fill="rgb(205,175,41)" rx="2" ry="2" />
<text  x="41.03" y="255.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (19 samples, 0.47%)</title><rect x="1023.6" y="245" width="5.5" height="15.0" fill="rgb(225,106,17)" rx="2" ry="2" />
<text  x="1026.56" y="255.5" ></text>
</g>
<g >
<title>runtime.fastrandn (1 samples, 0.02%)</title><rect x="320.7" y="277" width="0.3" height="15.0" fill="rgb(242,152,19)" rx="2" ry="2" />
<text  x="323.70" y="287.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc/pb.(*Response).XXX_Unmarshal (12 samples, 0.30%)</title><rect x="38.0" y="261" width="3.5" height="15.0" fill="rgb(242,175,3)" rx="2" ry="2" />
<text  x="41.03" y="271.5" ></text>
</g>
<g >
<title>runtime.wakep (28 samples, 0.69%)</title><rect x="811.6" y="277" width="8.1" height="15.0" fill="rgb(253,13,23)" rx="2" ry="2" />
<text  x="814.56" y="287.5" ></text>
</g>
<g >
<title>sync.runtime_SemacquireMutex (4 samples, 0.10%)</title><rect x="358.7" y="229" width="1.1" height="15.0" fill="rgb(252,18,38)" rx="2" ry="2" />
<text  x="361.66" y="239.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (2 samples, 0.05%)</title><rect x="282.7" y="245" width="0.6" height="15.0" fill="rgb(239,145,12)" rx="2" ry="2" />
<text  x="285.73" y="255.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc/pb.(*Request).XXX_Size (4 samples, 0.10%)</title><rect x="32.2" y="261" width="1.2" height="15.0" fill="rgb(213,68,9)" rx="2" ry="2" />
<text  x="35.19" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="86.8" y="149" width="0.3" height="15.0" fill="rgb(210,206,7)" rx="2" ry="2" />
<text  x="89.80" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (2 samples, 0.05%)</title><rect x="45.3" y="229" width="0.6" height="15.0" fill="rgb(213,141,4)" rx="2" ry="2" />
<text  x="48.33" y="239.5" ></text>
</g>
<g >
<title>runtime.tracebackdefers (1 samples, 0.02%)</title><rect x="414.7" y="149" width="0.3" height="15.0" fill="rgb(242,89,15)" rx="2" ry="2" />
<text  x="417.72" y="159.5" ></text>
</g>
<g >
<title>runtime.freedefer (1 samples, 0.02%)</title><rect x="98.8" y="293" width="0.3" height="15.0" fill="rgb(218,216,39)" rx="2" ry="2" />
<text  x="101.77" y="303.5" ></text>
</g>
<g >
<title>runtime.notetsleep (54 samples, 1.34%)</title><rect x="1031.1" y="277" width="15.8" height="15.0" fill="rgb(229,145,42)" rx="2" ry="2" />
<text  x="1034.15" y="287.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.unmarshalUint64Value (3 samples, 0.07%)</title><rect x="40.7" y="213" width="0.8" height="15.0" fill="rgb(209,126,17)" rx="2" ry="2" />
<text  x="43.66" y="223.5" ></text>
</g>
<g >
<title>runtime.asmcgocall (3 samples, 0.07%)</title><rect x="148.1" y="165" width="0.9" height="15.0" fill="rgb(222,30,5)" rx="2" ry="2" />
<text  x="151.12" y="175.5" ></text>
</g>
<g >
<title>runtime.schedule (6 samples, 0.15%)</title><rect x="453.3" y="309" width="1.7" height="15.0" fill="rgb(244,199,25)" rx="2" ry="2" />
<text  x="456.27" y="319.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.02%)</title><rect x="35.4" y="149" width="0.3" height="15.0" fill="rgb(234,78,8)" rx="2" ry="2" />
<text  x="38.40" y="159.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="79.2" y="245" width="0.3" height="15.0" fill="rgb(252,142,32)" rx="2" ry="2" />
<text  x="82.21" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="114.8" y="277" width="0.3" height="15.0" fill="rgb(242,73,49)" rx="2" ry="2" />
<text  x="117.83" y="287.5" ></text>
</g>
<g >
<title>runtime.semasleep (3 samples, 0.07%)</title><rect x="457.6" y="229" width="0.9" height="15.0" fill="rgb(232,202,42)" rx="2" ry="2" />
<text  x="460.65" y="239.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.02%)</title><rect x="94.1" y="197" width="0.3" height="15.0" fill="rgb(251,195,18)" rx="2" ry="2" />
<text  x="97.10" y="207.5" ></text>
</g>
<g >
<title>runtime.mcall (6 samples, 0.15%)</title><rect x="431.4" y="325" width="1.7" height="15.0" fill="rgb(227,134,16)" rx="2" ry="2" />
<text  x="434.37" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (2 samples, 0.05%)</title><rect x="42.4" y="229" width="0.6" height="15.0" fill="rgb(251,194,13)" rx="2" ry="2" />
<text  x="45.41" y="239.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.unmarshalBytesValue (5 samples, 0.12%)</title><rect x="91.2" y="213" width="1.4" height="15.0" fill="rgb(251,220,22)" rx="2" ry="2" />
<text  x="94.18" y="223.5" ></text>
</g>
<g >
<title>runtime.profilealloc (1 samples, 0.02%)</title><rect x="283.3" y="245" width="0.3" height="15.0" fill="rgb(226,149,48)" rx="2" ry="2" />
<text  x="286.32" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (2 samples, 0.05%)</title><rect x="97.3" y="245" width="0.6" height="15.0" fill="rgb(250,217,24)" rx="2" ry="2" />
<text  x="100.31" y="255.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (8 samples, 0.20%)</title><rect x="809.2" y="229" width="2.4" height="15.0" fill="rgb(228,87,13)" rx="2" ry="2" />
<text  x="812.22" y="239.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.02%)</title><rect x="271.9" y="197" width="0.3" height="15.0" fill="rgb(209,79,39)" rx="2" ry="2" />
<text  x="274.93" y="207.5" ></text>
</g>
<g >
<title>runtime.binarySearchTree (1 samples, 0.02%)</title><rect x="441.3" y="149" width="0.3" height="15.0" fill="rgb(213,224,3)" rx="2" ry="2" />
<text  x="444.29" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.02%)</title><rect x="93.5" y="181" width="0.3" height="15.0" fill="rgb(229,196,11)" rx="2" ry="2" />
<text  x="96.51" y="191.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (2 samples, 0.05%)</title><rect x="421.7" y="277" width="0.6" height="15.0" fill="rgb(238,167,10)" rx="2" ry="2" />
<text  x="424.73" y="287.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*BatchCodec).Encode (5 samples, 0.12%)</title><rect x="78.0" y="293" width="1.5" height="15.0" fill="rgb(243,102,3)" rx="2" ry="2" />
<text  x="81.04" y="303.5" ></text>
</g>
<g >
<title>runtime.semawakeup (28 samples, 0.69%)</title><rect x="811.6" y="229" width="8.1" height="15.0" fill="rgb(253,136,51)" rx="2" ry="2" />
<text  x="814.56" y="239.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.02%)</title><rect x="824.7" y="101" width="0.3" height="15.0" fill="rgb(215,173,13)" rx="2" ry="2" />
<text  x="827.70" y="111.5" ></text>
</g>
<g >
<title>runtime.exitsyscall0 (11 samples, 0.27%)</title><rect x="453.3" y="325" width="3.2" height="15.0" fill="rgb(213,214,7)" rx="2" ry="2" />
<text  x="456.27" y="335.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (70 samples, 1.73%)</title><rect x="822.1" y="293" width="20.4" height="15.0" fill="rgb(210,118,37)" rx="2" ry="2" />
<text  x="825.07" y="303.5" ></text>
</g>
<g >
<title>runtime.schedule (8 samples, 0.20%)</title><rect x="456.5" y="293" width="2.3" height="15.0" fill="rgb(216,203,40)" rx="2" ry="2" />
<text  x="459.48" y="303.5" ></text>
</g>
<g >
<title>runtime.lock (6 samples, 0.15%)</title><rect x="68.1" y="245" width="1.8" height="15.0" fill="rgb(231,185,21)" rx="2" ry="2" />
<text  x="71.11" y="255.5" ></text>
</g>
<g >
<title>runtime.semasleep (10 samples, 0.25%)</title><rect x="1155.3" y="261" width="2.9" height="15.0" fill="rgb(251,150,10)" rx="2" ry="2" />
<text  x="1158.25" y="271.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (5 samples, 0.12%)</title><rect x="262.0" y="261" width="1.5" height="15.0" fill="rgb(233,186,3)" rx="2" ry="2" />
<text  x="265.00" y="271.5" ></text>
</g>
<g >
<title>runtime.assertI2I2 (1 samples, 0.02%)</title><rect x="41.5" y="261" width="0.3" height="15.0" fill="rgb(218,175,12)" rx="2" ry="2" />
<text  x="44.54" y="271.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.02%)</title><rect x="412.1" y="117" width="0.3" height="15.0" fill="rgb(247,124,20)" rx="2" ry="2" />
<text  x="415.09" y="127.5" ></text>
</g>
<g >
<title>runtime.mstart (1,081 samples, 26.75%)</title><rect x="842.5" y="341" width="315.7" height="15.0" fill="rgb(230,160,54)" rx="2" ry="2" />
<text  x="845.51" y="351.5" >runtime.mstart</text>
</g>
<g >
<title>runtime.walltime (13 samples, 0.32%)</title><rect x="149.0" y="197" width="3.8" height="15.0" fill="rgb(223,86,17)" rx="2" ry="2" />
<text  x="152.00" y="207.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.02%)</title><rect x="456.8" y="261" width="0.3" height="15.0" fill="rgb(205,181,19)" rx="2" ry="2" />
<text  x="459.77" y="271.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.02%)</title><rect x="458.5" y="261" width="0.3" height="15.0" fill="rgb(226,123,18)" rx="2" ry="2" />
<text  x="461.52" y="271.5" ></text>
</g>
<g >
<title>runtime.gosched_m (8 samples, 0.20%)</title><rect x="456.5" y="325" width="2.3" height="15.0" fill="rgb(223,116,29)" rx="2" ry="2" />
<text  x="459.48" y="335.5" ></text>
</g>
<g >
<title>runtime.semawakeup (2 samples, 0.05%)</title><rect x="129.7" y="277" width="0.6" height="15.0" fill="rgb(226,169,30)" rx="2" ry="2" />
<text  x="132.72" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (2 samples, 0.05%)</title><rect x="86.5" y="197" width="0.6" height="15.0" fill="rgb(209,198,6)" rx="2" ry="2" />
<text  x="89.51" y="207.5" ></text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.02%)</title><rect x="457.4" y="245" width="0.2" height="15.0" fill="rgb(226,147,16)" rx="2" ry="2" />
<text  x="460.35" y="255.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (10 samples, 0.25%)</title><rect x="1155.3" y="245" width="2.9" height="15.0" fill="rgb(233,220,2)" rx="2" ry="2" />
<text  x="1158.25" y="255.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeue (2 samples, 0.05%)</title><rect x="365.1" y="293" width="0.6" height="15.0" fill="rgb(235,88,29)" rx="2" ry="2" />
<text  x="368.08" y="303.5" ></text>
</g>
<g >
<title>runtime.gentraceback (10 samples, 0.25%)</title><rect x="411.8" y="149" width="2.9" height="15.0" fill="rgb(219,218,41)" rx="2" ry="2" />
<text  x="414.80" y="159.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (3 samples, 0.07%)</title><rect x="95.9" y="309" width="0.8" height="15.0" fill="rgb(233,57,21)" rx="2" ry="2" />
<text  x="98.85" y="319.5" ></text>
</g>
<g >
<title>runtime.lock (5 samples, 0.12%)</title><rect x="158.9" y="213" width="1.5" height="15.0" fill="rgb(224,25,7)" rx="2" ry="2" />
<text  x="161.92" y="223.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (28 samples, 0.69%)</title><rect x="410.9" y="261" width="8.2" height="15.0" fill="rgb(227,212,52)" rx="2" ry="2" />
<text  x="413.93" y="271.5" ></text>
</g>
<g >
<title>math/rand.(*Rand).Int31 (41 samples, 1.01%)</title><rect x="351.9" y="293" width="12.0" height="15.0" fill="rgb(213,62,19)" rx="2" ry="2" />
<text  x="354.94" y="303.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).addObject (1 samples, 0.02%)</title><rect x="443.0" y="165" width="0.3" height="15.0" fill="rgb(227,139,29)" rx="2" ry="2" />
<text  x="446.05" y="175.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.02%)</title><rect x="842.8" y="277" width="0.3" height="15.0" fill="rgb(230,127,43)" rx="2" ry="2" />
<text  x="845.80" y="287.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.02%)</title><rect x="45.3" y="181" width="0.3" height="15.0" fill="rgb(239,48,54)" rx="2" ry="2" />
<text  x="48.33" y="191.5" ></text>
</g>
<g >
<title>runtime.lock (23 samples, 0.57%)</title><rect x="52.9" y="293" width="6.7" height="15.0" fill="rgb(222,0,43)" rx="2" ry="2" />
<text  x="55.93" y="303.5" ></text>
</g>
<g >
<title>runtime.semacquire1 (4 samples, 0.10%)</title><rect x="358.7" y="213" width="1.1" height="15.0" fill="rgb(213,204,9)" rx="2" ry="2" />
<text  x="361.66" y="223.5" ></text>
</g>
<g >
<title>syscall.syscall (48 samples, 1.19%)</title><rect x="100.8" y="245" width="14.0" height="15.0" fill="rgb(217,214,23)" rx="2" ry="2" />
<text  x="103.81" y="255.5" ></text>
</g>
<g >
<title>runtime.send (6 samples, 0.15%)</title><rect x="401.3" y="293" width="1.7" height="15.0" fill="rgb(210,115,24)" rx="2" ry="2" />
<text  x="404.29" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (2 samples, 0.05%)</title><rect x="277.5" y="133" width="0.6" height="15.0" fill="rgb(217,151,18)" rx="2" ry="2" />
<text  x="280.48" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (1 samples, 0.02%)</title><rect x="1047.8" y="229" width="0.3" height="15.0" fill="rgb(223,217,52)" rx="2" ry="2" />
<text  x="1050.79" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (2 samples, 0.05%)</title><rect x="277.5" y="197" width="0.6" height="15.0" fill="rgb(215,15,25)" rx="2" ry="2" />
<text  x="280.48" y="207.5" ></text>
</g>
<g >
<title>runtime.procyield (15 samples, 0.37%)</title><rect x="396.3" y="277" width="4.4" height="15.0" fill="rgb(249,20,24)" rx="2" ry="2" />
<text  x="399.33" y="287.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Unmarshal (14 samples, 0.35%)</title><rect x="88.8" y="277" width="4.1" height="15.0" fill="rgb(210,71,31)" rx="2" ry="2" />
<text  x="91.84" y="287.5" ></text>
</g>
<g >
<title>runtime.markroot (33 samples, 0.82%)</title><rect x="440.4" y="277" width="9.7" height="15.0" fill="rgb(242,137,27)" rx="2" ry="2" />
<text  x="443.42" y="287.5" ></text>
</g>
<g >
<title>runtime.scanobject (11 samples, 0.27%)</title><rect x="450.1" y="277" width="3.2" height="15.0" fill="rgb(210,65,38)" rx="2" ry="2" />
<text  x="453.05" y="287.5" ></text>
</g>
<g >
<title>runtime.getempty (1 samples, 0.02%)</title><rect x="443.0" y="149" width="0.3" height="15.0" fill="rgb(210,91,5)" rx="2" ry="2" />
<text  x="446.05" y="159.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc/examples/example/pb/service.(*ArithRequest).XXX_Marshal (27 samples, 0.67%)</title><rect x="171.5" y="245" width="7.9" height="15.0" fill="rgb(248,41,35)" rx="2" ry="2" />
<text  x="174.48" y="255.5" ></text>
</g>
<g >
<title>runtime.lock (4 samples, 0.10%)</title><rect x="842.5" y="293" width="1.2" height="15.0" fill="rgb(236,112,26)" rx="2" ry="2" />
<text  x="845.51" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mspan).sweep (2 samples, 0.05%)</title><rect x="824.4" y="165" width="0.6" height="15.0" fill="rgb(210,209,52)" rx="2" ry="2" />
<text  x="827.41" y="175.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.02%)</title><rect x="438.4" y="197" width="0.3" height="15.0" fill="rgb(237,145,42)" rx="2" ry="2" />
<text  x="441.37" y="207.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (15 samples, 0.37%)</title><rect x="355.7" y="245" width="4.4" height="15.0" fill="rgb(213,51,53)" rx="2" ry="2" />
<text  x="358.74" y="255.5" ></text>
</g>
<g >
<title>runtime.selunlock (15 samples, 0.37%)</title><rect x="337.9" y="277" width="4.4" height="15.0" fill="rgb(233,128,52)" rx="2" ry="2" />
<text  x="340.92" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (2 samples, 0.05%)</title><rect x="42.4" y="245" width="0.6" height="15.0" fill="rgb(205,170,32)" rx="2" ry="2" />
<text  x="45.41" y="255.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (2 samples, 0.05%)</title><rect x="808.6" y="245" width="0.6" height="15.0" fill="rgb(252,198,28)" rx="2" ry="2" />
<text  x="811.64" y="255.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (1 samples, 0.02%)</title><rect x="458.5" y="277" width="0.3" height="15.0" fill="rgb(248,219,42)" rx="2" ry="2" />
<text  x="461.52" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (2 samples, 0.05%)</title><rect x="824.4" y="181" width="0.6" height="15.0" fill="rgb(215,213,48)" rx="2" ry="2" />
<text  x="827.41" y="191.5" ></text>
</g>
<g >
<title>runtime.nanotime (8 samples, 0.20%)</title><rect x="424.9" y="293" width="2.4" height="15.0" fill="rgb(219,121,41)" rx="2" ry="2" />
<text  x="427.94" y="303.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (7 samples, 0.17%)</title><rect x="48.5" y="309" width="2.1" height="15.0" fill="rgb(227,201,7)" rx="2" ry="2" />
<text  x="51.54" y="319.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.02%)</title><rect x="50.3" y="277" width="0.3" height="15.0" fill="rgb(237,174,30)" rx="2" ry="2" />
<text  x="53.30" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.02%)</title><rect x="79.2" y="213" width="0.3" height="15.0" fill="rgb(220,101,17)" rx="2" ry="2" />
<text  x="82.21" y="223.5" ></text>
</g>
<g >
<title>runtime.makeSpanClass (1 samples, 0.02%)</title><rect x="281.0" y="245" width="0.3" height="15.0" fill="rgb(224,163,23)" rx="2" ry="2" />
<text  x="283.98" y="255.5" ></text>
</g>
<g >
<title>runtime.sweepone (12 samples, 0.30%)</title><rect x="436.3" y="325" width="3.5" height="15.0" fill="rgb(235,143,4)" rx="2" ry="2" />
<text  x="439.33" y="335.5" ></text>
</g>
<g >
<title>runtime.cansemacquire (2 samples, 0.05%)</title><rect x="358.7" y="197" width="0.5" height="15.0" fill="rgb(222,42,27)" rx="2" ry="2" />
<text  x="361.66" y="207.5" ></text>
</g>
<g >
<title>runtime.chansend (210 samples, 5.20%)</title><rect x="204.2" y="277" width="61.3" height="15.0" fill="rgb(208,81,10)" rx="2" ry="2" />
<text  x="207.18" y="287.5" >runtim..</text>
</g>
<g >
<title>runtime.(*mcache).nextFree (2 samples, 0.05%)</title><rect x="45.3" y="261" width="0.6" height="15.0" fill="rgb(247,104,52)" rx="2" ry="2" />
<text  x="48.33" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (2 samples, 0.05%)</title><rect x="277.5" y="181" width="0.6" height="15.0" fill="rgb(230,166,48)" rx="2" ry="2" />
<text  x="280.48" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc (7 samples, 0.17%)</title><rect x="92.9" y="261" width="2.1" height="15.0" fill="rgb(238,150,43)" rx="2" ry="2" />
<text  x="95.93" y="271.5" ></text>
</g>
<g >
<title>runtime.jmpdefer (2 samples, 0.05%)</title><rect x="76.0" y="277" width="0.6" height="15.0" fill="rgb(218,39,17)" rx="2" ry="2" />
<text  x="78.99" y="287.5" ></text>
</g>
<g >
<title>runtime.osyield (5 samples, 0.12%)</title><rect x="126.2" y="277" width="1.5" height="15.0" fill="rgb(238,98,12)" rx="2" ry="2" />
<text  x="129.22" y="287.5" ></text>
</g>
<g >
<title>syscall.Write (27 samples, 0.67%)</title><rect x="115.4" y="277" width="7.9" height="15.0" fill="rgb(227,15,24)" rx="2" ry="2" />
<text  x="118.41" y="287.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush (6 samples, 0.15%)</title><rect x="417.3" y="213" width="1.8" height="15.0" fill="rgb(244,79,44)" rx="2" ry="2" />
<text  x="420.35" y="223.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (1 samples, 0.02%)</title><rect x="92.6" y="229" width="0.3" height="15.0" fill="rgb(231,165,4)" rx="2" ry="2" />
<text  x="95.64" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (1 samples, 0.02%)</title><rect x="457.4" y="213" width="0.2" height="15.0" fill="rgb(245,1,22)" rx="2" ry="2" />
<text  x="460.35" y="223.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (1 samples, 0.02%)</title><rect x="283.3" y="229" width="0.3" height="15.0" fill="rgb(251,44,3)" rx="2" ry="2" />
<text  x="286.32" y="239.5" ></text>
</g>
<g >
<title>sync.runtime_nanotime (1 samples, 0.02%)</title><rect x="96.4" y="293" width="0.3" height="15.0" fill="rgb(246,62,41)" rx="2" ry="2" />
<text  x="99.43" y="303.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.02%)</title><rect x="412.1" y="133" width="0.3" height="15.0" fill="rgb(241,65,28)" rx="2" ry="2" />
<text  x="415.09" y="143.5" ></text>
</g>
<g >
<title>runtime.binarySearchTree (1 samples, 0.02%)</title><rect x="441.3" y="181" width="0.3" height="15.0" fill="rgb(230,82,30)" rx="2" ry="2" />
<text  x="444.29" y="191.5" ></text>
</g>
<g >
<title>runtime.chansend.func1 (6 samples, 0.15%)</title><rect x="16.1" y="229" width="1.8" height="15.0" fill="rgb(214,71,33)" rx="2" ry="2" />
<text  x="19.13" y="239.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*marshalInfo).size (3 samples, 0.07%)</title><rect x="84.8" y="229" width="0.8" height="15.0" fill="rgb(244,140,3)" rx="2" ry="2" />
<text  x="87.75" y="239.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Unmarshal (5 samples, 0.12%)</title><rect x="76.6" y="277" width="1.4" height="15.0" fill="rgb(230,31,43)" rx="2" ry="2" />
<text  x="79.58" y="287.5" ></text>
</g>
<g >
<title>net.(*conn).Read (51 samples, 1.26%)</title><rect x="99.9" y="325" width="14.9" height="15.0" fill="rgb(245,111,20)" rx="2" ry="2" />
<text  x="102.94" y="335.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Unmarshal (10 samples, 0.25%)</title><rect x="89.7" y="245" width="2.9" height="15.0" fill="rgb(227,101,20)" rx="2" ry="2" />
<text  x="92.72" y="255.5" ></text>
</g>
<g >
<title>runtime.usleep (314 samples, 7.77%)</title><rect x="479.3" y="245" width="91.6" height="15.0" fill="rgb(240,53,37)" rx="2" ry="2" />
<text  x="482.26" y="255.5" >runtime.us..</text>
</g>
<g >
<title>runtime.heapBitsSetType (14 samples, 0.35%)</title><rect x="288.9" y="261" width="4.1" height="15.0" fill="rgb(207,41,2)" rx="2" ry="2" />
<text  x="291.87" y="271.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.02%)</title><rect x="271.9" y="181" width="0.3" height="15.0" fill="rgb(247,174,3)" rx="2" ry="2" />
<text  x="274.93" y="191.5" ></text>
</g>
<g >
<title>runtime.(*guintptr).cas (2 samples, 0.05%)</title><rect x="401.9" y="197" width="0.6" height="15.0" fill="rgb(211,56,43)" rx="2" ry="2" />
<text  x="404.87" y="207.5" ></text>
</g>
<g >
<title>runtime.notewakeup (28 samples, 0.69%)</title><rect x="811.6" y="245" width="8.1" height="15.0" fill="rgb(217,117,54)" rx="2" ry="2" />
<text  x="814.56" y="255.5" ></text>
</g>
<g >
<title>runtime.typedmemclr (1 samples, 0.02%)</title><rect x="191.0" y="229" width="0.3" height="15.0" fill="rgb(251,129,53)" rx="2" ry="2" />
<text  x="194.04" y="239.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc/protocol.WriteStream (28 samples, 0.69%)</title><rect x="115.1" y="341" width="8.2" height="15.0" fill="rgb(224,223,46)" rx="2" ry="2" />
<text  x="118.12" y="351.5" ></text>
</g>
<g >
<title>all (4,041 samples, 100%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(247,186,1)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Size (3 samples, 0.07%)</title><rect x="32.5" y="245" width="0.9" height="15.0" fill="rgb(227,44,31)" rx="2" ry="2" />
<text  x="35.48" y="255.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).dequeue (1 samples, 0.02%)</title><rect x="363.6" y="197" width="0.3" height="15.0" fill="rgb(239,184,16)" rx="2" ry="2" />
<text  x="366.62" y="207.5" ></text>
</g>
<g >
<title>runtime.putfull (1 samples, 0.02%)</title><rect x="411.5" y="181" width="0.3" height="15.0" fill="rgb(217,71,49)" rx="2" ry="2" />
<text  x="414.51" y="191.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.02%)</title><rect x="439.0" y="229" width="0.3" height="15.0" fill="rgb(237,43,39)" rx="2" ry="2" />
<text  x="441.96" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (2 samples, 0.05%)</title><rect x="843.1" y="261" width="0.6" height="15.0" fill="rgb(229,145,9)" rx="2" ry="2" />
<text  x="846.10" y="271.5" ></text>
</g>
<g >
<title>runtime.procyield (2 samples, 0.05%)</title><rect x="95.9" y="277" width="0.5" height="15.0" fill="rgb(222,65,43)" rx="2" ry="2" />
<text  x="98.85" y="287.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeue (7 samples, 0.17%)</title><rect x="12.6" y="245" width="2.1" height="15.0" fill="rgb(223,124,51)" rx="2" ry="2" />
<text  x="15.63" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.02%)</title><rect x="48.3" y="245" width="0.2" height="15.0" fill="rgb(250,28,34)" rx="2" ry="2" />
<text  x="51.25" y="255.5" ></text>
</g>
<g >
<title>runtime.getStackMap (6 samples, 0.15%)</title><rect x="413.0" y="101" width="1.7" height="15.0" fill="rgb(236,83,54)" rx="2" ry="2" />
<text  x="415.97" y="111.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.02%)</title><rect x="1047.8" y="133" width="0.3" height="15.0" fill="rgb(224,29,29)" rx="2" ry="2" />
<text  x="1050.79" y="143.5" ></text>
</g>
<g >
<title>runtime.bulkBarrierPreWrite (1 samples, 0.02%)</title><rect x="60.5" y="277" width="0.3" height="15.0" fill="rgb(253,216,4)" rx="2" ry="2" />
<text  x="63.52" y="287.5" ></text>
</g>
<g >
<title>runtime.unlock (5 samples, 0.12%)</title><rect x="128.8" y="293" width="1.5" height="15.0" fill="rgb(231,33,40)" rx="2" ry="2" />
<text  x="131.85" y="303.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.ArgsEncode (58 samples, 1.44%)</title><rect x="168.9" y="293" width="16.9" height="15.0" fill="rgb(211,193,5)" rx="2" ry="2" />
<text  x="171.85" y="303.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (10 samples, 0.25%)</title><rect x="1155.3" y="277" width="2.9" height="15.0" fill="rgb(232,177,9)" rx="2" ry="2" />
<text  x="1158.25" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (2 samples, 0.05%)</title><rect x="42.4" y="213" width="0.6" height="15.0" fill="rgb(247,78,29)" rx="2" ry="2" />
<text  x="45.41" y="223.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.02%)</title><rect x="94.1" y="165" width="0.3" height="15.0" fill="rgb(253,168,26)" rx="2" ry="2" />
<text  x="97.10" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.02%)</title><rect x="48.3" y="261" width="0.2" height="15.0" fill="rgb(225,226,12)" rx="2" ry="2" />
<text  x="51.25" y="271.5" ></text>
</g>
<g >
<title>runtime.chansend.func1 (2 samples, 0.05%)</title><rect x="261.1" y="245" width="0.6" height="15.0" fill="rgb(236,151,30)" rx="2" ry="2" />
<text  x="264.13" y="255.5" ></text>
</g>
<g >
<title>runtime.sysmon (225 samples, 5.57%)</title><rect x="842.5" y="309" width="65.7" height="15.0" fill="rgb(216,111,35)" rx="2" ry="2" />
<text  x="845.51" y="319.5" >runtime..</text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (2 samples, 0.05%)</title><rect x="93.5" y="213" width="0.6" height="15.0" fill="rgb(213,137,23)" rx="2" ry="2" />
<text  x="96.51" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (1 samples, 0.02%)</title><rect x="37.2" y="213" width="0.2" height="15.0" fill="rgb(244,69,40)" rx="2" ry="2" />
<text  x="40.16" y="223.5" ></text>
</g>
<g >
<title>runtime.semasleep (23 samples, 0.57%)</title><rect x="877.6" y="261" width="6.7" height="15.0" fill="rgb(224,34,37)" rx="2" ry="2" />
<text  x="880.55" y="271.5" ></text>
</g>
<g >
<title>runtime.semrelease1 (11 samples, 0.27%)</title><rect x="165.6" y="229" width="3.3" height="15.0" fill="rgb(208,2,3)" rx="2" ry="2" />
<text  x="168.64" y="239.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*Multiplex).run.func1.1 (2 samples, 0.05%)</title><rect x="97.3" y="325" width="0.6" height="15.0" fill="rgb(253,21,54)" rx="2" ry="2" />
<text  x="100.31" y="335.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.02%)</title><rect x="187.5" y="261" width="0.3" height="15.0" fill="rgb(235,5,29)" rx="2" ry="2" />
<text  x="190.54" y="271.5" ></text>
</g>
<g >
<title>runtime.newdefer (4 samples, 0.10%)</title><rect x="153.4" y="245" width="1.1" height="15.0" fill="rgb(224,148,29)" rx="2" ry="2" />
<text  x="156.38" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (1 samples, 0.02%)</title><rect x="409.8" y="181" width="0.2" height="15.0" fill="rgb(205,130,12)" rx="2" ry="2" />
<text  x="412.76" y="191.5" ></text>
</g>
<g >
<title>runtime.park_m (1,244 samples, 30.78%)</title><rect x="458.8" y="325" width="363.3" height="15.0" fill="rgb(241,28,43)" rx="2" ry="2" />
<text  x="461.81" y="335.5" >runtime.park_m</text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (66 samples, 1.63%)</title><rect x="1170.7" y="277" width="19.3" height="15.0" fill="rgb(230,49,18)" rx="2" ry="2" />
<text  x="1173.73" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.05%)</title><rect x="433.1" y="325" width="0.6" height="15.0" fill="rgb(205,75,21)" rx="2" ry="2" />
<text  x="436.12" y="335.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.02%)</title><rect x="115.1" y="277" width="0.3" height="15.0" fill="rgb(224,40,28)" rx="2" ry="2" />
<text  x="118.12" y="287.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.02%)</title><rect x="1159.0" y="229" width="0.3" height="15.0" fill="rgb(221,28,20)" rx="2" ry="2" />
<text  x="1162.05" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (4 samples, 0.10%)</title><rect x="818.6" y="213" width="1.1" height="15.0" fill="rgb(254,208,1)" rx="2" ry="2" />
<text  x="821.57" y="223.5" ></text>
</g>
<g >
<title>runtime.goready (4 samples, 0.10%)</title><rect x="401.3" y="277" width="1.2" height="15.0" fill="rgb(224,81,16)" rx="2" ry="2" />
<text  x="404.29" y="287.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (70 samples, 1.73%)</title><rect x="822.1" y="309" width="20.4" height="15.0" fill="rgb(215,9,30)" rx="2" ry="2" />
<text  x="825.07" y="319.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.02%)</title><rect x="92.3" y="181" width="0.3" height="15.0" fill="rgb(222,70,1)" rx="2" ry="2" />
<text  x="95.35" y="191.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (1 samples, 0.02%)</title><rect x="94.7" y="229" width="0.3" height="15.0" fill="rgb(237,201,22)" rx="2" ry="2" />
<text  x="97.68" y="239.5" ></text>
</g>
<g >
<title>runtime.morestack (70 samples, 1.73%)</title><rect x="822.1" y="341" width="20.4" height="15.0" fill="rgb(213,29,15)" rx="2" ry="2" />
<text  x="825.07" y="351.5" ></text>
</g>
<g >
<title>runtime.walltime (10 samples, 0.25%)</title><rect x="427.3" y="293" width="2.9" height="15.0" fill="rgb(220,29,31)" rx="2" ry="2" />
<text  x="430.28" y="303.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*Msg).Decode (1 samples, 0.02%)</title><rect x="25.2" y="293" width="0.3" height="15.0" fill="rgb(215,201,33)" rx="2" ry="2" />
<text  x="28.18" y="303.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.02%)</title><rect x="271.9" y="229" width="0.3" height="15.0" fill="rgb(239,34,19)" rx="2" ry="2" />
<text  x="274.93" y="239.5" ></text>
</g>
<g >
<title>runtime.semawakeup (34 samples, 0.84%)</title><rect x="832.6" y="229" width="9.9" height="15.0" fill="rgb(218,193,2)" rx="2" ry="2" />
<text  x="835.58" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="1159.0" y="277" width="0.3" height="15.0" fill="rgb(236,101,1)" rx="2" ry="2" />
<text  x="1162.05" y="287.5" ></text>
</g>
<g >
<title>runtime.unlock (6 samples, 0.15%)</title><rect x="16.1" y="213" width="1.8" height="15.0" fill="rgb(208,0,31)" rx="2" ry="2" />
<text  x="19.13" y="223.5" ></text>
</g>
<g >
<title>runtime.usleep (6 samples, 0.15%)</title><rect x="166.2" y="181" width="1.8" height="15.0" fill="rgb(232,45,28)" rx="2" ry="2" />
<text  x="169.22" y="191.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.getMessageMarshalInfo (1 samples, 0.02%)</title><rect x="85.6" y="229" width="0.3" height="15.0" fill="rgb(250,84,4)" rx="2" ry="2" />
<text  x="88.63" y="239.5" ></text>
</g>
<g >
<title>runtime.findObject (2 samples, 0.05%)</title><rect x="416.5" y="197" width="0.6" height="15.0" fill="rgb(224,97,40)" rx="2" ry="2" />
<text  x="419.47" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (2 samples, 0.05%)</title><rect x="86.5" y="229" width="0.6" height="15.0" fill="rgb(239,228,30)" rx="2" ry="2" />
<text  x="89.51" y="239.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*Multiplex).run.func2 (2 samples, 0.05%)</title><rect x="97.9" y="341" width="0.6" height="15.0" fill="rgb(253,41,54)" rx="2" ry="2" />
<text  x="100.89" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (6 samples, 0.15%)</title><rect x="287.1" y="261" width="1.8" height="15.0" fill="rgb(217,211,25)" rx="2" ry="2" />
<text  x="290.11" y="271.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_fast32 (1 samples, 0.02%)</title><rect x="97.9" y="293" width="0.3" height="15.0" fill="rgb(209,74,27)" rx="2" ry="2" />
<text  x="100.89" y="303.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*unmarshalInfo).unmarshal (12 samples, 0.30%)</title><rect x="197.2" y="213" width="3.5" height="15.0" fill="rgb(238,72,5)" rx="2" ry="2" />
<text  x="200.18" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mSpanList).insertBack (1 samples, 0.02%)</title><rect x="95.6" y="213" width="0.3" height="15.0" fill="rgb(238,123,52)" rx="2" ry="2" />
<text  x="98.56" y="223.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (51 samples, 1.26%)</title><rect x="99.9" y="309" width="14.9" height="15.0" fill="rgb(208,179,41)" rx="2" ry="2" />
<text  x="102.94" y="319.5" ></text>
</g>
<g >
<title>runtime.growslice (2 samples, 0.05%)</title><rect x="92.1" y="197" width="0.5" height="15.0" fill="rgb(229,21,2)" rx="2" ry="2" />
<text  x="95.05" y="207.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.02%)</title><rect x="842.5" y="277" width="0.3" height="15.0" fill="rgb(249,168,22)" rx="2" ry="2" />
<text  x="845.51" y="287.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_lock (21 samples, 0.52%)</title><rect x="1148.8" y="213" width="6.2" height="15.0" fill="rgb(227,134,4)" rx="2" ry="2" />
<text  x="1151.83" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (814 samples, 20.14%)</title><rect x="570.9" y="229" width="237.7" height="15.0" fill="rgb(214,3,28)" rx="2" ry="2" />
<text  x="573.95" y="239.5" >runtime.pthread_cond_wait</text>
</g>
<g >
<title>runtime.heapBits.bits (1 samples, 0.02%)</title><rect x="417.1" y="197" width="0.2" height="15.0" fill="rgb(241,213,14)" rx="2" ry="2" />
<text  x="420.06" y="207.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.02%)</title><rect x="464.7" y="261" width="0.2" height="15.0" fill="rgb(226,117,2)" rx="2" ry="2" />
<text  x="467.65" y="271.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.02%)</title><rect x="454.7" y="229" width="0.3" height="15.0" fill="rgb(205,47,18)" rx="2" ry="2" />
<text  x="457.73" y="239.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.02%)</title><rect x="1159.0" y="213" width="0.3" height="15.0" fill="rgb(253,203,49)" rx="2" ry="2" />
<text  x="1162.05" y="223.5" ></text>
</g>
<g >
<title>runtime.funcdata (1 samples, 0.02%)</title><rect x="443.6" y="149" width="0.3" height="15.0" fill="rgb(232,23,35)" rx="2" ry="2" />
<text  x="446.63" y="159.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.02%)</title><rect x="98.8" y="309" width="0.3" height="15.0" fill="rgb(207,84,54)" rx="2" ry="2" />
<text  x="101.77" y="319.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (28 samples, 0.69%)</title><rect x="410.9" y="245" width="8.2" height="15.0" fill="rgb(206,125,52)" rx="2" ry="2" />
<text  x="413.93" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan.func1 (6 samples, 0.15%)</title><rect x="437.5" y="245" width="1.8" height="15.0" fill="rgb(206,87,16)" rx="2" ry="2" />
<text  x="440.50" y="255.5" ></text>
</g>
<g >
<title>runtime.acquirep (2 samples, 0.05%)</title><rect x="824.4" y="229" width="0.6" height="15.0" fill="rgb(207,113,42)" rx="2" ry="2" />
<text  x="827.41" y="239.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.02%)</title><rect x="37.4" y="245" width="0.3" height="15.0" fill="rgb(243,108,9)" rx="2" ry="2" />
<text  x="40.45" y="255.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.02%)</title><rect x="114.0" y="133" width="0.2" height="15.0" fill="rgb(228,105,54)" rx="2" ry="2" />
<text  x="116.95" y="143.5" ></text>
</g>
<g >
<title>runtime.spanOf (1 samples, 0.02%)</title><rect x="418.2" y="149" width="0.3" height="15.0" fill="rgb(230,144,10)" rx="2" ry="2" />
<text  x="421.23" y="159.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.decodeVarint (2 samples, 0.05%)</title><rect x="41.0" y="197" width="0.5" height="15.0" fill="rgb(250,39,18)" rx="2" ry="2" />
<text  x="43.95" y="207.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.appendVarint64ValueNoZero (1 samples, 0.02%)</title><rect x="84.2" y="213" width="0.3" height="15.0" fill="rgb(214,124,52)" rx="2" ry="2" />
<text  x="87.17" y="223.5" ></text>
</g>
<g >
<title>runtime.gopark (1 samples, 0.02%)</title><rect x="125.6" y="277" width="0.3" height="15.0" fill="rgb(235,222,37)" rx="2" ry="2" />
<text  x="128.63" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).rotateLeft (1 samples, 0.02%)</title><rect x="288.6" y="85" width="0.3" height="15.0" fill="rgb(211,177,54)" rx="2" ry="2" />
<text  x="291.57" y="95.5" ></text>
</g>
<g >
<title>runtime.deferproc (5 samples, 0.12%)</title><rect x="21.1" y="277" width="1.5" height="15.0" fill="rgb(207,102,49)" rx="2" ry="2" />
<text  x="24.10" y="287.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.02%)</title><rect x="92.1" y="101" width="0.2" height="15.0" fill="rgb(235,94,44)" rx="2" ry="2" />
<text  x="95.05" y="111.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*Batch).run.func1.1 (140 samples, 3.46%)</title><rect x="10.3" y="325" width="40.9" height="15.0" fill="rgb(216,97,42)" rx="2" ry="2" />
<text  x="13.29" y="335.5" >hsl..</text>
</g>
<g >
<title>runtime.netpoll (1 samples, 0.02%)</title><rect x="457.1" y="261" width="0.3" height="15.0" fill="rgb(211,120,2)" rx="2" ry="2" />
<text  x="460.06" y="271.5" ></text>
</g>
<g >
<title>main.main.func2 (24 samples, 0.59%)</title><rect x="123.3" y="341" width="7.0" height="15.0" fill="rgb(236,91,17)" rx="2" ry="2" />
<text  x="126.30" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (2 samples, 0.05%)</title><rect x="277.5" y="101" width="0.6" height="15.0" fill="rgb(231,29,10)" rx="2" ry="2" />
<text  x="280.48" y="111.5" ></text>
</g>
<g >
<title>runtime.chanrecv (21 samples, 0.52%)</title><rect x="124.2" y="309" width="6.1" height="15.0" fill="rgb(232,52,20)" rx="2" ry="2" />
<text  x="127.17" y="319.5" ></text>
</g>
<g >
<title>runtime.funcPC (1 samples, 0.02%)</title><rect x="163.3" y="213" width="0.3" height="15.0" fill="rgb(224,85,4)" rx="2" ry="2" />
<text  x="166.30" y="223.5" ></text>
</g>
<g >
<title>runtime.acquirem (3 samples, 0.07%)</title><rect x="327.4" y="261" width="0.9" height="15.0" fill="rgb(253,37,18)" rx="2" ry="2" />
<text  x="330.41" y="271.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast.func1 (28 samples, 0.69%)</title><rect x="1023.0" y="309" width="8.1" height="15.0" fill="rgb(213,34,17)" rx="2" ry="2" />
<text  x="1025.97" y="319.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (46 samples, 1.14%)</title><rect x="439.8" y="309" width="13.5" height="15.0" fill="rgb(229,181,51)" rx="2" ry="2" />
<text  x="442.83" y="319.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.02%)</title><rect x="31.9" y="213" width="0.3" height="15.0" fill="rgb(245,83,25)" rx="2" ry="2" />
<text  x="34.90" y="223.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*client).RemoteCall (2 samples, 0.05%)</title><rect x="95.0" y="293" width="0.6" height="15.0" fill="rgb(215,4,31)" rx="2" ry="2" />
<text  x="97.97" y="303.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*BatchCodec).Decode (6 samples, 0.15%)</title><rect x="23.1" y="293" width="1.8" height="15.0" fill="rgb(254,45,9)" rx="2" ry="2" />
<text  x="26.14" y="303.5" ></text>
</g>
<g >
<title>runtime.semasleep (2 samples, 0.05%)</title><rect x="843.1" y="277" width="0.6" height="15.0" fill="rgb(206,85,26)" rx="2" ry="2" />
<text  x="846.10" y="287.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.02%)</title><rect x="438.4" y="213" width="0.3" height="15.0" fill="rgb(254,210,19)" rx="2" ry="2" />
<text  x="441.37" y="223.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.02%)</title><rect x="907.9" y="277" width="0.3" height="15.0" fill="rgb(252,41,49)" rx="2" ry="2" />
<text  x="910.92" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.02%)</title><rect x="409.8" y="245" width="0.2" height="15.0" fill="rgb(235,127,38)" rx="2" ry="2" />
<text  x="412.76" y="255.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.02%)</title><rect x="442.5" y="165" width="0.3" height="15.0" fill="rgb(214,110,15)" rx="2" ry="2" />
<text  x="445.46" y="175.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.02%)</title><rect x="283.3" y="117" width="0.3" height="15.0" fill="rgb(230,54,8)" rx="2" ry="2" />
<text  x="286.32" y="127.5" ></text>
</g>
<g >
<title>runtime.memmove (2 samples, 0.05%)</title><rect x="83.3" y="197" width="0.6" height="15.0" fill="rgb(207,125,46)" rx="2" ry="2" />
<text  x="86.29" y="207.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*Batch).Ticker.func1 (38 samples, 0.94%)</title><rect x="65.5" y="293" width="11.1" height="15.0" fill="rgb(243,200,42)" rx="2" ry="2" />
<text  x="68.48" y="303.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (22 samples, 0.54%)</title><rect x="442.8" y="181" width="6.4" height="15.0" fill="rgb(243,159,34)" rx="2" ry="2" />
<text  x="445.75" y="191.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.02%)</title><rect x="1048.1" y="261" width="0.3" height="15.0" fill="rgb(234,66,28)" rx="2" ry="2" />
<text  x="1051.08" y="271.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.02%)</title><rect x="96.4" y="277" width="0.3" height="15.0" fill="rgb(215,172,49)" rx="2" ry="2" />
<text  x="99.43" y="287.5" ></text>
</g>
<g >
<title>runtime.aeshash32 (1 samples, 0.02%)</title><rect x="97.9" y="277" width="0.3" height="15.0" fill="rgb(218,85,12)" rx="2" ry="2" />
<text  x="100.89" y="287.5" ></text>
</g>
<g >
<title>runtime.startm (361 samples, 8.93%)</title><rect x="1049.8" y="261" width="105.5" height="15.0" fill="rgb(215,24,11)" rx="2" ry="2" />
<text  x="1052.84" y="271.5" >runtime.startm</text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.07%)</title><rect x="24.0" y="181" width="0.9" height="15.0" fill="rgb(219,127,28)" rx="2" ry="2" />
<text  x="27.02" y="191.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.02%)</title><rect x="86.5" y="149" width="0.3" height="15.0" fill="rgb(230,144,37)" rx="2" ry="2" />
<text  x="89.51" y="159.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.02%)</title><rect x="410.6" y="261" width="0.3" height="15.0" fill="rgb(220,10,31)" rx="2" ry="2" />
<text  x="413.63" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.02%)</title><rect x="1047.8" y="261" width="0.3" height="15.0" fill="rgb(214,138,30)" rx="2" ry="2" />
<text  x="1050.79" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (46 samples, 1.14%)</title><rect x="439.8" y="325" width="13.5" height="15.0" fill="rgb(225,199,7)" rx="2" ry="2" />
<text  x="442.83" y="335.5" ></text>
</g>
<g >
<title>runtime.funcPC (2 samples, 0.05%)</title><rect x="151.0" y="181" width="0.6" height="15.0" fill="rgb(232,54,41)" rx="2" ry="2" />
<text  x="154.04" y="191.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (54 samples, 1.34%)</title><rect x="1031.1" y="309" width="15.8" height="15.0" fill="rgb(238,106,24)" rx="2" ry="2" />
<text  x="1034.15" y="319.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.02%)</title><rect x="44.7" y="245" width="0.3" height="15.0" fill="rgb(254,31,23)" rx="2" ry="2" />
<text  x="47.75" y="255.5" ></text>
</g>
<g >
<title>runtime.newobject (11 samples, 0.27%)</title><rect x="41.8" y="277" width="3.2" height="15.0" fill="rgb(248,35,17)" rx="2" ry="2" />
<text  x="44.83" y="287.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*Batch).Ticker.func1 (38 samples, 0.94%)</title><rect x="12.0" y="293" width="11.1" height="15.0" fill="rgb(211,124,34)" rx="2" ry="2" />
<text  x="15.04" y="303.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (3 samples, 0.07%)</title><rect x="1046.9" y="293" width="0.9" height="15.0" fill="rgb(229,81,48)" rx="2" ry="2" />
<text  x="1049.92" y="303.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc/examples/example/pb/service.(*ArithResponse).XXX_Unmarshal (32 samples, 0.79%)</title><rect x="191.3" y="245" width="9.4" height="15.0" fill="rgb(254,178,3)" rx="2" ry="2" />
<text  x="194.34" y="255.5" ></text>
</g>
<g >
<title>runtime.cansemacquire (3 samples, 0.07%)</title><rect x="157.8" y="213" width="0.8" height="15.0" fill="rgb(246,192,20)" rx="2" ry="2" />
<text  x="160.76" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (4 samples, 0.10%)</title><rect x="401.3" y="261" width="1.2" height="15.0" fill="rgb(219,67,36)" rx="2" ry="2" />
<text  x="404.29" y="271.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.appendVarint (1 samples, 0.02%)</title><rect x="29.6" y="197" width="0.3" height="15.0" fill="rgb(241,0,46)" rx="2" ry="2" />
<text  x="32.56" y="207.5" ></text>
</g>
<g >
<title>runtime.growslice (4 samples, 0.10%)</title><rect x="23.7" y="197" width="1.2" height="15.0" fill="rgb(252,59,54)" rx="2" ry="2" />
<text  x="26.72" y="207.5" ></text>
</g>
<g >
<title>runtime.typedmemclr (3 samples, 0.07%)</title><rect x="59.6" y="293" width="0.9" height="15.0" fill="rgb(207,55,17)" rx="2" ry="2" />
<text  x="62.64" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).freeSpan (7 samples, 0.17%)</title><rect x="437.5" y="293" width="2.0" height="15.0" fill="rgb(225,142,6)" rx="2" ry="2" />
<text  x="440.50" y="303.5" ></text>
</g>
<g >
<title>runtime.getitab (7 samples, 0.17%)</title><rect x="200.7" y="229" width="2.0" height="15.0" fill="rgb(223,17,23)" rx="2" ry="2" />
<text  x="203.68" y="239.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeue (6 samples, 0.15%)</title><rect x="66.4" y="245" width="1.7" height="15.0" fill="rgb(245,79,52)" rx="2" ry="2" />
<text  x="69.36" y="255.5" ></text>
</g>
<g >
<title>runtime.add1 (1 samples, 0.02%)</title><rect x="292.4" y="245" width="0.3" height="15.0" fill="rgb(227,75,31)" rx="2" ry="2" />
<text  x="295.37" y="255.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.02%)</title><rect x="87.1" y="229" width="0.3" height="15.0" fill="rgb(217,166,41)" rx="2" ry="2" />
<text  x="90.09" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.02%)</title><rect x="79.2" y="181" width="0.3" height="15.0" fill="rgb(225,44,12)" rx="2" ry="2" />
<text  x="82.21" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (2 samples, 0.05%)</title><rect x="35.1" y="229" width="0.6" height="15.0" fill="rgb(251,138,41)" rx="2" ry="2" />
<text  x="38.11" y="239.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.02%)</title><rect x="401.6" y="213" width="0.3" height="15.0" fill="rgb(254,227,8)" rx="2" ry="2" />
<text  x="404.58" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.02%)</title><rect x="458.5" y="229" width="0.3" height="15.0" fill="rgb(250,223,4)" rx="2" ry="2" />
<text  x="461.52" y="239.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.ProtoCodec.Encode (51 samples, 1.26%)</title><rect x="170.9" y="277" width="14.9" height="15.0" fill="rgb(206,93,3)" rx="2" ry="2" />
<text  x="173.90" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).freeSpan (2 samples, 0.05%)</title><rect x="824.4" y="149" width="0.6" height="15.0" fill="rgb(221,4,35)" rx="2" ry="2" />
<text  x="827.41" y="159.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.02%)</title><rect x="1047.8" y="149" width="0.3" height="15.0" fill="rgb(230,216,11)" rx="2" ry="2" />
<text  x="1050.79" y="159.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.02%)</title><rect x="95.6" y="293" width="0.3" height="15.0" fill="rgb(223,226,1)" rx="2" ry="2" />
<text  x="98.56" y="303.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc/pb.(*Response).Reset (1 samples, 0.02%)</title><rect x="89.4" y="261" width="0.3" height="15.0" fill="rgb(252,5,6)" rx="2" ry="2" />
<text  x="92.43" y="271.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeue (1 samples, 0.02%)</title><rect x="204.2" y="261" width="0.3" height="15.0" fill="rgb(240,183,23)" rx="2" ry="2" />
<text  x="207.18" y="271.5" ></text>
</g>
<g >
<title>runtime.startTheWorldWithSema (4 samples, 0.10%)</title><rect x="1048.4" y="293" width="1.1" height="15.0" fill="rgb(215,203,11)" rx="2" ry="2" />
<text  x="1051.38" y="303.5" ></text>
</g>
<g >
<title>runtime.resetspinning (28 samples, 0.69%)</title><rect x="811.6" y="293" width="8.1" height="15.0" fill="rgb(220,172,12)" rx="2" ry="2" />
<text  x="814.56" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.02%)</title><rect x="271.1" y="213" width="0.2" height="15.0" fill="rgb(214,192,44)" rx="2" ry="2" />
<text  x="274.05" y="223.5" ></text>
</g>
<g >
<title>runtime.netpoll (24 samples, 0.59%)</title><rect x="471.1" y="277" width="7.0" height="15.0" fill="rgb(224,164,27)" rx="2" ry="2" />
<text  x="474.08" y="287.5" ></text>
</g>
<g >
<title>runtime.notesleep (26 samples, 0.64%)</title><rect x="825.0" y="229" width="7.6" height="15.0" fill="rgb(239,112,40)" rx="2" ry="2" />
<text  x="827.99" y="239.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.02%)</title><rect x="453.3" y="245" width="0.3" height="15.0" fill="rgb(246,119,25)" rx="2" ry="2" />
<text  x="456.27" y="255.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (1 samples, 0.02%)</title><rect x="260.8" y="229" width="0.3" height="15.0" fill="rgb(245,113,29)" rx="2" ry="2" />
<text  x="263.83" y="239.5" ></text>
</g>
<g >
<title>runtime.goparkunlock (1 samples, 0.02%)</title><rect x="125.6" y="293" width="0.3" height="15.0" fill="rgb(207,35,31)" rx="2" ry="2" />
<text  x="128.63" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).setSpans (1 samples, 0.02%)</title><rect x="271.1" y="117" width="0.2" height="15.0" fill="rgb(218,182,17)" rx="2" ry="2" />
<text  x="274.05" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.02%)</title><rect x="409.8" y="261" width="0.2" height="15.0" fill="rgb(230,120,42)" rx="2" ry="2" />
<text  x="412.76" y="271.5" ></text>
</g>
<g >
<title>runtime.semrelease1 (1 samples, 0.02%)</title><rect x="363.6" y="213" width="0.3" height="15.0" fill="rgb(247,100,42)" rx="2" ry="2" />
<text  x="366.62" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).pickFreeSpan (1 samples, 0.02%)</title><rect x="97.6" y="101" width="0.3" height="15.0" fill="rgb(211,71,29)" rx="2" ry="2" />
<text  x="100.60" y="111.5" ></text>
</g>
<g >
<title>runtime.handoffp (393 samples, 9.73%)</title><rect x="908.2" y="293" width="114.8" height="15.0" fill="rgb(241,63,47)" rx="2" ry="2" />
<text  x="911.21" y="303.5" >runtime.handoffp</text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*TCPConn).handle.func1.2 (2 samples, 0.05%)</title><rect x="98.5" y="325" width="0.6" height="15.0" fill="rgb(253,157,30)" rx="2" ry="2" />
<text  x="101.48" y="335.5" ></text>
</g>
<g >
<title>runtime.memmove (2 samples, 0.05%)</title><rect x="74.2" y="213" width="0.6" height="15.0" fill="rgb(239,225,37)" rx="2" ry="2" />
<text  x="77.24" y="223.5" ></text>
</g>
<g >
<title>runtime.unlock (2 samples, 0.05%)</title><rect x="261.1" y="229" width="0.6" height="15.0" fill="rgb(253,73,44)" rx="2" ry="2" />
<text  x="264.13" y="239.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.02%)</title><rect x="114.0" y="165" width="0.2" height="15.0" fill="rgb(239,138,20)" rx="2" ry="2" />
<text  x="116.95" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (1 samples, 0.02%)</title><rect x="45.6" y="149" width="0.3" height="15.0" fill="rgb(216,205,48)" rx="2" ry="2" />
<text  x="48.62" y="159.5" ></text>
</g>
<g >
<title>runtime.semasleep (3 samples, 0.07%)</title><rect x="453.9" y="245" width="0.8" height="15.0" fill="rgb(238,77,29)" rx="2" ry="2" />
<text  x="456.85" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).pickFreeSpan (1 samples, 0.02%)</title><rect x="93.5" y="101" width="0.3" height="15.0" fill="rgb(242,188,46)" rx="2" ry="2" />
<text  x="96.51" y="111.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.02%)</title><rect x="93.8" y="197" width="0.3" height="15.0" fill="rgb(213,8,47)" rx="2" ry="2" />
<text  x="96.81" y="207.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.appendBoolValueNoZero (1 samples, 0.02%)</title><rect x="28.4" y="213" width="0.3" height="15.0" fill="rgb(253,164,39)" rx="2" ry="2" />
<text  x="31.40" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.02%)</title><rect x="93.5" y="149" width="0.3" height="15.0" fill="rgb(220,151,16)" rx="2" ry="2" />
<text  x="96.51" y="159.5" ></text>
</g>
<g >
<title>runtime.gcWriteBarrier (2 samples, 0.05%)</title><rect x="321.0" y="277" width="0.6" height="15.0" fill="rgb(238,34,37)" rx="2" ry="2" />
<text  x="323.99" y="287.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.02%)</title><rect x="77.5" y="181" width="0.2" height="15.0" fill="rgb(208,205,43)" rx="2" ry="2" />
<text  x="80.45" y="191.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.SizeVarint (1 samples, 0.02%)</title><rect x="85.3" y="197" width="0.3" height="15.0" fill="rgb(230,4,51)" rx="2" ry="2" />
<text  x="88.34" y="207.5" ></text>
</g>
<g >
<title>runtime.freedefer (1 samples, 0.02%)</title><rect x="75.7" y="261" width="0.3" height="15.0" fill="rgb(233,191,23)" rx="2" ry="2" />
<text  x="78.70" y="271.5" ></text>
</g>
<g >
<title>time.Now (1 samples, 0.02%)</title><rect x="95.3" y="261" width="0.3" height="15.0" fill="rgb(245,35,2)" rx="2" ry="2" />
<text  x="98.27" y="271.5" ></text>
</g>
<g >
<title>runtime.releaseSudog (5 samples, 0.12%)</title><rect x="328.3" y="277" width="1.4" height="15.0" fill="rgb(246,221,31)" rx="2" ry="2" />
<text  x="331.29" y="287.5" ></text>
</g>
<g >
<title>runtime.funcPC (1 samples, 0.02%)</title><rect x="147.5" y="181" width="0.3" height="15.0" fill="rgb(244,23,9)" rx="2" ry="2" />
<text  x="150.54" y="191.5" ></text>
</g>
<g >
<title>sync.runtime_Semrelease (11 samples, 0.27%)</title><rect x="165.6" y="245" width="3.3" height="15.0" fill="rgb(222,12,38)" rx="2" ry="2" />
<text  x="168.64" y="255.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc/pb.(*Request).XXX_Marshal (15 samples, 0.37%)</title><rect x="80.4" y="261" width="4.4" height="15.0" fill="rgb(214,105,52)" rx="2" ry="2" />
<text  x="83.37" y="271.5" ></text>
</g>
<g >
<title>runtime.lock (2 samples, 0.05%)</title><rect x="1023.0" y="277" width="0.6" height="15.0" fill="rgb(245,152,29)" rx="2" ry="2" />
<text  x="1025.97" y="287.5" ></text>
</g>
<g >
<title>runtime.stopm (3 samples, 0.07%)</title><rect x="453.9" y="277" width="0.8" height="15.0" fill="rgb(225,201,48)" rx="2" ry="2" />
<text  x="456.85" y="287.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.appendVarintS32ValueNoZero (10 samples, 0.25%)</title><rect x="176.4" y="197" width="3.0" height="15.0" fill="rgb(254,87,31)" rx="2" ry="2" />
<text  x="179.44" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.02%)</title><rect x="271.1" y="245" width="0.2" height="15.0" fill="rgb(244,90,21)" rx="2" ry="2" />
<text  x="274.05" y="255.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*Response).Decode (22 samples, 0.54%)</title><rect x="88.5" y="293" width="6.5" height="15.0" fill="rgb(254,160,25)" rx="2" ry="2" />
<text  x="91.55" y="303.5" ></text>
</g>
<g >
<title>runtime.assertI2I2 (1 samples, 0.02%)</title><rect x="85.9" y="261" width="0.3" height="15.0" fill="rgb(243,228,18)" rx="2" ry="2" />
<text  x="88.92" y="271.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*client).Call (750 samples, 18.56%)</title><rect x="132.4" y="325" width="219.0" height="15.0" fill="rgb(227,112,42)" rx="2" ry="2" />
<text  x="135.35" y="335.5" >hslam.com/git/x/rpc.(*client..</text>
</g>
<g >
<title>runtime.procyield (23 samples, 0.57%)</title><rect x="253.5" y="245" width="6.7" height="15.0" fill="rgb(224,156,0)" rx="2" ry="2" />
<text  x="256.53" y="255.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.appendVarint (1 samples, 0.02%)</title><rect x="31.6" y="197" width="0.3" height="15.0" fill="rgb(207,76,30)" rx="2" ry="2" />
<text  x="34.61" y="207.5" ></text>
</g>
<g >
<title>runtime.add1 (1 samples, 0.02%)</title><rect x="94.4" y="229" width="0.3" height="15.0" fill="rgb(220,225,51)" rx="2" ry="2" />
<text  x="97.39" y="239.5" ></text>
</g>
<g >
<title>math/rand.(*Rand).Int31n (42 samples, 1.04%)</title><rect x="351.6" y="309" width="12.3" height="15.0" fill="rgb(242,211,53)" rx="2" ry="2" />
<text  x="354.65" y="319.5" ></text>
</g>
<g >
<title>runtime.sellock (28 samples, 0.69%)</title><rect x="329.7" y="277" width="8.2" height="15.0" fill="rgb(217,43,8)" rx="2" ry="2" />
<text  x="332.75" y="287.5" ></text>
</g>
<g >
<title>runtime.sendDirect (2 samples, 0.05%)</title><rect x="74.2" y="229" width="0.6" height="15.0" fill="rgb(205,33,35)" rx="2" ry="2" />
<text  x="77.24" y="239.5" ></text>
</g>
<g >
<title>runtime.itabHashFunc (1 samples, 0.02%)</title><rect x="182.0" y="197" width="0.3" height="15.0" fill="rgb(234,110,9)" rx="2" ry="2" />
<text  x="184.99" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1155.0" y="213" width="0.3" height="15.0" fill="rgb(230,90,42)" rx="2" ry="2" />
<text  x="1157.96" y="223.5" ></text>
</g>
<g >
<title>runtime.getitab (2 samples, 0.05%)</title><rect x="33.4" y="245" width="0.5" height="15.0" fill="rgb(231,79,9)" rx="2" ry="2" />
<text  x="36.36" y="255.5" ></text>
</g>
<g >
<title>runtime.walltime_trampoline (1 samples, 0.02%)</title><rect x="436.0" y="325" width="0.3" height="15.0" fill="rgb(219,158,19)" rx="2" ry="2" />
<text  x="439.04" y="335.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (9 samples, 0.22%)</title><rect x="17.9" y="197" width="2.6" height="15.0" fill="rgb(247,198,14)" rx="2" ry="2" />
<text  x="20.88" y="207.5" ></text>
</g>
<g >
<title>runtime.deferreturn (3 samples, 0.07%)</title><rect x="154.5" y="261" width="0.9" height="15.0" fill="rgb(243,20,22)" rx="2" ry="2" />
<text  x="157.54" y="271.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (34 samples, 0.84%)</title><rect x="832.6" y="261" width="9.9" height="15.0" fill="rgb(212,149,46)" rx="2" ry="2" />
<text  x="835.58" y="271.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (339 samples, 8.39%)</title><rect x="1049.8" y="213" width="99.0" height="15.0" fill="rgb(250,31,35)" rx="2" ry="2" />
<text  x="1052.84" y="223.5" >runtime.pth..</text>
</g>
<g >
<title>runtime.gcstopm (3 samples, 0.07%)</title><rect x="457.6" y="277" width="0.9" height="15.0" fill="rgb(229,93,8)" rx="2" ry="2" />
<text  x="460.65" y="287.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.02%)</title><rect x="42.7" y="117" width="0.3" height="15.0" fill="rgb(212,60,1)" rx="2" ry="2" />
<text  x="45.70" y="127.5" ></text>
</g>
<g >
<title>runtime.notesleep (814 samples, 20.14%)</title><rect x="570.9" y="261" width="237.7" height="15.0" fill="rgb(241,100,3)" rx="2" ry="2" />
<text  x="573.95" y="271.5" >runtime.notesleep</text>
</g>
<g >
<title>github.com/golang/protobuf/proto.decodeVarint (1 samples, 0.02%)</title><rect x="200.4" y="181" width="0.3" height="15.0" fill="rgb(228,36,54)" rx="2" ry="2" />
<text  x="203.39" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (34 samples, 0.84%)</title><rect x="832.6" y="213" width="9.9" height="15.0" fill="rgb(242,16,13)" rx="2" ry="2" />
<text  x="835.58" y="223.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*unmarshalInfo).unmarshal (1 samples, 0.02%)</title><rect x="25.2" y="229" width="0.3" height="15.0" fill="rgb(238,63,14)" rx="2" ry="2" />
<text  x="28.18" y="239.5" ></text>
</g>
<g >
<title>runtime.chansend1 (30 samples, 0.74%)</title><rect x="12.3" y="277" width="8.8" height="15.0" fill="rgb(239,173,49)" rx="2" ry="2" />
<text  x="15.34" y="287.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Marshal (14 samples, 0.35%)</title><rect x="80.7" y="245" width="4.1" height="15.0" fill="rgb(207,119,52)" rx="2" ry="2" />
<text  x="83.67" y="255.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (1 samples, 0.02%)</title><rect x="85.9" y="229" width="0.3" height="15.0" fill="rgb(213,213,32)" rx="2" ry="2" />
<text  x="88.92" y="239.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.02%)</title><rect x="159.5" y="181" width="0.3" height="15.0" fill="rgb(234,159,3)" rx="2" ry="2" />
<text  x="162.51" y="191.5" ></text>
</g>
<g >
<title>sync.runtime_SemacquireMutex (10 samples, 0.25%)</title><rect x="157.5" y="245" width="2.9" height="15.0" fill="rgb(207,180,26)" rx="2" ry="2" />
<text  x="160.46" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="261.7" y="229" width="0.3" height="15.0" fill="rgb(223,227,49)" rx="2" ry="2" />
<text  x="264.71" y="239.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Marshal (1 samples, 0.02%)</title><rect x="24.9" y="277" width="0.3" height="15.0" fill="rgb(233,56,50)" rx="2" ry="2" />
<text  x="27.89" y="287.5" ></text>
</g>
<g >
<title>math/rand.(*lockedSource).Int63 (40 samples, 0.99%)</title><rect x="352.2" y="261" width="11.7" height="15.0" fill="rgb(252,133,7)" rx="2" ry="2" />
<text  x="355.23" y="271.5" ></text>
</g>
<g >
<title>runtime.forEachP (54 samples, 1.34%)</title><rect x="1031.1" y="293" width="15.8" height="15.0" fill="rgb(228,195,48)" rx="2" ry="2" />
<text  x="1034.15" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).pickFreeSpan (1 samples, 0.02%)</title><rect x="42.4" y="101" width="0.3" height="15.0" fill="rgb(207,86,37)" rx="2" ry="2" />
<text  x="45.41" y="111.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (13 samples, 0.32%)</title><rect x="360.1" y="245" width="3.8" height="15.0" fill="rgb(251,80,9)" rx="2" ry="2" />
<text  x="363.12" y="255.5" ></text>
</g>
<g >
<title>runtime.stopm (814 samples, 20.14%)</title><rect x="570.9" y="277" width="237.7" height="15.0" fill="rgb(216,151,21)" rx="2" ry="2" />
<text  x="573.95" y="287.5" >runtime.stopm</text>
</g>
<g >
<title>runtime.stopm (3 samples, 0.07%)</title><rect x="457.6" y="261" width="0.9" height="15.0" fill="rgb(207,109,31)" rx="2" ry="2" />
<text  x="460.65" y="271.5" ></text>
</g>
<g >
<title>runtime.scanstack (11 samples, 0.27%)</title><rect x="411.8" y="165" width="3.2" height="15.0" fill="rgb(239,71,42)" rx="2" ry="2" />
<text  x="414.80" y="175.5" ></text>
</g>
<g >
<title>runtime.resetspinning (1 samples, 0.02%)</title><rect x="454.7" y="293" width="0.3" height="15.0" fill="rgb(240,223,41)" rx="2" ry="2" />
<text  x="457.73" y="303.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc/pb.(*Msg).XXX_Unmarshal (1 samples, 0.02%)</title><rect x="25.2" y="261" width="0.3" height="15.0" fill="rgb(240,135,29)" rx="2" ry="2" />
<text  x="28.18" y="271.5" ></text>
</g>
<g >
<title>runtime.goready (10 samples, 0.25%)</title><rect x="71.3" y="229" width="2.9" height="15.0" fill="rgb(240,145,43)" rx="2" ry="2" />
<text  x="74.32" y="239.5" ></text>
</g>
<g >
<title>time.now (28 samples, 0.69%)</title><rect x="144.6" y="213" width="8.2" height="15.0" fill="rgb(205,226,49)" rx="2" ry="2" />
<text  x="147.62" y="223.5" ></text>
</g>
<g >
<title>runtime.selectgo (2 samples, 0.05%)</title><rect x="96.7" y="325" width="0.6" height="15.0" fill="rgb(210,173,6)" rx="2" ry="2" />
<text  x="99.73" y="335.5" ></text>
</g>
<g >
<title>runtime.nanotime (14 samples, 0.35%)</title><rect x="144.9" y="197" width="4.1" height="15.0" fill="rgb(246,25,43)" rx="2" ry="2" />
<text  x="147.91" y="207.5" ></text>
</g>
<g >
<title>runtime.add (1 samples, 0.02%)</title><rect x="52.6" y="277" width="0.3" height="15.0" fill="rgb(226,99,41)" rx="2" ry="2" />
<text  x="55.63" y="287.5" ></text>
</g>
<g >
<title>runtime.semawakeup (3 samples, 0.07%)</title><rect x="819.7" y="261" width="0.9" height="15.0" fill="rgb(210,224,6)" rx="2" ry="2" />
<text  x="822.74" y="271.5" ></text>
</g>
<g >
<title>runtime.makeslice (5 samples, 0.12%)</title><rect x="45.0" y="293" width="1.5" height="15.0" fill="rgb(250,41,39)" rx="2" ry="2" />
<text  x="48.04" y="303.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (30 samples, 0.74%)</title><rect x="440.7" y="261" width="8.8" height="15.0" fill="rgb(239,3,38)" rx="2" ry="2" />
<text  x="443.71" y="271.5" ></text>
</g>
<g >
<title>runtime.kevent (2 samples, 0.05%)</title><rect x="1046.9" y="261" width="0.6" height="15.0" fill="rgb(231,64,53)" rx="2" ry="2" />
<text  x="1049.92" y="271.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*Request).Encode (31 samples, 0.77%)</title><rect x="79.5" y="293" width="9.0" height="15.0" fill="rgb(227,32,50)" rx="2" ry="2" />
<text  x="82.50" y="303.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock (2 samples, 0.05%)</title><rect x="113.7" y="229" width="0.5" height="15.0" fill="rgb(243,154,4)" rx="2" ry="2" />
<text  x="116.66" y="239.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeueSudoG (2 samples, 0.05%)</title><rect x="99.1" y="309" width="0.5" height="15.0" fill="rgb(242,6,13)" rx="2" ry="2" />
<text  x="102.06" y="319.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush.func1 (6 samples, 0.15%)</title><rect x="417.3" y="197" width="1.8" height="15.0" fill="rgb(236,7,22)" rx="2" ry="2" />
<text  x="420.35" y="207.5" ></text>
</g>
<g >
<title>runtime.lock (8 samples, 0.20%)</title><rect x="166.2" y="213" width="2.4" height="15.0" fill="rgb(205,17,54)" rx="2" ry="2" />
<text  x="169.22" y="223.5" ></text>
</g>
<g >
<title>runtime.osyield (12 samples, 0.30%)</title><rect x="54.4" y="277" width="3.5" height="15.0" fill="rgb(247,105,39)" rx="2" ry="2" />
<text  x="57.39" y="287.5" ></text>
</g>
<g >
<title>runtime.freedefer (1 samples, 0.02%)</title><rect x="22.8" y="261" width="0.3" height="15.0" fill="rgb(206,67,2)" rx="2" ry="2" />
<text  x="25.85" y="271.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (105 samples, 2.60%)</title><rect x="1159.3" y="309" width="30.7" height="15.0" fill="rgb(245,63,4)" rx="2" ry="2" />
<text  x="1162.34" y="319.5" >ru..</text>
</g>
<g >
<title>runtime.markroot (11 samples, 0.27%)</title><rect x="411.8" y="213" width="3.2" height="15.0" fill="rgb(207,15,18)" rx="2" ry="2" />
<text  x="414.80" y="223.5" ></text>
</g>
<g >
<title>runtime.findObject (2 samples, 0.05%)</title><rect x="449.5" y="229" width="0.6" height="15.0" fill="rgb(251,102,27)" rx="2" ry="2" />
<text  x="452.47" y="239.5" ></text>
</g>
<g >
<title>runtime.spanOf (1 samples, 0.02%)</title><rect x="94.1" y="133" width="0.3" height="15.0" fill="rgb(243,223,40)" rx="2" ry="2" />
<text  x="97.10" y="143.5" ></text>
</g>
<g >
<title>runtime.notewakeup (393 samples, 9.73%)</title><rect x="908.2" y="261" width="114.8" height="15.0" fill="rgb(236,173,1)" rx="2" ry="2" />
<text  x="911.21" y="271.5" >runtime.notewa..</text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (2 samples, 0.05%)</title><rect x="277.5" y="149" width="0.6" height="15.0" fill="rgb(215,159,33)" rx="2" ry="2" />
<text  x="280.48" y="159.5" ></text>
</g>
<g >
<title>runtime.notewakeup (3 samples, 0.07%)</title><rect x="819.7" y="277" width="0.9" height="15.0" fill="rgb(225,58,12)" rx="2" ry="2" />
<text  x="822.74" y="287.5" ></text>
</g>
<g >
<title>runtime.duffcopy (1 samples, 0.02%)</title><rect x="87.4" y="277" width="0.3" height="15.0" fill="rgb(240,127,15)" rx="2" ry="2" />
<text  x="90.38" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).removeNode (1 samples, 0.02%)</title><rect x="288.6" y="101" width="0.3" height="15.0" fill="rgb(211,149,16)" rx="2" ry="2" />
<text  x="291.57" y="111.5" ></text>
</g>
<g >
<title>runtime.casgstatus (4 samples, 0.10%)</title><rect x="463.8" y="277" width="1.1" height="15.0" fill="rgb(216,164,29)" rx="2" ry="2" />
<text  x="466.78" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.02%)</title><rect x="271.9" y="213" width="0.3" height="15.0" fill="rgb(212,47,6)" rx="2" ry="2" />
<text  x="274.93" y="223.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.appendUTF8StringValueNoZero (2 samples, 0.05%)</title><rect x="30.7" y="213" width="0.6" height="15.0" fill="rgb(221,111,38)" rx="2" ry="2" />
<text  x="33.73" y="223.5" ></text>
</g>
<g >
<title>runtime.notewakeup (8 samples, 0.20%)</title><rect x="822.1" y="245" width="2.3" height="15.0" fill="rgb(211,125,10)" rx="2" ry="2" />
<text  x="825.07" y="255.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1159.0" y="197" width="0.3" height="15.0" fill="rgb(219,50,8)" rx="2" ry="2" />
<text  x="1162.05" y="207.5" ></text>
</g>
<g >
<title>runtime.execute (6 samples, 0.15%)</title><rect x="463.2" y="293" width="1.7" height="15.0" fill="rgb(209,187,23)" rx="2" ry="2" />
<text  x="466.19" y="303.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Marshal (35 samples, 0.87%)</title><rect x="26.1" y="277" width="10.2" height="15.0" fill="rgb(207,166,31)" rx="2" ry="2" />
<text  x="29.06" y="287.5" ></text>
</g>
<g >
<title>runtime.assertI2I2 (7 samples, 0.17%)</title><rect x="200.7" y="245" width="2.0" height="15.0" fill="rgb(245,35,6)" rx="2" ry="2" />
<text  x="203.68" y="255.5" ></text>
</g>
<g >
<title>syscall.Read (48 samples, 1.19%)</title><rect x="100.8" y="277" width="14.0" height="15.0" fill="rgb(208,161,0)" rx="2" ry="2" />
<text  x="103.81" y="287.5" ></text>
</g>
<g >
<title>runtime.readvarint (1 samples, 0.02%)</title><rect x="412.1" y="85" width="0.3" height="15.0" fill="rgb(234,25,4)" rx="2" ry="2" />
<text  x="415.09" y="95.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.02%)</title><rect x="37.2" y="245" width="0.2" height="15.0" fill="rgb(221,215,34)" rx="2" ry="2" />
<text  x="40.16" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (2 samples, 0.05%)</title><rect x="35.1" y="181" width="0.6" height="15.0" fill="rgb(236,124,15)" rx="2" ry="2" />
<text  x="38.11" y="191.5" ></text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (1 samples, 0.02%)</title><rect x="824.4" y="69" width="0.3" height="15.0" fill="rgb(248,165,34)" rx="2" ry="2" />
<text  x="827.41" y="79.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4.1 (1 samples, 0.02%)</title><rect x="1047.8" y="277" width="0.3" height="15.0" fill="rgb(210,215,39)" rx="2" ry="2" />
<text  x="1050.79" y="287.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (2 samples, 0.05%)</title><rect x="50.6" y="309" width="0.6" height="15.0" fill="rgb(243,201,44)" rx="2" ry="2" />
<text  x="53.59" y="319.5" ></text>
</g>
<g >
<title>runtime.systemstack (6 samples, 0.15%)</title><rect x="437.5" y="261" width="1.8" height="15.0" fill="rgb(244,15,36)" rx="2" ry="2" />
<text  x="440.50" y="271.5" ></text>
</g>
<g >
<title>runtime.pcvalue (2 samples, 0.05%)</title><rect x="442.2" y="181" width="0.6" height="15.0" fill="rgb(240,53,33)" rx="2" ry="2" />
<text  x="445.17" y="191.5" ></text>
</g>
<g >
<title>runtime.spanOf (1 samples, 0.02%)</title><rect x="114.8" y="181" width="0.3" height="15.0" fill="rgb(254,48,13)" rx="2" ry="2" />
<text  x="117.83" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc (4 samples, 0.10%)</title><rect x="86.2" y="245" width="1.2" height="15.0" fill="rgb(243,141,18)" rx="2" ry="2" />
<text  x="89.21" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mspan).markBitsForIndex (1 samples, 0.02%)</title><rect x="448.6" y="133" width="0.3" height="15.0" fill="rgb(233,117,35)" rx="2" ry="2" />
<text  x="451.59" y="143.5" ></text>
</g>
<g >
<title>runtime.systemstack (856 samples, 21.18%)</title><rect x="908.2" y="325" width="250.0" height="15.0" fill="rgb(246,91,3)" rx="2" ry="2" />
<text  x="911.21" y="335.5" >runtime.systemstack</text>
</g>
<g >
<title>runtime.exitsyscallfast (2 samples, 0.05%)</title><rect x="114.2" y="213" width="0.6" height="15.0" fill="rgb(249,181,40)" rx="2" ry="2" />
<text  x="117.25" y="223.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (1 samples, 0.02%)</title><rect x="1159.0" y="309" width="0.3" height="15.0" fill="rgb(222,124,14)" rx="2" ry="2" />
<text  x="1162.05" y="319.5" ></text>
</g>
<g >
<title>runtime.semawakeup (24 samples, 0.59%)</title><rect x="1023.6" y="261" width="7.0" height="15.0" fill="rgb(250,224,33)" rx="2" ry="2" />
<text  x="1026.56" y="271.5" ></text>
</g>
<g >
<title>runtime.notewakeup (24 samples, 0.59%)</title><rect x="1023.6" y="277" width="7.0" height="15.0" fill="rgb(239,132,5)" rx="2" ry="2" />
<text  x="1026.56" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (1 samples, 0.02%)</title><rect x="76.6" y="149" width="0.3" height="15.0" fill="rgb(228,137,0)" rx="2" ry="2" />
<text  x="79.58" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.02%)</title><rect x="271.1" y="229" width="0.2" height="15.0" fill="rgb(244,128,13)" rx="2" ry="2" />
<text  x="274.05" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.02%)</title><rect x="79.2" y="133" width="0.3" height="15.0" fill="rgb(244,57,21)" rx="2" ry="2" />
<text  x="82.21" y="143.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.02%)</title><rect x="94.1" y="245" width="0.3" height="15.0" fill="rgb(233,37,13)" rx="2" ry="2" />
<text  x="97.10" y="255.5" ></text>
</g>
<g >
<title>runtime.procyield (4 samples, 0.10%)</title><rect x="161.6" y="229" width="1.1" height="15.0" fill="rgb(213,167,9)" rx="2" ry="2" />
<text  x="164.55" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="271.1" y="181" width="0.2" height="15.0" fill="rgb(209,67,12)" rx="2" ry="2" />
<text  x="274.05" y="191.5" ></text>
</g>
<g >
<title>runtime.gcDrain (46 samples, 1.14%)</title><rect x="439.8" y="293" width="13.5" height="15.0" fill="rgb(240,15,20)" rx="2" ry="2" />
<text  x="442.83" y="303.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*Batch).Ticker (115 samples, 2.85%)</title><rect x="62.3" y="309" width="33.6" height="15.0" fill="rgb(222,124,31)" rx="2" ry="2" />
<text  x="65.27" y="319.5" >hs..</text>
</g>
<g >
<title>runtime.lock (1 samples, 0.02%)</title><rect x="438.7" y="229" width="0.3" height="15.0" fill="rgb(206,105,3)" rx="2" ry="2" />
<text  x="441.67" y="239.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.02%)</title><rect x="20.5" y="213" width="0.3" height="15.0" fill="rgb(220,206,50)" rx="2" ry="2" />
<text  x="23.51" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (2 samples, 0.05%)</title><rect x="97.3" y="181" width="0.6" height="15.0" fill="rgb(242,198,54)" rx="2" ry="2" />
<text  x="100.31" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).removeNode (1 samples, 0.02%)</title><rect x="42.4" y="85" width="0.3" height="15.0" fill="rgb(243,81,35)" rx="2" ry="2" />
<text  x="45.41" y="95.5" ></text>
</g>
<g >
<title>runtime.newobject (36 samples, 0.89%)</title><rect x="283.9" y="293" width="10.5" height="15.0" fill="rgb(224,174,40)" rx="2" ry="2" />
<text  x="286.90" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (2 samples, 0.05%)</title><rect x="86.5" y="181" width="0.6" height="15.0" fill="rgb(218,132,5)" rx="2" ry="2" />
<text  x="89.51" y="191.5" ></text>
</g>
<g >
<title>runtime.handoff (1 samples, 0.02%)</title><rect x="440.1" y="261" width="0.3" height="15.0" fill="rgb(208,226,11)" rx="2" ry="2" />
<text  x="443.13" y="271.5" ></text>
</g>
<g >
<title>time.Now (23 samples, 0.57%)</title><rect x="423.5" y="325" width="6.7" height="15.0" fill="rgb(231,24,2)" rx="2" ry="2" />
<text  x="426.48" y="335.5" ></text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (1 samples, 0.02%)</title><rect x="437.8" y="197" width="0.3" height="15.0" fill="rgb(236,127,14)" rx="2" ry="2" />
<text  x="440.79" y="207.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*Batch).Ticker.func1.1 (1 samples, 0.02%)</title><rect x="12.0" y="277" width="0.3" height="15.0" fill="rgb(213,82,50)" rx="2" ry="2" />
<text  x="15.04" y="287.5" ></text>
</g>
<g >
<title>runtime.newdefer (1 samples, 0.02%)</title><rect x="46.5" y="293" width="0.3" height="15.0" fill="rgb(222,113,52)" rx="2" ry="2" />
<text  x="49.50" y="303.5" ></text>
</g>
<g >
<title>runtime.scanblock (2 samples, 0.05%)</title><rect x="449.5" y="245" width="0.6" height="15.0" fill="rgb(227,93,19)" rx="2" ry="2" />
<text  x="452.47" y="255.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.02%)</title><rect x="454.7" y="213" width="0.3" height="15.0" fill="rgb(217,58,6)" rx="2" ry="2" />
<text  x="457.73" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpanLocked (2 samples, 0.05%)</title><rect x="277.5" y="117" width="0.6" height="15.0" fill="rgb(215,156,35)" rx="2" ry="2" />
<text  x="280.48" y="127.5" ></text>
</g>
<g >
<title>runtime.gcStart.func2 (4 samples, 0.10%)</title><rect x="1048.4" y="309" width="1.1" height="15.0" fill="rgb(220,110,39)" rx="2" ry="2" />
<text  x="1051.38" y="319.5" ></text>
</g>
<g >
<title>runtime.notewakeup (361 samples, 8.93%)</title><rect x="1049.8" y="245" width="105.5" height="15.0" fill="rgb(242,5,8)" rx="2" ry="2" />
<text  x="1052.84" y="255.5" >runtime.note..</text>
</g>
<g >
<title>runtime.callers (1 samples, 0.02%)</title><rect x="37.7" y="213" width="0.3" height="15.0" fill="rgb(235,217,3)" rx="2" ry="2" />
<text  x="40.74" y="223.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.02%)</title><rect x="92.1" y="85" width="0.2" height="15.0" fill="rgb(223,15,48)" rx="2" ry="2" />
<text  x="95.05" y="95.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (54 samples, 1.34%)</title><rect x="1031.1" y="261" width="15.8" height="15.0" fill="rgb(240,227,43)" rx="2" ry="2" />
<text  x="1034.15" y="271.5" ></text>
</g>
<g >
<title>runtime.chansend (30 samples, 0.74%)</title><rect x="12.3" y="261" width="8.8" height="15.0" fill="rgb(240,8,25)" rx="2" ry="2" />
<text  x="15.34" y="271.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.02%)</title><rect x="454.7" y="245" width="0.3" height="15.0" fill="rgb(244,194,8)" rx="2" ry="2" />
<text  x="457.73" y="255.5" ></text>
</g>
<g >
<title>runtime.nanotime (4 samples, 0.10%)</title><rect x="162.7" y="229" width="1.2" height="15.0" fill="rgb(231,106,52)" rx="2" ry="2" />
<text  x="165.72" y="239.5" ></text>
</g>
<g >
<title>runtime.notewakeup (2 samples, 0.05%)</title><rect x="808.6" y="277" width="0.6" height="15.0" fill="rgb(226,133,51)" rx="2" ry="2" />
<text  x="811.64" y="287.5" ></text>
</g>
<g >
<title>runtime.semacreate (2 samples, 0.05%)</title><rect x="400.7" y="277" width="0.6" height="15.0" fill="rgb(226,167,54)" rx="2" ry="2" />
<text  x="403.71" y="287.5" ></text>
</g>
<g >
<title>runtime.deferreturn (2 samples, 0.05%)</title><rect x="100.2" y="277" width="0.6" height="15.0" fill="rgb(229,30,24)" rx="2" ry="2" />
<text  x="103.23" y="287.5" ></text>
</g>
<g >
<title>runtime.funcPC (1 samples, 0.02%)</title><rect x="1159.0" y="181" width="0.3" height="15.0" fill="rgb(226,199,29)" rx="2" ry="2" />
<text  x="1162.05" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (4 samples, 0.10%)</title><rect x="287.7" y="213" width="1.2" height="15.0" fill="rgb(228,77,6)" rx="2" ry="2" />
<text  x="290.70" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (2 samples, 0.05%)</title><rect x="824.4" y="213" width="0.6" height="15.0" fill="rgb(214,189,37)" rx="2" ry="2" />
<text  x="827.41" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="37.7" y="197" width="0.3" height="15.0" fill="rgb(250,154,48)" rx="2" ry="2" />
<text  x="40.74" y="207.5" ></text>
</g>
<g >
<title>hslam.com/git/x/idgenerator.GetTimestampMilli (30 samples, 0.74%)</title><rect x="144.0" y="245" width="8.8" height="15.0" fill="rgb(225,158,53)" rx="2" ry="2" />
<text  x="147.03" y="255.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.02%)</title><rect x="88.3" y="245" width="0.2" height="15.0" fill="rgb(219,225,31)" rx="2" ry="2" />
<text  x="91.26" y="255.5" ></text>
</g>
<g >
<title>runtime.lock (10 samples, 0.25%)</title><rect x="125.9" y="293" width="2.9" height="15.0" fill="rgb(205,226,7)" rx="2" ry="2" />
<text  x="128.93" y="303.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeueSudoG (2 samples, 0.05%)</title><rect x="96.7" y="309" width="0.6" height="15.0" fill="rgb(228,128,45)" rx="2" ry="2" />
<text  x="99.73" y="319.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc/pb.(*Batch).XXX_Unmarshal (6 samples, 0.15%)</title><rect x="23.1" y="261" width="1.8" height="15.0" fill="rgb(244,229,41)" rx="2" ry="2" />
<text  x="26.14" y="271.5" ></text>
</g>
<g >
<title>runtime.forEachP (2 samples, 0.05%)</title><rect x="1047.8" y="293" width="0.6" height="15.0" fill="rgb(232,135,54)" rx="2" ry="2" />
<text  x="1050.79" y="303.5" ></text>
</g>
<g >
<title>runtime.procyield (4 samples, 0.10%)</title><rect x="127.7" y="277" width="1.1" height="15.0" fill="rgb(233,160,14)" rx="2" ry="2" />
<text  x="130.68" y="287.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (3 samples, 0.07%)</title><rect x="819.7" y="293" width="0.9" height="15.0" fill="rgb(240,7,42)" rx="2" ry="2" />
<text  x="822.74" y="303.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.02%)</title><rect x="453.6" y="245" width="0.3" height="15.0" fill="rgb(218,142,1)" rx="2" ry="2" />
<text  x="456.56" y="255.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.02%)</title><rect x="41.5" y="245" width="0.3" height="15.0" fill="rgb(224,208,4)" rx="2" ry="2" />
<text  x="44.54" y="255.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (3 samples, 0.07%)</title><rect x="453.9" y="229" width="0.8" height="15.0" fill="rgb(226,31,54)" rx="2" ry="2" />
<text  x="456.85" y="239.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.02%)</title><rect x="271.9" y="261" width="0.3" height="15.0" fill="rgb(239,40,3)" rx="2" ry="2" />
<text  x="274.93" y="271.5" ></text>
</g>
<g >
<title>syscall.read (48 samples, 1.19%)</title><rect x="100.8" y="261" width="14.0" height="15.0" fill="rgb(250,68,14)" rx="2" ry="2" />
<text  x="103.81" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="271.9" y="245" width="0.3" height="15.0" fill="rgb(235,88,53)" rx="2" ry="2" />
<text  x="274.93" y="255.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Size (9 samples, 0.22%)</title><rect x="179.4" y="229" width="2.6" height="15.0" fill="rgb(220,152,7)" rx="2" ry="2" />
<text  x="182.36" y="239.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.02%)</title><rect x="842.5" y="261" width="0.3" height="15.0" fill="rgb(218,22,26)" rx="2" ry="2" />
<text  x="845.51" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).coalesce (1 samples, 0.02%)</title><rect x="438.1" y="213" width="0.3" height="15.0" fill="rgb(243,225,15)" rx="2" ry="2" />
<text  x="441.08" y="223.5" ></text>
</g>
<g >
<title>runtime.scang (11 samples, 0.27%)</title><rect x="411.8" y="181" width="3.2" height="15.0" fill="rgb(218,145,10)" rx="2" ry="2" />
<text  x="414.80" y="191.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Unmarshal (1 samples, 0.02%)</title><rect x="25.2" y="245" width="0.3" height="15.0" fill="rgb(247,118,40)" rx="2" ry="2" />
<text  x="28.18" y="255.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*marshalInfo).marshal (1 samples, 0.02%)</title><rect x="24.9" y="229" width="0.3" height="15.0" fill="rgb(222,10,29)" rx="2" ry="2" />
<text  x="27.89" y="239.5" ></text>
</g>
<g >
<title>runtime.bgsweep (12 samples, 0.30%)</title><rect x="436.3" y="341" width="3.5" height="15.0" fill="rgb(251,205,2)" rx="2" ry="2" />
<text  x="439.33" y="351.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.02%)</title><rect x="35.7" y="229" width="0.3" height="15.0" fill="rgb(246,216,8)" rx="2" ry="2" />
<text  x="38.70" y="239.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.02%)</title><rect x="37.7" y="165" width="0.3" height="15.0" fill="rgb(240,117,49)" rx="2" ry="2" />
<text  x="40.74" y="175.5" ></text>
</g>
<g >
<title>runtime.netpoll (2 samples, 0.05%)</title><rect x="1046.9" y="277" width="0.6" height="15.0" fill="rgb(216,150,16)" rx="2" ry="2" />
<text  x="1049.92" y="287.5" ></text>
</g>
<g >
<title>runtime.makeslice (6 samples, 0.15%)</title><rect x="182.3" y="245" width="1.7" height="15.0" fill="rgb(235,108,3)" rx="2" ry="2" />
<text  x="185.28" y="255.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.getMessageMarshalInfo (1 samples, 0.02%)</title><rect x="84.5" y="229" width="0.3" height="15.0" fill="rgb(208,47,51)" rx="2" ry="2" />
<text  x="87.46" y="239.5" ></text>
</g>
<g >
<title>runtime.handoffp (2 samples, 0.05%)</title><rect x="113.7" y="181" width="0.5" height="15.0" fill="rgb(245,133,25)" rx="2" ry="2" />
<text  x="116.66" y="191.5" ></text>
</g>
<g >
<title>runtime.schedule (70 samples, 1.73%)</title><rect x="822.1" y="277" width="20.4" height="15.0" fill="rgb(223,228,41)" rx="2" ry="2" />
<text  x="825.07" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (2 samples, 0.05%)</title><rect x="45.3" y="245" width="0.6" height="15.0" fill="rgb(253,179,42)" rx="2" ry="2" />
<text  x="48.33" y="255.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (5 samples, 0.12%)</title><rect x="1029.1" y="245" width="1.5" height="15.0" fill="rgb(216,155,49)" rx="2" ry="2" />
<text  x="1032.10" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).find (1 samples, 0.02%)</title><rect x="93.5" y="85" width="0.3" height="15.0" fill="rgb(217,181,50)" rx="2" ry="2" />
<text  x="96.51" y="95.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (27 samples, 0.67%)</title><rect x="411.2" y="229" width="7.9" height="15.0" fill="rgb(222,3,2)" rx="2" ry="2" />
<text  x="414.22" y="239.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (1 samples, 0.02%)</title><rect x="292.7" y="245" width="0.3" height="15.0" fill="rgb(219,108,12)" rx="2" ry="2" />
<text  x="295.66" y="255.5" ></text>
</g>
<g >
<title>runtime.scanstack (30 samples, 0.74%)</title><rect x="440.7" y="229" width="8.8" height="15.0" fill="rgb(224,201,10)" rx="2" ry="2" />
<text  x="443.71" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.02%)</title><rect x="95.6" y="261" width="0.3" height="15.0" fill="rgb(249,229,14)" rx="2" ry="2" />
<text  x="98.56" y="271.5" ></text>
</g>
<g >
<title>runtime.lock (2 samples, 0.05%)</title><rect x="359.2" y="197" width="0.6" height="15.0" fill="rgb(254,49,46)" rx="2" ry="2" />
<text  x="362.24" y="207.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.02%)</title><rect x="453.3" y="277" width="0.3" height="15.0" fill="rgb(247,191,11)" rx="2" ry="2" />
<text  x="456.27" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.02%)</title><rect x="92.1" y="117" width="0.2" height="15.0" fill="rgb(220,80,1)" rx="2" ry="2" />
<text  x="95.05" y="127.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.02%)</title><rect x="824.7" y="69" width="0.3" height="15.0" fill="rgb(241,80,31)" rx="2" ry="2" />
<text  x="827.70" y="79.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.02%)</title><rect x="94.1" y="181" width="0.3" height="15.0" fill="rgb(218,173,46)" rx="2" ry="2" />
<text  x="97.10" y="191.5" ></text>
</g>
<g >
<title>runtime.roundupsize (1 samples, 0.02%)</title><rect x="77.7" y="181" width="0.3" height="15.0" fill="rgb(228,6,43)" rx="2" ry="2" />
<text  x="80.75" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.02%)</title><rect x="409.8" y="229" width="0.2" height="15.0" fill="rgb(248,18,21)" rx="2" ry="2" />
<text  x="412.76" y="239.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*unmarshalInfo).unmarshal (6 samples, 0.15%)</title><rect x="23.1" y="229" width="1.8" height="15.0" fill="rgb(248,83,7)" rx="2" ry="2" />
<text  x="26.14" y="239.5" ></text>
</g>
<g >
<title>runtime.chanrecv2 (22 samples, 0.54%)</title><rect x="123.9" y="325" width="6.4" height="15.0" fill="rgb(218,32,32)" rx="2" ry="2" />
<text  x="126.88" y="335.5" ></text>
</g>
<g >
<title>runtime.osyield (2 samples, 0.05%)</title><rect x="1023.0" y="261" width="0.6" height="15.0" fill="rgb(210,61,23)" rx="2" ry="2" />
<text  x="1025.97" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpanLocked (1 samples, 0.02%)</title><rect x="42.4" y="117" width="0.3" height="15.0" fill="rgb(249,209,34)" rx="2" ry="2" />
<text  x="45.41" y="127.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="98.5" y="245" width="0.3" height="15.0" fill="rgb(240,4,30)" rx="2" ry="2" />
<text  x="101.48" y="255.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (23 samples, 0.57%)</title><rect x="877.6" y="277" width="6.7" height="15.0" fill="rgb(251,183,48)" rx="2" ry="2" />
<text  x="880.55" y="287.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.FuncsCodec (1 samples, 0.02%)</title><rect x="170.6" y="277" width="0.3" height="15.0" fill="rgb(248,181,9)" rx="2" ry="2" />
<text  x="173.60" y="287.5" ></text>
</g>
<g >
<title>runtime.semacquire1 (9 samples, 0.22%)</title><rect x="157.8" y="229" width="2.6" height="15.0" fill="rgb(211,140,12)" rx="2" ry="2" />
<text  x="160.76" y="239.5" ></text>
</g>
<g >
<title>runtime.findrunnable (1,177 samples, 29.13%)</title><rect x="464.9" y="293" width="343.7" height="15.0" fill="rgb(225,131,32)" rx="2" ry="2" />
<text  x="467.95" y="303.5" >runtime.findrunnable</text>
</g>
<g >
<title>runtime.osyield (95 samples, 2.35%)</title><rect x="368.6" y="277" width="27.7" height="15.0" fill="rgb(242,40,0)" rx="2" ry="2" />
<text  x="371.58" y="287.5" >r..</text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.02%)</title><rect x="359.8" y="213" width="0.3" height="15.0" fill="rgb(238,216,37)" rx="2" ry="2" />
<text  x="362.82" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.02%)</title><rect x="86.8" y="133" width="0.3" height="15.0" fill="rgb(241,178,13)" rx="2" ry="2" />
<text  x="89.80" y="143.5" ></text>
</g>
<g >
<title>runtime.goparkunlock (1 samples, 0.02%)</title><rect x="158.6" y="213" width="0.3" height="15.0" fill="rgb(248,163,1)" rx="2" ry="2" />
<text  x="161.63" y="223.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Marshal (1 samples, 0.02%)</title><rect x="24.9" y="245" width="0.3" height="15.0" fill="rgb(247,32,51)" rx="2" ry="2" />
<text  x="27.89" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.02%)</title><rect x="95.6" y="229" width="0.3" height="15.0" fill="rgb(218,26,16)" rx="2" ry="2" />
<text  x="98.56" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="97.6" y="165" width="0.3" height="15.0" fill="rgb(234,218,49)" rx="2" ry="2" />
<text  x="100.60" y="175.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.02%)</title><rect x="94.1" y="213" width="0.3" height="15.0" fill="rgb(244,49,13)" rx="2" ry="2" />
<text  x="97.10" y="223.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.05%)</title><rect x="113.7" y="213" width="0.5" height="15.0" fill="rgb(241,176,26)" rx="2" ry="2" />
<text  x="116.66" y="223.5" ></text>
</g>
<g >
<title>runtime.semasleep (814 samples, 20.14%)</title><rect x="570.9" y="245" width="237.7" height="15.0" fill="rgb(245,142,53)" rx="2" ry="2" />
<text  x="573.95" y="255.5" >runtime.semasleep</text>
</g>
<g >
<title>runtime.ready (9 samples, 0.22%)</title><rect x="17.9" y="181" width="2.6" height="15.0" fill="rgb(235,137,30)" rx="2" ry="2" />
<text  x="20.88" y="191.5" ></text>
</g>
<g >
<title>runtime.casgstatus (3 samples, 0.07%)</title><rect x="459.1" y="309" width="0.9" height="15.0" fill="rgb(207,38,32)" rx="2" ry="2" />
<text  x="462.11" y="319.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc/pb.(*Request).XXX_Marshal (20 samples, 0.49%)</title><rect x="26.4" y="261" width="5.8" height="15.0" fill="rgb(208,191,4)" rx="2" ry="2" />
<text  x="29.35" y="271.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Marshal (5 samples, 0.12%)</title><rect x="78.0" y="277" width="1.5" height="15.0" fill="rgb(211,110,45)" rx="2" ry="2" />
<text  x="81.04" y="287.5" ></text>
</g>
<g >
<title>net.(*netFD).Write (28 samples, 0.69%)</title><rect x="115.1" y="309" width="8.2" height="15.0" fill="rgb(235,100,2)" rx="2" ry="2" />
<text  x="118.12" y="319.5" ></text>
</g>
<g >
<title>runtime.usleep (12 samples, 0.30%)</title><rect x="54.4" y="261" width="3.5" height="15.0" fill="rgb(241,55,20)" rx="2" ry="2" />
<text  x="57.39" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (2 samples, 0.05%)</title><rect x="93.5" y="245" width="0.6" height="15.0" fill="rgb(216,7,38)" rx="2" ry="2" />
<text  x="96.51" y="255.5" ></text>
</g>
<g >
<title>runtime.startm (28 samples, 0.69%)</title><rect x="811.6" y="261" width="8.1" height="15.0" fill="rgb(254,176,5)" rx="2" ry="2" />
<text  x="814.56" y="271.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (28 samples, 0.69%)</title><rect x="115.1" y="293" width="8.2" height="15.0" fill="rgb(205,227,14)" rx="2" ry="2" />
<text  x="118.12" y="303.5" ></text>
</g>
<g >
<title>runtime.wbBufFlush1 (6 samples, 0.15%)</title><rect x="417.3" y="181" width="1.8" height="15.0" fill="rgb(230,223,11)" rx="2" ry="2" />
<text  x="420.35" y="191.5" ></text>
</g>
<g >
<title>runtime.chansend1 (211 samples, 5.22%)</title><rect x="203.9" y="293" width="61.6" height="15.0" fill="rgb(248,48,39)" rx="2" ry="2" />
<text  x="206.89" y="303.5" >runtim..</text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*marshalInfo).marshal (23 samples, 0.57%)</title><rect x="172.6" y="213" width="6.8" height="15.0" fill="rgb(251,217,16)" rx="2" ry="2" />
<text  x="175.65" y="223.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Unmarshal (6 samples, 0.15%)</title><rect x="23.1" y="277" width="1.8" height="15.0" fill="rgb(227,72,3)" rx="2" ry="2" />
<text  x="26.14" y="287.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (1 samples, 0.02%)</title><rect x="168.6" y="165" width="0.3" height="15.0" fill="rgb(254,31,24)" rx="2" ry="2" />
<text  x="171.56" y="175.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc/pb.(*Request).XXX_Size (4 samples, 0.10%)</title><rect x="84.8" y="261" width="1.1" height="15.0" fill="rgb(249,107,21)" rx="2" ry="2" />
<text  x="87.75" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.02%)</title><rect x="48.3" y="277" width="0.2" height="15.0" fill="rgb(237,105,19)" rx="2" ry="2" />
<text  x="51.25" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.02%)</title><rect x="114.8" y="293" width="0.3" height="15.0" fill="rgb(250,8,10)" rx="2" ry="2" />
<text  x="117.83" y="303.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Marshal (27 samples, 0.67%)</title><rect x="171.5" y="229" width="7.9" height="15.0" fill="rgb(250,27,36)" rx="2" ry="2" />
<text  x="174.48" y="239.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.02%)</title><rect x="1049.5" y="277" width="0.3" height="15.0" fill="rgb(220,200,40)" rx="2" ry="2" />
<text  x="1052.54" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (2 samples, 0.05%)</title><rect x="42.4" y="133" width="0.6" height="15.0" fill="rgb(254,142,32)" rx="2" ry="2" />
<text  x="45.41" y="143.5" ></text>
</g>
<g >
<title>net.(*conn).Write (28 samples, 0.69%)</title><rect x="115.1" y="325" width="8.2" height="15.0" fill="rgb(254,40,47)" rx="2" ry="2" />
<text  x="118.12" y="335.5" ></text>
</g>
<g >
<title>runtime.schedule (1,236 samples, 30.59%)</title><rect x="460.0" y="309" width="360.9" height="15.0" fill="rgb(215,122,2)" rx="2" ry="2" />
<text  x="462.98" y="319.5" >runtime.schedule</text>
</g>
<g >
<title>runtime.readyWithTime (1 samples, 0.02%)</title><rect x="168.6" y="213" width="0.3" height="15.0" fill="rgb(227,91,50)" rx="2" ry="2" />
<text  x="171.56" y="223.5" ></text>
</g>
<g >
<title>runtime.casgstatus (3 samples, 0.07%)</title><rect x="18.5" y="165" width="0.8" height="15.0" fill="rgb(225,138,7)" rx="2" ry="2" />
<text  x="21.47" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).insert (2 samples, 0.05%)</title><rect x="437.5" y="213" width="0.6" height="15.0" fill="rgb(251,154,16)" rx="2" ry="2" />
<text  x="440.50" y="223.5" ></text>
</g>
<g >
<title>runtime.newobject (7 samples, 0.17%)</title><rect x="92.9" y="277" width="2.1" height="15.0" fill="rgb(220,97,35)" rx="2" ry="2" />
<text  x="95.93" y="287.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.02%)</title><rect x="458.5" y="245" width="0.3" height="15.0" fill="rgb(228,199,28)" rx="2" ry="2" />
<text  x="461.52" y="255.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (3 samples, 0.07%)</title><rect x="819.7" y="245" width="0.9" height="15.0" fill="rgb(208,182,45)" rx="2" ry="2" />
<text  x="822.74" y="255.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.02%)</title><rect x="422.9" y="293" width="0.3" height="15.0" fill="rgb(224,162,5)" rx="2" ry="2" />
<text  x="425.90" y="303.5" ></text>
</g>
<g >
<title>runtime.(*stackScanState).addObject (2 samples, 0.05%)</title><rect x="412.4" y="101" width="0.6" height="15.0" fill="rgb(247,194,6)" rx="2" ry="2" />
<text  x="415.39" y="111.5" ></text>
</g>
<g >
<title>runtime.nanotime_trampoline (1 samples, 0.02%)</title><rect x="435.5" y="325" width="0.2" height="15.0" fill="rgb(206,156,38)" rx="2" ry="2" />
<text  x="438.45" y="335.5" ></text>
</g>
<g >
<title>runtime.notetsleep (37 samples, 0.92%)</title><rect x="873.5" y="293" width="10.8" height="15.0" fill="rgb(248,175,3)" rx="2" ry="2" />
<text  x="876.46" y="303.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (1 samples, 0.02%)</title><rect x="37.7" y="181" width="0.3" height="15.0" fill="rgb(232,70,31)" rx="2" ry="2" />
<text  x="40.74" y="191.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (4 samples, 0.10%)</title><rect x="201.6" y="213" width="1.1" height="15.0" fill="rgb(214,118,5)" rx="2" ry="2" />
<text  x="204.56" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mspan).sweep (10 samples, 0.25%)</title><rect x="436.9" y="309" width="2.9" height="15.0" fill="rgb(226,134,51)" rx="2" ry="2" />
<text  x="439.91" y="319.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (2 samples, 0.05%)</title><rect x="33.4" y="229" width="0.5" height="15.0" fill="rgb(251,197,49)" rx="2" ry="2" />
<text  x="36.36" y="239.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (8 samples, 0.20%)</title><rect x="412.4" y="117" width="2.3" height="15.0" fill="rgb(237,45,0)" rx="2" ry="2" />
<text  x="415.39" y="127.5" ></text>
</g>
<g >
<title>runtime.getStackMap (1 samples, 0.02%)</title><rect x="414.7" y="101" width="0.3" height="15.0" fill="rgb(210,178,20)" rx="2" ry="2" />
<text  x="417.72" y="111.5" ></text>
</g>
<g >
<title>runtime.unlock (2 samples, 0.05%)</title><rect x="70.7" y="213" width="0.6" height="15.0" fill="rgb(214,129,8)" rx="2" ry="2" />
<text  x="73.74" y="223.5" ></text>
</g>
<g >
<title>runtime.goready (1 samples, 0.02%)</title><rect x="168.6" y="197" width="0.3" height="15.0" fill="rgb(211,202,46)" rx="2" ry="2" />
<text  x="171.56" y="207.5" ></text>
</g>
<g >
<title>runtime.gcstopm (36 samples, 0.89%)</title><rect x="822.1" y="261" width="10.5" height="15.0" fill="rgb(211,85,43)" rx="2" ry="2" />
<text  x="825.07" y="271.5" ></text>
</g>
<g >
<title>runtime.nanotime (102 samples, 2.52%)</title><rect x="843.7" y="293" width="29.8" height="15.0" fill="rgb(217,180,28)" rx="2" ry="2" />
<text  x="846.68" y="303.5" >ru..</text>
</g>
<g >
<title>runtime.lock (1 samples, 0.02%)</title><rect x="409.8" y="165" width="0.2" height="15.0" fill="rgb(240,227,14)" rx="2" ry="2" />
<text  x="412.76" y="175.5" ></text>
</g>
<g >
<title>time.now (1 samples, 0.02%)</title><rect x="95.3" y="245" width="0.3" height="15.0" fill="rgb(220,225,19)" rx="2" ry="2" />
<text  x="98.27" y="255.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*TCPConn).handle.func1 (5 samples, 0.12%)</title><rect x="98.5" y="341" width="1.4" height="15.0" fill="rgb(216,69,14)" rx="2" ry="2" />
<text  x="101.48" y="351.5" ></text>
</g>
<g >
<title>runtime.deferproc (6 samples, 0.15%)</title><rect x="152.8" y="261" width="1.7" height="15.0" fill="rgb(230,5,2)" rx="2" ry="2" />
<text  x="155.79" y="271.5" ></text>
</g>
<g >
<title>runtime.getitab (3 samples, 0.07%)</title><rect x="203.0" y="245" width="0.9" height="15.0" fill="rgb(248,24,3)" rx="2" ry="2" />
<text  x="206.02" y="255.5" ></text>
</g>
<g >
<title>runtime.notetsleepg (107 samples, 2.65%)</title><rect x="1158.8" y="325" width="31.2" height="15.0" fill="rgb(220,72,1)" rx="2" ry="2" />
<text  x="1161.76" y="335.5" >ru..</text>
</g>
<g >
<title>runtime.callers.func1 (1 samples, 0.02%)</title><rect x="283.3" y="181" width="0.3" height="15.0" fill="rgb(232,141,30)" rx="2" ry="2" />
<text  x="286.32" y="191.5" ></text>
</g>
<g >
<title>math/rand.(*Rand).Int63 (41 samples, 1.01%)</title><rect x="351.9" y="277" width="12.0" height="15.0" fill="rgb(253,190,15)" rx="2" ry="2" />
<text  x="354.94" y="287.5" ></text>
</g>
<g >
<title>runtime.wakep (361 samples, 8.93%)</title><rect x="1049.8" y="277" width="105.5" height="15.0" fill="rgb(206,117,2)" rx="2" ry="2" />
<text  x="1052.84" y="287.5" >runtime.wakep</text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Unmarshal (51 samples, 1.26%)</title><rect x="187.8" y="261" width="14.9" height="15.0" fill="rgb(210,36,19)" rx="2" ry="2" />
<text  x="190.83" y="271.5" ></text>
</g>
<g >
<title>sync.runtime_doSpin (1 samples, 0.02%)</title><rect x="359.8" y="229" width="0.3" height="15.0" fill="rgb(223,58,39)" rx="2" ry="2" />
<text  x="362.82" y="239.5" ></text>
</g>
<g >
<title>runtime.funcdata (1 samples, 0.02%)</title><rect x="413.0" y="85" width="0.3" height="15.0" fill="rgb(216,100,34)" rx="2" ry="2" />
<text  x="415.97" y="95.5" ></text>
</g>
<g >
<title>runtime.notesleep (3 samples, 0.07%)</title><rect x="457.6" y="245" width="0.9" height="15.0" fill="rgb(212,59,21)" rx="2" ry="2" />
<text  x="460.65" y="255.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (6 samples, 0.15%)</title><rect x="43.0" y="245" width="1.7" height="15.0" fill="rgb(254,188,52)" rx="2" ry="2" />
<text  x="46.00" y="255.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*Batch).run (120 samples, 2.97%)</title><rect x="62.3" y="341" width="35.0" height="15.0" fill="rgb(216,46,21)" rx="2" ry="2" />
<text  x="65.27" y="351.5" >hs..</text>
</g>
<g >
<title>runtime.(*mcache).refill (2 samples, 0.05%)</title><rect x="93.5" y="229" width="0.6" height="15.0" fill="rgb(213,36,49)" rx="2" ry="2" />
<text  x="96.51" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (2 samples, 0.05%)</title><rect x="288.3" y="149" width="0.6" height="15.0" fill="rgb(236,101,16)" rx="2" ry="2" />
<text  x="291.28" y="159.5" ></text>
</g>
<g >
<title>runtime.pcvalue (5 samples, 0.12%)</title><rect x="413.3" y="69" width="1.4" height="15.0" fill="rgb(219,97,29)" rx="2" ry="2" />
<text  x="416.26" y="79.5" ></text>
</g>
<g >
<title>runtime.step (1 samples, 0.02%)</title><rect x="412.1" y="101" width="0.3" height="15.0" fill="rgb(213,159,18)" rx="2" ry="2" />
<text  x="415.09" y="111.5" ></text>
</g>
<g >
<title>runtime.usleep (5 samples, 0.12%)</title><rect x="126.2" y="261" width="1.5" height="15.0" fill="rgb(220,209,1)" rx="2" ry="2" />
<text  x="129.22" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan.func1 (1 samples, 0.02%)</title><rect x="1047.8" y="165" width="0.3" height="15.0" fill="rgb(213,148,31)" rx="2" ry="2" />
<text  x="1050.79" y="175.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.02%)</title><rect x="114.8" y="197" width="0.3" height="15.0" fill="rgb(252,112,38)" rx="2" ry="2" />
<text  x="117.83" y="207.5" ></text>
</g>
<g >
<title>hslam.com/git/x/idgenerator.(*IDGen).GenUniqueIDInt64 (101 samples, 2.50%)</title><rect x="139.4" y="293" width="29.5" height="15.0" fill="rgb(229,170,49)" rx="2" ry="2" />
<text  x="142.36" y="303.5" >hs..</text>
</g>
<g >
<title>sync.runtime_doSpin (4 samples, 0.10%)</title><rect x="161.6" y="245" width="1.1" height="15.0" fill="rgb(217,224,34)" rx="2" ry="2" />
<text  x="164.55" y="255.5" ></text>
</g>
<g >
<title>runtime.chansend1 (141 samples, 3.49%)</title><rect x="363.9" y="325" width="41.2" height="15.0" fill="rgb(242,181,9)" rx="2" ry="2" />
<text  x="366.91" y="335.5" >run..</text>
</g>
<g >
<title>main.work (1,027 samples, 25.41%)</title><rect x="130.3" y="341" width="299.9" height="15.0" fill="rgb(246,137,13)" rx="2" ry="2" />
<text  x="133.31" y="351.5" >main.work</text>
</g>
<g >
<title>runtime.chanrecv (37 samples, 0.92%)</title><rect x="51.5" y="309" width="10.8" height="15.0" fill="rgb(237,178,2)" rx="2" ry="2" />
<text  x="54.46" y="319.5" ></text>
</g>
<g >
<title>runtime.getitab (2 samples, 0.05%)</title><rect x="185.2" y="245" width="0.6" height="15.0" fill="rgb(243,33,44)" rx="2" ry="2" />
<text  x="188.20" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.02%)</title><rect x="48.3" y="213" width="0.2" height="15.0" fill="rgb(233,66,50)" rx="2" ry="2" />
<text  x="51.25" y="223.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (1 samples, 0.02%)</title><rect x="37.7" y="229" width="0.3" height="15.0" fill="rgb(205,226,53)" rx="2" ry="2" />
<text  x="40.74" y="239.5" ></text>
</g>
<g >
<title>runtime.chanrecv2 (38 samples, 0.94%)</title><rect x="51.2" y="325" width="11.1" height="15.0" fill="rgb(217,158,48)" rx="2" ry="2" />
<text  x="54.17" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (2 samples, 0.05%)</title><rect x="86.5" y="213" width="0.6" height="15.0" fill="rgb(252,136,9)" rx="2" ry="2" />
<text  x="89.51" y="223.5" ></text>
</g>
<g >
<title>runtime.asmcgocall (1 samples, 0.02%)</title><rect x="95.3" y="197" width="0.3" height="15.0" fill="rgb(228,109,25)" rx="2" ry="2" />
<text  x="98.27" y="207.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.02%)</title><rect x="423.2" y="293" width="0.3" height="15.0" fill="rgb(243,105,20)" rx="2" ry="2" />
<text  x="426.19" y="303.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.02%)</title><rect x="453.3" y="261" width="0.3" height="15.0" fill="rgb(235,65,1)" rx="2" ry="2" />
<text  x="456.27" y="271.5" ></text>
</g>
<g >
<title>runtime.deferreturn (3 samples, 0.07%)</title><rect x="75.1" y="277" width="0.9" height="15.0" fill="rgb(206,219,27)" rx="2" ry="2" />
<text  x="78.12" y="287.5" ></text>
</g>
<g >
<title>runtime.send (18 samples, 0.45%)</title><rect x="15.8" y="245" width="5.3" height="15.0" fill="rgb(254,192,4)" rx="2" ry="2" />
<text  x="18.84" y="255.5" ></text>
</g>
<g >
<title>runtime.stopTheWorldWithSema (10 samples, 0.25%)</title><rect x="1155.3" y="309" width="2.9" height="15.0" fill="rgb(221,229,11)" rx="2" ry="2" />
<text  x="1158.25" y="319.5" ></text>
</g>
<g >
<title>runtime.semawakeup (2 samples, 0.05%)</title><rect x="1030.6" y="261" width="0.5" height="15.0" fill="rgb(216,85,38)" rx="2" ry="2" />
<text  x="1033.56" y="271.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (2 samples, 0.05%)</title><rect x="94.4" y="245" width="0.6" height="15.0" fill="rgb(230,171,35)" rx="2" ry="2" />
<text  x="97.39" y="255.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Marshal (18 samples, 0.45%)</title><rect x="26.9" y="245" width="5.3" height="15.0" fill="rgb(223,87,33)" rx="2" ry="2" />
<text  x="29.94" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan.func1 (2 samples, 0.05%)</title><rect x="824.4" y="117" width="0.6" height="15.0" fill="rgb(249,21,47)" rx="2" ry="2" />
<text  x="827.41" y="127.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.unmarshalBytesSlice (5 samples, 0.12%)</title><rect x="23.4" y="213" width="1.5" height="15.0" fill="rgb(248,189,39)" rx="2" ry="2" />
<text  x="26.43" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (2 samples, 0.05%)</title><rect x="824.4" y="133" width="0.6" height="15.0" fill="rgb(249,66,45)" rx="2" ry="2" />
<text  x="827.41" y="143.5" ></text>
</g>
<g >
<title>runtime.lock (4 samples, 0.10%)</title><rect x="14.7" y="245" width="1.1" height="15.0" fill="rgb(229,122,39)" rx="2" ry="2" />
<text  x="17.67" y="255.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (2 samples, 0.05%)</title><rect x="45.9" y="261" width="0.6" height="15.0" fill="rgb(207,101,54)" rx="2" ry="2" />
<text  x="48.92" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (2 samples, 0.05%)</title><rect x="97.3" y="229" width="0.6" height="15.0" fill="rgb(230,48,8)" rx="2" ry="2" />
<text  x="100.31" y="239.5" ></text>
</g>
<g >
<title>runtime.semasleep (26 samples, 0.64%)</title><rect x="825.0" y="213" width="7.6" height="15.0" fill="rgb(213,173,4)" rx="2" ry="2" />
<text  x="827.99" y="223.5" ></text>
</g>
<g >
<title>runtime.newdefer (5 samples, 0.12%)</title><rect x="342.3" y="293" width="1.5" height="15.0" fill="rgb(205,2,43)" rx="2" ry="2" />
<text  x="345.30" y="303.5" ></text>
</g>
<g >
<title>runtime.ready (1 samples, 0.02%)</title><rect x="261.7" y="197" width="0.3" height="15.0" fill="rgb(233,152,0)" rx="2" ry="2" />
<text  x="264.71" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.02%)</title><rect x="409.8" y="197" width="0.2" height="15.0" fill="rgb(233,41,17)" rx="2" ry="2" />
<text  x="412.76" y="207.5" ></text>
</g>
<g >
<title>runtime.gcParkAssist (1 samples, 0.02%)</title><rect x="410.6" y="277" width="0.3" height="15.0" fill="rgb(206,143,28)" rx="2" ry="2" />
<text  x="413.63" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.05%)</title><rect x="97.3" y="261" width="0.6" height="15.0" fill="rgb(218,197,49)" rx="2" ry="2" />
<text  x="100.31" y="271.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.FuncsCodec (2 samples, 0.05%)</title><rect x="187.2" y="277" width="0.6" height="15.0" fill="rgb(241,116,31)" rx="2" ry="2" />
<text  x="190.25" y="287.5" ></text>
</g>
<g >
<title>hslam.com/git/x/idgenerator.GetTimeByStep (7 samples, 0.17%)</title><rect x="142.0" y="245" width="2.0" height="15.0" fill="rgb(245,132,32)" rx="2" ry="2" />
<text  x="144.99" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (1 samples, 0.02%)</title><rect x="37.2" y="229" width="0.2" height="15.0" fill="rgb(216,132,33)" rx="2" ry="2" />
<text  x="40.16" y="239.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.unmarshalBytesSlice (5 samples, 0.12%)</title><rect x="76.6" y="213" width="1.4" height="15.0" fill="rgb(223,171,42)" rx="2" ry="2" />
<text  x="79.58" y="223.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (13 samples, 0.32%)</title><rect x="443.9" y="149" width="3.8" height="15.0" fill="rgb(207,221,38)" rx="2" ry="2" />
<text  x="446.92" y="159.5" ></text>
</g>
<g >
<title>runtime.usleep (95 samples, 2.35%)</title><rect x="368.6" y="261" width="27.7" height="15.0" fill="rgb(207,52,5)" rx="2" ry="2" />
<text  x="371.58" y="271.5" >r..</text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.02%)</title><rect x="454.7" y="277" width="0.3" height="15.0" fill="rgb(207,66,6)" rx="2" ry="2" />
<text  x="457.73" y="287.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*marshalInfo).marshal (16 samples, 0.40%)</title><rect x="27.5" y="229" width="4.7" height="15.0" fill="rgb(206,6,5)" rx="2" ry="2" />
<text  x="30.52" y="239.5" ></text>
</g>
<g >
<title>runtime.semasleep (8 samples, 0.20%)</title><rect x="809.2" y="245" width="2.4" height="15.0" fill="rgb(231,150,51)" rx="2" ry="2" />
<text  x="812.22" y="255.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (2 samples, 0.05%)</title><rect x="449.5" y="261" width="0.6" height="15.0" fill="rgb(250,185,23)" rx="2" ry="2" />
<text  x="452.47" y="271.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (11 samples, 0.27%)</title><rect x="419.1" y="293" width="3.2" height="15.0" fill="rgb(207,77,5)" rx="2" ry="2" />
<text  x="422.10" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).freeSpan (1 samples, 0.02%)</title><rect x="1047.8" y="197" width="0.3" height="15.0" fill="rgb(207,52,38)" rx="2" ry="2" />
<text  x="1050.79" y="207.5" ></text>
</g>
<g >
<title>runtime.usleep (81 samples, 2.00%)</title><rect x="884.6" y="293" width="23.6" height="15.0" fill="rgb(241,216,44)" rx="2" ry="2" />
<text  x="887.56" y="303.5" >r..</text>
</g>
<g >
<title>runtime.newobject (63 samples, 1.56%)</title><rect x="405.1" y="325" width="18.4" height="15.0" fill="rgb(254,165,18)" rx="2" ry="2" />
<text  x="408.09" y="335.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*Batch).run.func2 (118 samples, 2.92%)</title><rect x="62.3" y="325" width="34.4" height="15.0" fill="rgb(243,125,21)" rx="2" ry="2" />
<text  x="65.27" y="335.5" >hs..</text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="93.5" y="165" width="0.3" height="15.0" fill="rgb(252,104,21)" rx="2" ry="2" />
<text  x="96.51" y="175.5" ></text>
</g>
<g >
<title>sync.runtime_nanotime (1 samples, 0.02%)</title><rect x="50.3" y="293" width="0.3" height="15.0" fill="rgb(222,77,10)" rx="2" ry="2" />
<text  x="53.30" y="303.5" ></text>
</g>
<g >
<title>runtime.acquireSudog (1 samples, 0.02%)</title><rect x="99.6" y="309" width="0.3" height="15.0" fill="rgb(253,178,40)" rx="2" ry="2" />
<text  x="102.65" y="319.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*marshalInfo).size (7 samples, 0.17%)</title><rect x="179.9" y="213" width="2.1" height="15.0" fill="rgb(216,147,33)" rx="2" ry="2" />
<text  x="182.95" y="223.5" ></text>
</g>
<g >
<title>time.now (22 samples, 0.54%)</title><rect x="423.8" y="309" width="6.4" height="15.0" fill="rgb(250,21,44)" rx="2" ry="2" />
<text  x="426.77" y="319.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*marshalInfo).marshal (11 samples, 0.27%)</title><rect x="81.2" y="229" width="3.3" height="15.0" fill="rgb(234,121,25)" rx="2" ry="2" />
<text  x="84.25" y="239.5" ></text>
</g>
<g >
<title>runtime.findObject (2 samples, 0.05%)</title><rect x="448.0" y="149" width="0.6" height="15.0" fill="rgb(211,127,34)" rx="2" ry="2" />
<text  x="451.01" y="159.5" ></text>
</g>
<g >
<title>runtime.netpoll (3 samples, 0.07%)</title><rect x="1048.4" y="277" width="0.9" height="15.0" fill="rgb(252,227,6)" rx="2" ry="2" />
<text  x="1051.38" y="287.5" ></text>
</g>
<g >
<title>runtime.retake (1 samples, 0.02%)</title><rect x="884.3" y="293" width="0.3" height="15.0" fill="rgb(218,39,49)" rx="2" ry="2" />
<text  x="887.27" y="303.5" ></text>
</g>
<g >
<title>runtime.mallocgc (10 samples, 0.25%)</title><rect x="42.1" y="261" width="2.9" height="15.0" fill="rgb(228,77,38)" rx="2" ry="2" />
<text  x="45.12" y="271.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Marshal (25 samples, 0.62%)</title><rect x="80.1" y="277" width="7.3" height="15.0" fill="rgb(220,109,14)" rx="2" ry="2" />
<text  x="83.08" y="287.5" ></text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.02%)</title><rect x="457.4" y="261" width="0.2" height="15.0" fill="rgb(254,59,24)" rx="2" ry="2" />
<text  x="460.35" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpanLocked (1 samples, 0.02%)</title><rect x="79.2" y="101" width="0.3" height="15.0" fill="rgb(224,81,6)" rx="2" ry="2" />
<text  x="82.21" y="111.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Size (4 samples, 0.10%)</title><rect x="84.8" y="245" width="1.1" height="15.0" fill="rgb(249,19,10)" rx="2" ry="2" />
<text  x="87.75" y="255.5" ></text>
</g>
<g >
<title>runtime.startm (393 samples, 9.73%)</title><rect x="908.2" y="277" width="114.8" height="15.0" fill="rgb(244,208,40)" rx="2" ry="2" />
<text  x="911.21" y="287.5" >runtime.startm</text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.02%)</title><rect x="429.9" y="277" width="0.3" height="15.0" fill="rgb(231,119,11)" rx="2" ry="2" />
<text  x="432.91" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (3 samples, 0.07%)</title><rect x="288.0" y="197" width="0.9" height="15.0" fill="rgb(232,105,6)" rx="2" ry="2" />
<text  x="290.99" y="207.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.ProtoCodec.Decode (55 samples, 1.36%)</title><rect x="187.8" y="277" width="16.1" height="15.0" fill="rgb(248,145,25)" rx="2" ry="2" />
<text  x="190.83" y="287.5" ></text>
</g>
<g >
<title>runtime.nanotime (2 samples, 0.05%)</title><rect x="1158.2" y="325" width="0.6" height="15.0" fill="rgb(237,195,34)" rx="2" ry="2" />
<text  x="1161.17" y="335.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.02%)</title><rect x="329.2" y="261" width="0.3" height="15.0" fill="rgb(218,34,13)" rx="2" ry="2" />
<text  x="332.16" y="271.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.02%)</title><rect x="25.2" y="197" width="0.3" height="15.0" fill="rgb(245,162,5)" rx="2" ry="2" />
<text  x="28.18" y="207.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc/pb.(*Batch).XXX_Unmarshal (5 samples, 0.12%)</title><rect x="76.6" y="261" width="1.4" height="15.0" fill="rgb(228,73,29)" rx="2" ry="2" />
<text  x="79.58" y="271.5" ></text>
</g>
<g >
<title>runtime.runqput (1 samples, 0.02%)</title><rect x="73.9" y="165" width="0.3" height="15.0" fill="rgb(229,212,31)" rx="2" ry="2" />
<text  x="76.95" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.02%)</title><rect x="97.6" y="149" width="0.3" height="15.0" fill="rgb(242,179,1)" rx="2" ry="2" />
<text  x="100.60" y="159.5" ></text>
</g>
<g >
<title>runtime.(*guintptr).cas (1 samples, 0.02%)</title><rect x="98.5" y="181" width="0.3" height="15.0" fill="rgb(226,61,14)" rx="2" ry="2" />
<text  x="101.48" y="191.5" ></text>
</g>
<g >
<title>runtime.stopm (5 samples, 0.12%)</title><rect x="455.0" y="309" width="1.5" height="15.0" fill="rgb(235,196,27)" rx="2" ry="2" />
<text  x="458.02" y="319.5" ></text>
</g>
<g >
<title>runtime.gorecover (1 samples, 0.02%)</title><rect x="12.0" y="261" width="0.3" height="15.0" fill="rgb(252,21,50)" rx="2" ry="2" />
<text  x="15.04" y="271.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*unmarshalInfo).unmarshal (9 samples, 0.22%)</title><rect x="90.0" y="229" width="2.6" height="15.0" fill="rgb(247,162,8)" rx="2" ry="2" />
<text  x="93.01" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (2 samples, 0.05%)</title><rect x="97.3" y="213" width="0.6" height="15.0" fill="rgb(224,157,25)" rx="2" ry="2" />
<text  x="100.31" y="223.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.02%)</title><rect x="410.3" y="293" width="0.3" height="15.0" fill="rgb(237,113,36)" rx="2" ry="2" />
<text  x="413.34" y="303.5" ></text>
</g>
<g >
<title>runtime.freedefer (4 samples, 0.10%)</title><rect x="47.1" y="293" width="1.2" height="15.0" fill="rgb(225,86,0)" rx="2" ry="2" />
<text  x="50.08" y="303.5" ></text>
</g>
<g >
<title>runtime.send (17 samples, 0.42%)</title><rect x="69.9" y="245" width="4.9" height="15.0" fill="rgb(214,48,36)" rx="2" ry="2" />
<text  x="72.86" y="255.5" ></text>
</g>
<g >
<title>runtime.chansend (30 samples, 0.74%)</title><rect x="66.1" y="261" width="8.7" height="15.0" fill="rgb(245,170,21)" rx="2" ry="2" />
<text  x="69.07" y="271.5" ></text>
</g>
<g >
<title>runtime.typeBitsBulkBarrier (1 samples, 0.02%)</title><rect x="20.8" y="213" width="0.3" height="15.0" fill="rgb(252,156,0)" rx="2" ry="2" />
<text  x="23.80" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpanLocked (1 samples, 0.02%)</title><rect x="97.6" y="117" width="0.3" height="15.0" fill="rgb(212,76,54)" rx="2" ry="2" />
<text  x="100.60" y="127.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.02%)</title><rect x="114.0" y="149" width="0.2" height="15.0" fill="rgb(219,69,12)" rx="2" ry="2" />
<text  x="116.95" y="159.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (1 samples, 0.02%)</title><rect x="1159.0" y="293" width="0.3" height="15.0" fill="rgb(220,221,8)" rx="2" ry="2" />
<text  x="1162.05" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.02%)</title><rect x="45.6" y="165" width="0.3" height="15.0" fill="rgb(244,125,2)" rx="2" ry="2" />
<text  x="48.62" y="175.5" ></text>
</g>
<g >
<title>runtime.makeslice (2 samples, 0.05%)</title><rect x="97.3" y="277" width="0.6" height="15.0" fill="rgb(237,193,38)" rx="2" ry="2" />
<text  x="100.31" y="287.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.02%)</title><rect x="79.2" y="261" width="0.3" height="15.0" fill="rgb(241,70,21)" rx="2" ry="2" />
<text  x="82.21" y="271.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (2 samples, 0.05%)</title><rect x="1047.8" y="309" width="0.6" height="15.0" fill="rgb(240,207,47)" rx="2" ry="2" />
<text  x="1050.79" y="319.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.02%)</title><rect x="114.8" y="261" width="0.3" height="15.0" fill="rgb(251,208,42)" rx="2" ry="2" />
<text  x="117.83" y="271.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (28 samples, 0.69%)</title><rect x="155.7" y="261" width="8.2" height="15.0" fill="rgb(244,144,20)" rx="2" ry="2" />
<text  x="158.71" y="271.5" ></text>
</g>
<g >
<title>runtime.libcCall (4 samples, 0.10%)</title><rect x="151.6" y="181" width="1.2" height="15.0" fill="rgb(208,144,42)" rx="2" ry="2" />
<text  x="154.62" y="191.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (5 samples, 0.12%)</title><rect x="281.3" y="245" width="1.4" height="15.0" fill="rgb(217,26,33)" rx="2" ry="2" />
<text  x="284.27" y="255.5" ></text>
</g>
<g >
<title>runtime.acquirep (1 samples, 0.02%)</title><rect x="467.3" y="277" width="0.3" height="15.0" fill="rgb(237,208,40)" rx="2" ry="2" />
<text  x="470.28" y="287.5" ></text>
</g>
<g >
<title>runtime.deferproc (1 samples, 0.02%)</title><rect x="46.5" y="309" width="0.3" height="15.0" fill="rgb(213,169,11)" rx="2" ry="2" />
<text  x="49.50" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (1 samples, 0.02%)</title><rect x="824.4" y="101" width="0.3" height="15.0" fill="rgb(228,103,52)" rx="2" ry="2" />
<text  x="827.41" y="111.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (8 samples, 0.20%)</title><rect x="822.1" y="213" width="2.3" height="15.0" fill="rgb(212,163,31)" rx="2" ry="2" />
<text  x="825.07" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (8 samples, 0.20%)</title><rect x="33.9" y="245" width="2.4" height="15.0" fill="rgb(239,57,40)" rx="2" ry="2" />
<text  x="36.94" y="255.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.unmarshalBytesValue (6 samples, 0.15%)</title><rect x="38.9" y="213" width="1.8" height="15.0" fill="rgb(216,177,31)" rx="2" ry="2" />
<text  x="41.91" y="223.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (362 samples, 8.96%)</title><rect x="1049.5" y="309" width="105.8" height="15.0" fill="rgb(217,103,17)" rx="2" ry="2" />
<text  x="1052.54" y="319.5" >runtime.gore..</text>
</g>
<g >
<title>github.com/golang/protobuf/proto.unmarshalBytesValue (1 samples, 0.02%)</title><rect x="25.2" y="213" width="0.3" height="15.0" fill="rgb(244,10,35)" rx="2" ry="2" />
<text  x="28.18" y="223.5" ></text>
</g>
<g >
<title>runtime.goready (1 samples, 0.02%)</title><rect x="261.7" y="245" width="0.3" height="15.0" fill="rgb(234,187,54)" rx="2" ry="2" />
<text  x="264.71" y="255.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*Request).Encode (43 samples, 1.06%)</title><rect x="25.5" y="293" width="12.5" height="15.0" fill="rgb(231,128,31)" rx="2" ry="2" />
<text  x="28.48" y="303.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (29 samples, 0.72%)</title><rect x="410.6" y="293" width="8.5" height="15.0" fill="rgb(252,220,17)" rx="2" ry="2" />
<text  x="413.63" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (2 samples, 0.05%)</title><rect x="86.5" y="165" width="0.6" height="15.0" fill="rgb(248,213,6)" rx="2" ry="2" />
<text  x="89.51" y="175.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (1 samples, 0.02%)</title><rect x="448.9" y="133" width="0.3" height="15.0" fill="rgb(207,144,30)" rx="2" ry="2" />
<text  x="451.89" y="143.5" ></text>
</g>
<g >
<title>runtime.assertI2I2 (1 samples, 0.02%)</title><rect x="92.6" y="261" width="0.3" height="15.0" fill="rgb(245,69,36)" rx="2" ry="2" />
<text  x="95.64" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).rotateLeft (1 samples, 0.02%)</title><rect x="42.4" y="69" width="0.3" height="15.0" fill="rgb(209,59,11)" rx="2" ry="2" />
<text  x="45.41" y="79.5" ></text>
</g>
<g >
<title>runtime.deferreturn (2 samples, 0.05%)</title><rect x="22.6" y="277" width="0.5" height="15.0" fill="rgb(206,179,15)" rx="2" ry="2" />
<text  x="25.56" y="287.5" ></text>
</g>
<g >
<title>runtime.step (3 samples, 0.07%)</title><rect x="413.8" y="53" width="0.9" height="15.0" fill="rgb(232,45,40)" rx="2" ry="2" />
<text  x="416.85" y="63.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.appendBytesSlice (4 samples, 0.10%)</title><rect x="78.0" y="213" width="1.2" height="15.0" fill="rgb(245,85,46)" rx="2" ry="2" />
<text  x="81.04" y="223.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.07%)</title><rect x="87.7" y="277" width="0.8" height="15.0" fill="rgb(251,105,9)" rx="2" ry="2" />
<text  x="90.67" y="287.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.appendVarint (6 samples, 0.15%)</title><rect x="177.6" y="181" width="1.8" height="15.0" fill="rgb(248,176,31)" rx="2" ry="2" />
<text  x="180.61" y="191.5" ></text>
</g>
<g >
<title>runtime.ready (1 samples, 0.02%)</title><rect x="168.6" y="149" width="0.3" height="15.0" fill="rgb(249,51,2)" rx="2" ry="2" />
<text  x="171.56" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (1 samples, 0.02%)</title><rect x="1047.8" y="245" width="0.3" height="15.0" fill="rgb(207,172,25)" rx="2" ry="2" />
<text  x="1050.79" y="255.5" ></text>
</g>
<g >
<title>runtime.lock (6 samples, 0.15%)</title><rect x="467.9" y="277" width="1.7" height="15.0" fill="rgb(226,57,44)" rx="2" ry="2" />
<text  x="470.87" y="287.5" ></text>
</g>
<g >
<title>runtime.scanblock (5 samples, 0.12%)</title><rect x="447.7" y="165" width="1.5" height="15.0" fill="rgb(226,109,32)" rx="2" ry="2" />
<text  x="450.72" y="175.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (4 samples, 0.10%)</title><rect x="401.3" y="245" width="1.2" height="15.0" fill="rgb(254,92,2)" rx="2" ry="2" />
<text  x="404.29" y="255.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.02%)</title><rect x="1047.5" y="261" width="0.3" height="15.0" fill="rgb(205,146,2)" rx="2" ry="2" />
<text  x="1050.50" y="271.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (8 samples, 0.20%)</title><rect x="412.4" y="133" width="2.3" height="15.0" fill="rgb(254,110,45)" rx="2" ry="2" />
<text  x="415.39" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (2 samples, 0.05%)</title><rect x="409.8" y="293" width="0.5" height="15.0" fill="rgb(217,4,45)" rx="2" ry="2" />
<text  x="412.76" y="303.5" ></text>
</g>
<g >
<title>runtime.runqput (2 samples, 0.05%)</title><rect x="401.9" y="213" width="0.6" height="15.0" fill="rgb(224,73,44)" rx="2" ry="2" />
<text  x="404.87" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (1 samples, 0.02%)</title><rect x="93.5" y="133" width="0.3" height="15.0" fill="rgb(229,193,46)" rx="2" ry="2" />
<text  x="96.51" y="143.5" ></text>
</g>
<g >
<title>runtime.procyield (6 samples, 0.15%)</title><rect x="57.9" y="277" width="1.7" height="15.0" fill="rgb(231,153,47)" rx="2" ry="2" />
<text  x="60.89" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="92.1" y="181" width="0.2" height="15.0" fill="rgb(205,143,19)" rx="2" ry="2" />
<text  x="95.05" y="191.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.decodeVarint (1 samples, 0.02%)</title><rect x="39.8" y="197" width="0.3" height="15.0" fill="rgb(205,155,49)" rx="2" ry="2" />
<text  x="42.78" y="207.5" ></text>
</g>
<g >
<title>runtime.assertI2I2 (2 samples, 0.05%)</title><rect x="33.4" y="261" width="0.5" height="15.0" fill="rgb(250,1,7)" rx="2" ry="2" />
<text  x="36.36" y="271.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (10 samples, 0.25%)</title><rect x="278.1" y="245" width="2.9" height="15.0" fill="rgb(230,125,39)" rx="2" ry="2" />
<text  x="281.06" y="255.5" ></text>
</g>
<g >
<title>runtime.nanotime (39 samples, 0.97%)</title><rect x="1159.3" y="293" width="11.4" height="15.0" fill="rgb(216,63,1)" rx="2" ry="2" />
<text  x="1162.34" y="303.5" ></text>
</g>
<g >
<title>runtime.libcCall (3 samples, 0.07%)</title><rect x="426.4" y="277" width="0.9" height="15.0" fill="rgb(254,194,36)" rx="2" ry="2" />
<text  x="429.40" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.02%)</title><rect x="76.6" y="165" width="0.3" height="15.0" fill="rgb(237,30,17)" rx="2" ry="2" />
<text  x="79.58" y="175.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).Lock (1 samples, 0.02%)</title><rect x="98.2" y="309" width="0.3" height="15.0" fill="rgb(239,213,8)" rx="2" ry="2" />
<text  x="101.19" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (33 samples, 0.82%)</title><rect x="284.8" y="277" width="9.6" height="15.0" fill="rgb(234,213,0)" rx="2" ry="2" />
<text  x="287.78" y="287.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (1 samples, 0.02%)</title><rect x="411.5" y="165" width="0.3" height="15.0" fill="rgb(220,102,42)" rx="2" ry="2" />
<text  x="414.51" y="175.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*Multiplex).run.func1.1.1 (2 samples, 0.05%)</title><rect x="97.3" y="309" width="0.6" height="15.0" fill="rgb(215,164,40)" rx="2" ry="2" />
<text  x="100.31" y="319.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*Batch).Ticker (123 samples, 3.04%)</title><rect x="10.6" y="309" width="35.9" height="15.0" fill="rgb(225,85,16)" rx="2" ry="2" />
<text  x="13.58" y="319.5" >hsl..</text>
</g>
<g >
<title>runtime.makeslice (4 samples, 0.10%)</title><rect x="86.2" y="261" width="1.2" height="15.0" fill="rgb(206,12,2)" rx="2" ry="2" />
<text  x="89.21" y="271.5" ></text>
</g>
<g >
<title>runtime.semawakeup (393 samples, 9.73%)</title><rect x="908.2" y="245" width="114.8" height="15.0" fill="rgb(248,82,30)" rx="2" ry="2" />
<text  x="911.21" y="255.5" >runtime.semawa..</text>
</g>
<g >
<title>runtime.(*mheap).allocSpanLocked (2 samples, 0.05%)</title><rect x="288.3" y="133" width="0.6" height="15.0" fill="rgb(232,224,23)" rx="2" ry="2" />
<text  x="291.28" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.02%)</title><rect x="48.3" y="229" width="0.2" height="15.0" fill="rgb(224,132,4)" rx="2" ry="2" />
<text  x="51.25" y="239.5" ></text>
</g>
<g >
<title>runtime.asmcgocall (1 samples, 0.02%)</title><rect x="152.5" y="165" width="0.3" height="15.0" fill="rgb(240,201,13)" rx="2" ry="2" />
<text  x="155.50" y="175.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.02%)</title><rect x="92.6" y="245" width="0.3" height="15.0" fill="rgb(236,96,53)" rx="2" ry="2" />
<text  x="95.64" y="255.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc/protocol.PacketFrame (2 samples, 0.05%)</title><rect x="97.3" y="293" width="0.6" height="15.0" fill="rgb(210,163,36)" rx="2" ry="2" />
<text  x="100.31" y="303.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (10 samples, 0.25%)</title><rect x="71.3" y="197" width="2.9" height="15.0" fill="rgb(241,209,7)" rx="2" ry="2" />
<text  x="74.32" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.02%)</title><rect x="1048.1" y="245" width="0.3" height="15.0" fill="rgb(251,226,28)" rx="2" ry="2" />
<text  x="1051.08" y="255.5" ></text>
</g>
<g >
<title>runtime.callers (1 samples, 0.02%)</title><rect x="283.3" y="213" width="0.3" height="15.0" fill="rgb(247,59,2)" rx="2" ry="2" />
<text  x="286.32" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock_trampoline (1 samples, 0.02%)</title><rect x="435.7" y="325" width="0.3" height="15.0" fill="rgb(245,116,23)" rx="2" ry="2" />
<text  x="438.75" y="335.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (2 samples, 0.05%)</title><rect x="418.5" y="165" width="0.6" height="15.0" fill="rgb(205,217,30)" rx="2" ry="2" />
<text  x="421.52" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (1 samples, 0.02%)</title><rect x="271.3" y="245" width="0.3" height="15.0" fill="rgb(234,2,27)" rx="2" ry="2" />
<text  x="274.35" y="255.5" ></text>
</g>
<g >
<title>runtime.chanbuf (1 samples, 0.02%)</title><rect x="52.6" y="293" width="0.3" height="15.0" fill="rgb(243,199,32)" rx="2" ry="2" />
<text  x="55.63" y="303.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.02%)</title><rect x="48.3" y="309" width="0.2" height="15.0" fill="rgb(253,147,9)" rx="2" ry="2" />
<text  x="51.25" y="319.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (1 samples, 0.02%)</title><rect x="283.3" y="149" width="0.3" height="15.0" fill="rgb(213,213,5)" rx="2" ry="2" />
<text  x="286.32" y="159.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (1 samples, 0.02%)</title><rect x="98.5" y="229" width="0.3" height="15.0" fill="rgb(207,192,20)" rx="2" ry="2" />
<text  x="101.48" y="239.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.02%)</title><rect x="409.8" y="149" width="0.2" height="15.0" fill="rgb(238,33,23)" rx="2" ry="2" />
<text  x="412.76" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (2 samples, 0.05%)</title><rect x="35.1" y="213" width="0.6" height="15.0" fill="rgb(218,186,52)" rx="2" ry="2" />
<text  x="38.11" y="223.5" ></text>
</g>
<g >
<title>runtime.freedefer (3 samples, 0.07%)</title><rect x="350.5" y="293" width="0.9" height="15.0" fill="rgb(215,179,35)" rx="2" ry="2" />
<text  x="353.48" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (1 samples, 0.02%)</title><rect x="86.8" y="117" width="0.3" height="15.0" fill="rgb(254,198,2)" rx="2" ry="2" />
<text  x="89.80" y="127.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.02%)</title><rect x="1049.3" y="261" width="0.2" height="15.0" fill="rgb(213,117,21)" rx="2" ry="2" />
<text  x="1052.25" y="271.5" ></text>
</g>
<g >
<title>math/rand.Int31n (43 samples, 1.06%)</title><rect x="351.4" y="325" width="12.5" height="15.0" fill="rgb(226,18,12)" rx="2" ry="2" />
<text  x="354.36" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (1 samples, 0.02%)</title><rect x="79.2" y="117" width="0.3" height="15.0" fill="rgb(233,162,15)" rx="2" ry="2" />
<text  x="82.21" y="127.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.sizeVarint64ValueNoZero (1 samples, 0.02%)</title><rect x="85.3" y="213" width="0.3" height="15.0" fill="rgb(250,227,24)" rx="2" ry="2" />
<text  x="88.34" y="223.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc/protocol.ReadStream (52 samples, 1.29%)</title><rect x="99.9" y="341" width="15.2" height="15.0" fill="rgb(227,78,7)" rx="2" ry="2" />
<text  x="102.94" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).removeNode (1 samples, 0.02%)</title><rect x="45.6" y="101" width="0.3" height="15.0" fill="rgb(248,209,43)" rx="2" ry="2" />
<text  x="48.62" y="111.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.unmarshalInt32Value (3 samples, 0.07%)</title><rect x="199.8" y="197" width="0.9" height="15.0" fill="rgb(224,151,44)" rx="2" ry="2" />
<text  x="202.80" y="207.5" ></text>
</g>
<g >
<title>runtime.newdefer (1 samples, 0.02%)</title><rect x="74.8" y="261" width="0.3" height="15.0" fill="rgb(253,216,28)" rx="2" ry="2" />
<text  x="77.83" y="271.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.02%)</title><rect x="410.6" y="229" width="0.3" height="15.0" fill="rgb(245,1,33)" rx="2" ry="2" />
<text  x="413.63" y="239.5" ></text>
</g>
<g >
<title>runtime.notesleep (8 samples, 0.20%)</title><rect x="809.2" y="261" width="2.4" height="15.0" fill="rgb(229,118,52)" rx="2" ry="2" />
<text  x="812.22" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpanLocked (1 samples, 0.02%)</title><rect x="93.5" y="117" width="0.3" height="15.0" fill="rgb(206,20,49)" rx="2" ry="2" />
<text  x="96.51" y="127.5" ></text>
</g>
<g >
<title>runtime.semacreate (2 samples, 0.05%)</title><rect x="260.2" y="245" width="0.6" height="15.0" fill="rgb(205,207,52)" rx="2" ry="2" />
<text  x="263.25" y="255.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.02%)</title><rect x="824.7" y="85" width="0.3" height="15.0" fill="rgb(227,13,12)" rx="2" ry="2" />
<text  x="827.70" y="95.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Unmarshal (6 samples, 0.15%)</title><rect x="23.1" y="245" width="1.8" height="15.0" fill="rgb(247,189,26)" rx="2" ry="2" />
<text  x="26.14" y="255.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.02%)</title><rect x="77.2" y="165" width="0.3" height="15.0" fill="rgb(237,229,39)" rx="2" ry="2" />
<text  x="80.16" y="175.5" ></text>
</g>
<g >
<title>runtime.chansend (1 samples, 0.02%)</title><rect x="98.5" y="293" width="0.3" height="15.0" fill="rgb(239,135,28)" rx="2" ry="2" />
<text  x="101.48" y="303.5" ></text>
</g>
<g >
<title>runtime.runqgrab (317 samples, 7.84%)</title><rect x="478.4" y="261" width="92.5" height="15.0" fill="rgb(236,79,34)" rx="2" ry="2" />
<text  x="481.38" y="271.5" >runtime.run..</text>
</g>
<g >
<title>runtime.mallocgc (5 samples, 0.12%)</title><rect x="45.0" y="277" width="1.5" height="15.0" fill="rgb(248,172,30)" rx="2" ry="2" />
<text  x="48.04" y="287.5" ></text>
</g>
<g >
<title>syscall.syscall (26 samples, 0.64%)</title><rect x="115.7" y="245" width="7.6" height="15.0" fill="rgb(236,126,40)" rx="2" ry="2" />
<text  x="118.71" y="255.5" ></text>
</g>
<g >
<title>runtime.osyield (6 samples, 0.15%)</title><rect x="166.2" y="197" width="1.8" height="15.0" fill="rgb(249,137,37)" rx="2" ry="2" />
<text  x="169.22" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.02%)</title><rect x="95.6" y="245" width="0.3" height="15.0" fill="rgb(244,199,15)" rx="2" ry="2" />
<text  x="98.56" y="255.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (22 samples, 0.54%)</title><rect x="442.8" y="197" width="6.4" height="15.0" fill="rgb(222,73,26)" rx="2" ry="2" />
<text  x="445.75" y="207.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*Batch).Ticker.func1.1 (1 samples, 0.02%)</title><rect x="65.8" y="277" width="0.3" height="15.0" fill="rgb(242,188,18)" rx="2" ry="2" />
<text  x="68.77" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.02%)</title><rect x="271.1" y="197" width="0.2" height="15.0" fill="rgb(222,67,20)" rx="2" ry="2" />
<text  x="274.05" y="207.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.02%)</title><rect x="329.5" y="261" width="0.2" height="15.0" fill="rgb(207,31,10)" rx="2" ry="2" />
<text  x="332.46" y="271.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.02%)</title><rect x="467.6" y="261" width="0.3" height="15.0" fill="rgb(251,65,15)" rx="2" ry="2" />
<text  x="470.57" y="271.5" ></text>
</g>
<g >
<title>runtime.assertE2I (6 samples, 0.15%)</title><rect x="184.0" y="261" width="1.8" height="15.0" fill="rgb(219,113,3)" rx="2" ry="2" />
<text  x="187.04" y="271.5" ></text>
</g>
<g >
<title>runtime.newdefer (3 samples, 0.07%)</title><rect x="21.7" y="261" width="0.9" height="15.0" fill="rgb(219,78,34)" rx="2" ry="2" />
<text  x="24.68" y="271.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.02%)</title><rect x="1049.5" y="245" width="0.3" height="15.0" fill="rgb(240,172,25)" rx="2" ry="2" />
<text  x="1052.54" y="255.5" ></text>
</g>
<g >
<title>runtime.timerproc (109 samples, 2.70%)</title><rect x="1158.2" y="341" width="31.8" height="15.0" fill="rgb(213,106,48)" rx="2" ry="2" />
<text  x="1161.17" y="351.5" >ru..</text>
</g>
<g >
<title>runtime.newobject (31 samples, 0.77%)</title><rect x="274.9" y="277" width="9.0" height="15.0" fill="rgb(209,2,23)" rx="2" ry="2" />
<text  x="277.85" y="287.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock_handoff (2 samples, 0.05%)</title><rect x="113.7" y="197" width="0.5" height="15.0" fill="rgb(251,2,35)" rx="2" ry="2" />
<text  x="116.66" y="207.5" ></text>
</g>
<g >
<title>runtime.heapBitsForAddr (2 samples, 0.05%)</title><rect x="273.4" y="245" width="0.6" height="15.0" fill="rgb(211,64,29)" rx="2" ry="2" />
<text  x="276.39" y="255.5" ></text>
</g>
<g >
<title>runtime.semawakeup (361 samples, 8.93%)</title><rect x="1049.8" y="229" width="105.5" height="15.0" fill="rgb(215,136,50)" rx="2" ry="2" />
<text  x="1052.84" y="239.5" >runtime.sema..</text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.02%)</title><rect x="411.2" y="181" width="0.3" height="15.0" fill="rgb(221,226,43)" rx="2" ry="2" />
<text  x="414.22" y="191.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.02%)</title><rect x="440.1" y="245" width="0.3" height="15.0" fill="rgb(235,169,7)" rx="2" ry="2" />
<text  x="443.13" y="255.5" ></text>
</g>
<g >
<title>math/rand.(*rngSource).Uint64 (5 samples, 0.12%)</title><rect x="354.3" y="229" width="1.4" height="15.0" fill="rgb(208,127,11)" rx="2" ry="2" />
<text  x="357.28" y="239.5" ></text>
</g>
<g >
<title>runtime.gogo (4 samples, 0.10%)</title><rect x="430.2" y="325" width="1.2" height="15.0" fill="rgb(224,107,45)" rx="2" ry="2" />
<text  x="433.20" y="335.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (1 samples, 0.02%)</title><rect x="261.7" y="213" width="0.3" height="15.0" fill="rgb(232,210,26)" rx="2" ry="2" />
<text  x="264.71" y="223.5" ></text>
</g>
<g >
<title>runtime.selparkcommit (4 samples, 0.10%)</title><rect x="820.9" y="309" width="1.2" height="15.0" fill="rgb(237,57,10)" rx="2" ry="2" />
<text  x="823.90" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="114.8" y="309" width="0.3" height="15.0" fill="rgb(229,96,52)" rx="2" ry="2" />
<text  x="117.83" y="319.5" ></text>
</g>
<g >
<title>runtime.newobject (5 samples, 0.12%)</title><rect x="36.6" y="277" width="1.4" height="15.0" fill="rgb(236,200,26)" rx="2" ry="2" />
<text  x="39.57" y="287.5" ></text>
</g>
<g >
<title>runtime.runqsteal (1 samples, 0.02%)</title><rect x="453.6" y="277" width="0.3" height="15.0" fill="rgb(234,75,28)" rx="2" ry="2" />
<text  x="456.56" y="287.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (17 samples, 0.42%)</title><rect x="163.9" y="261" width="5.0" height="15.0" fill="rgb(234,1,13)" rx="2" ry="2" />
<text  x="166.89" y="271.5" ></text>
</g>
<g >
<title>runtime.newstack (70 samples, 1.73%)</title><rect x="822.1" y="325" width="20.4" height="15.0" fill="rgb(226,68,2)" rx="2" ry="2" />
<text  x="825.07" y="335.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*Multiplex).run.func1 (2 samples, 0.05%)</title><rect x="97.3" y="341" width="0.6" height="15.0" fill="rgb(226,158,4)" rx="2" ry="2" />
<text  x="100.31" y="351.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*marshalInfo).size (2 samples, 0.05%)</title><rect x="32.8" y="229" width="0.6" height="15.0" fill="rgb(223,75,15)" rx="2" ry="2" />
<text  x="35.78" y="239.5" ></text>
</g>
<g >
<title>runtime.kevent (15 samples, 0.37%)</title><rect x="473.7" y="261" width="4.4" height="15.0" fill="rgb(212,222,34)" rx="2" ry="2" />
<text  x="476.71" y="271.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.02%)</title><rect x="85.9" y="245" width="0.3" height="15.0" fill="rgb(220,61,24)" rx="2" ry="2" />
<text  x="88.92" y="255.5" ></text>
</g>
<g >
<title>runtime.funcspdelta (3 samples, 0.07%)</title><rect x="441.9" y="197" width="0.9" height="15.0" fill="rgb(250,26,0)" rx="2" ry="2" />
<text  x="444.88" y="207.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.02%)</title><rect x="40.4" y="197" width="0.3" height="15.0" fill="rgb(208,161,28)" rx="2" ry="2" />
<text  x="43.37" y="207.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.05%)</title><rect x="288.3" y="181" width="0.6" height="15.0" fill="rgb(230,176,26)" rx="2" ry="2" />
<text  x="291.28" y="191.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.02%)</title><rect x="439.3" y="277" width="0.2" height="15.0" fill="rgb(206,127,24)" rx="2" ry="2" />
<text  x="442.25" y="287.5" ></text>
</g>
<g >
<title>runtime.runqgrab (1 samples, 0.02%)</title><rect x="453.6" y="261" width="0.3" height="15.0" fill="rgb(246,226,30)" rx="2" ry="2" />
<text  x="456.56" y="271.5" ></text>
</g>
<g >
<title>runtime.findObject (3 samples, 0.07%)</title><rect x="452.1" y="261" width="0.9" height="15.0" fill="rgb(224,177,22)" rx="2" ry="2" />
<text  x="455.10" y="271.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (54 samples, 1.34%)</title><rect x="1031.1" y="229" width="15.8" height="15.0" fill="rgb(217,18,19)" rx="2" ry="2" />
<text  x="1034.15" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.05%)</title><rect x="42.4" y="165" width="0.6" height="15.0" fill="rgb(243,217,23)" rx="2" ry="2" />
<text  x="45.41" y="175.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (2 samples, 0.05%)</title><rect x="24.3" y="165" width="0.6" height="15.0" fill="rgb(212,21,34)" rx="2" ry="2" />
<text  x="27.31" y="175.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.02%)</title><rect x="92.1" y="133" width="0.2" height="15.0" fill="rgb(214,202,38)" rx="2" ry="2" />
<text  x="95.05" y="143.5" ></text>
</g>
<g >
<title>runtime.findrunnable (4 samples, 0.10%)</title><rect x="456.5" y="277" width="1.1" height="15.0" fill="rgb(211,111,7)" rx="2" ry="2" />
<text  x="459.48" y="287.5" ></text>
</g>
<g >
<title>runtime.stopm (8 samples, 0.20%)</title><rect x="809.2" y="277" width="2.4" height="15.0" fill="rgb(214,9,30)" rx="2" ry="2" />
<text  x="812.22" y="287.5" ></text>
</g>
<g >
<title>runtime.chansend1 (1 samples, 0.02%)</title><rect x="98.5" y="309" width="0.3" height="15.0" fill="rgb(233,223,5)" rx="2" ry="2" />
<text  x="101.48" y="319.5" ></text>
</g>
<g >
<title>runtime.walltime (1 samples, 0.02%)</title><rect x="95.3" y="229" width="0.3" height="15.0" fill="rgb(238,194,36)" rx="2" ry="2" />
<text  x="98.27" y="239.5" ></text>
</g>
<g >
<title>gosave (1 samples, 0.02%)</title><rect x="95.3" y="181" width="0.3" height="15.0" fill="rgb(214,29,27)" rx="2" ry="2" />
<text  x="98.27" y="191.5" ></text>
</g>
<g >
<title>runtime.deferreturn (5 samples, 0.12%)</title><rect x="46.8" y="309" width="1.5" height="15.0" fill="rgb(216,81,27)" rx="2" ry="2" />
<text  x="49.79" y="319.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (23 samples, 0.57%)</title><rect x="877.6" y="245" width="6.7" height="15.0" fill="rgb(211,220,29)" rx="2" ry="2" />
<text  x="880.55" y="255.5" ></text>
</g>
<g >
<title>runtime.readvarint (1 samples, 0.02%)</title><rect x="414.4" y="37" width="0.3" height="15.0" fill="rgb(228,114,45)" rx="2" ry="2" />
<text  x="417.43" y="47.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.02%)</title><rect x="454.7" y="261" width="0.3" height="15.0" fill="rgb(211,192,7)" rx="2" ry="2" />
<text  x="457.73" y="271.5" ></text>
</g>
<g >
<title>runtime.procyield (2 samples, 0.05%)</title><rect x="159.8" y="197" width="0.6" height="15.0" fill="rgb(219,85,53)" rx="2" ry="2" />
<text  x="162.80" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (2 samples, 0.05%)</title><rect x="35.1" y="197" width="0.6" height="15.0" fill="rgb(216,213,36)" rx="2" ry="2" />
<text  x="38.11" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1030.9" y="245" width="0.2" height="15.0" fill="rgb(229,211,10)" rx="2" ry="2" />
<text  x="1033.86" y="255.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.02%)</title><rect x="88.0" y="245" width="0.3" height="15.0" fill="rgb(218,161,14)" rx="2" ry="2" />
<text  x="90.97" y="255.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.02%)</title><rect x="94.1" y="149" width="0.3" height="15.0" fill="rgb(253,215,33)" rx="2" ry="2" />
<text  x="97.10" y="159.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Unmarshal (5 samples, 0.12%)</title><rect x="76.6" y="245" width="1.4" height="15.0" fill="rgb(216,179,3)" rx="2" ry="2" />
<text  x="79.58" y="255.5" ></text>
</g>
<g >
<title>runtime.osyield (3 samples, 0.07%)</title><rect x="468.7" y="261" width="0.9" height="15.0" fill="rgb(242,224,18)" rx="2" ry="2" />
<text  x="471.74" y="271.5" ></text>
</g>
<g >
<title>runtime.usleep (162 samples, 4.01%)</title><rect x="206.2" y="229" width="47.3" height="15.0" fill="rgb(208,144,53)" rx="2" ry="2" />
<text  x="209.23" y="239.5" >runt..</text>
</g>
<g >
<title>runtime.unlock (5 samples, 0.12%)</title><rect x="60.8" y="293" width="1.5" height="15.0" fill="rgb(220,27,47)" rx="2" ry="2" />
<text  x="63.81" y="303.5" ></text>
</g>
<g >
<title>runtime.typeBitsBulkBarrier (1 samples, 0.02%)</title><rect x="402.7" y="261" width="0.3" height="15.0" fill="rgb(242,108,5)" rx="2" ry="2" />
<text  x="405.75" y="271.5" ></text>
</g>
<g >
<title>runtime.osyield (162 samples, 4.01%)</title><rect x="206.2" y="245" width="47.3" height="15.0" fill="rgb(251,27,29)" rx="2" ry="2" />
<text  x="209.23" y="255.5" >runt..</text>
</g>
<g >
<title>runtime.(*stackScanState).buildIndex (1 samples, 0.02%)</title><rect x="441.3" y="213" width="0.3" height="15.0" fill="rgb(220,121,36)" rx="2" ry="2" />
<text  x="444.29" y="223.5" ></text>
</g>
<g >
<title>runtime.growslice (5 samples, 0.12%)</title><rect x="76.6" y="197" width="1.4" height="15.0" fill="rgb(229,24,33)" rx="2" ry="2" />
<text  x="79.58" y="207.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bytep (1 samples, 0.02%)</title><rect x="448.6" y="101" width="0.3" height="15.0" fill="rgb(229,136,22)" rx="2" ry="2" />
<text  x="451.59" y="111.5" ></text>
</g>
<g >
<title>runtime.mcall (1,263 samples, 31.25%)</title><rect x="453.3" y="341" width="368.8" height="15.0" fill="rgb(228,52,7)" rx="2" ry="2" />
<text  x="456.27" y="351.5" >runtime.mcall</text>
</g>
<g >
<title>runtime.profilealloc (1 samples, 0.02%)</title><rect x="37.7" y="245" width="0.3" height="15.0" fill="rgb(243,23,2)" rx="2" ry="2" />
<text  x="40.74" y="255.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (51 samples, 1.26%)</title><rect x="99.9" y="293" width="14.9" height="15.0" fill="rgb(237,78,24)" rx="2" ry="2" />
<text  x="102.94" y="303.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.02%)</title><rect x="1047.8" y="117" width="0.3" height="15.0" fill="rgb(241,35,29)" rx="2" ry="2" />
<text  x="1050.79" y="127.5" ></text>
</g>
<g >
<title>runtime.runqempty (3 samples, 0.07%)</title><rect x="160.7" y="229" width="0.9" height="15.0" fill="rgb(209,130,0)" rx="2" ry="2" />
<text  x="163.68" y="239.5" ></text>
</g>
<g >
<title>runtime.runqsteal (317 samples, 7.84%)</title><rect x="478.4" y="277" width="92.5" height="15.0" fill="rgb(209,138,15)" rx="2" ry="2" />
<text  x="481.38" y="287.5" >runtime.run..</text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.02%)</title><rect x="97.3" y="165" width="0.3" height="15.0" fill="rgb(243,58,12)" rx="2" ry="2" />
<text  x="100.31" y="175.5" ></text>
</g>
<g >
<title>runtime.gcstopm (1 samples, 0.02%)</title><rect x="467.6" y="277" width="0.3" height="15.0" fill="rgb(228,194,40)" rx="2" ry="2" />
<text  x="470.57" y="287.5" ></text>
</g>
<g >
<title>runtime.semasleep (5 samples, 0.12%)</title><rect x="455.0" y="277" width="1.5" height="15.0" fill="rgb(229,138,32)" rx="2" ry="2" />
<text  x="458.02" y="287.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.02%)</title><rect x="163.6" y="213" width="0.3" height="15.0" fill="rgb(220,154,45)" rx="2" ry="2" />
<text  x="166.60" y="223.5" ></text>
</g>
<g >
<title>time.Now (29 samples, 0.72%)</title><rect x="144.3" y="229" width="8.5" height="15.0" fill="rgb(243,0,44)" rx="2" ry="2" />
<text  x="147.32" y="239.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.02%)</title><rect x="114.8" y="229" width="0.3" height="15.0" fill="rgb(206,120,43)" rx="2" ry="2" />
<text  x="117.83" y="239.5" ></text>
</g>
<g >
<title>unicode/utf8.ValidString (2 samples, 0.05%)</title><rect x="30.7" y="197" width="0.6" height="15.0" fill="rgb(239,75,44)" rx="2" ry="2" />
<text  x="33.73" y="207.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*unmarshalInfo).unmarshal (5 samples, 0.12%)</title><rect x="76.6" y="229" width="1.4" height="15.0" fill="rgb(235,100,8)" rx="2" ry="2" />
<text  x="79.58" y="239.5" ></text>
</g>
<g >
<title>runtime.unlock (7 samples, 0.17%)</title><rect x="263.5" y="261" width="2.0" height="15.0" fill="rgb(217,74,44)" rx="2" ry="2" />
<text  x="266.46" y="271.5" ></text>
</g>
<g >
<title>runtime.kevent (1 samples, 0.02%)</title><rect x="457.1" y="245" width="0.3" height="15.0" fill="rgb(214,115,27)" rx="2" ry="2" />
<text  x="460.06" y="255.5" ></text>
</g>
<g >
<title>runtime.notesleep (5 samples, 0.12%)</title><rect x="455.0" y="293" width="1.5" height="15.0" fill="rgb(241,69,32)" rx="2" ry="2" />
<text  x="458.02" y="303.5" ></text>
</g>
<g >
<title>runtime.assertI2I2 (1 samples, 0.02%)</title><rect x="182.0" y="245" width="0.3" height="15.0" fill="rgb(208,117,46)" rx="2" ry="2" />
<text  x="184.99" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="45.6" y="181" width="0.3" height="15.0" fill="rgb(212,24,26)" rx="2" ry="2" />
<text  x="48.62" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (1 samples, 0.02%)</title><rect x="410.0" y="261" width="0.3" height="15.0" fill="rgb(223,42,51)" rx="2" ry="2" />
<text  x="413.05" y="271.5" ></text>
</g>
<g >
<title>runtime.greyobject (1 samples, 0.02%)</title><rect x="453.0" y="261" width="0.3" height="15.0" fill="rgb(252,61,22)" rx="2" ry="2" />
<text  x="455.97" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).insert (1 samples, 0.02%)</title><rect x="824.4" y="85" width="0.3" height="15.0" fill="rgb(245,105,9)" rx="2" ry="2" />
<text  x="827.41" y="95.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (3 samples, 0.07%)</title><rect x="1022.1" y="229" width="0.9" height="15.0" fill="rgb(251,168,25)" rx="2" ry="2" />
<text  x="1025.10" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="409.8" y="213" width="0.2" height="15.0" fill="rgb(223,56,25)" rx="2" ry="2" />
<text  x="412.76" y="223.5" ></text>
</g>
<g >
<title>runtime.deferproc (1 samples, 0.02%)</title><rect x="74.8" y="277" width="0.3" height="15.0" fill="rgb(224,99,26)" rx="2" ry="2" />
<text  x="77.83" y="287.5" ></text>
</g>
<g >
<title>unicode/utf8.ValidString (1 samples, 0.02%)</title><rect x="83.9" y="197" width="0.3" height="15.0" fill="rgb(218,29,0)" rx="2" ry="2" />
<text  x="86.88" y="207.5" ></text>
</g>
<g >
<title>runtime.pcdatavalue (5 samples, 0.12%)</title><rect x="413.3" y="85" width="1.4" height="15.0" fill="rgb(243,133,21)" rx="2" ry="2" />
<text  x="416.26" y="95.5" ></text>
</g>
<g >
<title>runtime.ready (1 samples, 0.02%)</title><rect x="98.5" y="213" width="0.3" height="15.0" fill="rgb(210,138,20)" rx="2" ry="2" />
<text  x="101.48" y="223.5" ></text>
</g>
<g >
<title>runtime.makeslice (8 samples, 0.20%)</title><rect x="33.9" y="261" width="2.4" height="15.0" fill="rgb(246,225,4)" rx="2" ry="2" />
<text  x="36.94" y="271.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.02%)</title><rect x="467.6" y="229" width="0.3" height="15.0" fill="rgb(236,157,10)" rx="2" ry="2" />
<text  x="470.57" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.02%)</title><rect x="1049.3" y="245" width="0.2" height="15.0" fill="rgb(228,161,48)" rx="2" ry="2" />
<text  x="1052.25" y="255.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Unmarshal (1 samples, 0.02%)</title><rect x="25.2" y="277" width="0.3" height="15.0" fill="rgb(223,110,14)" rx="2" ry="2" />
<text  x="28.18" y="287.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*Response).Decode (24 samples, 0.59%)</title><rect x="38.0" y="293" width="7.0" height="15.0" fill="rgb(230,99,37)" rx="2" ry="2" />
<text  x="41.03" y="303.5" ></text>
</g>
<g >
<title>runtime.mallocgc (22 samples, 0.54%)</title><rect x="268.4" y="277" width="6.5" height="15.0" fill="rgb(221,217,22)" rx="2" ry="2" />
<text  x="271.43" y="287.5" ></text>
</g>
<g >
<title>runtime.gopark (1 samples, 0.02%)</title><rect x="158.6" y="197" width="0.3" height="15.0" fill="rgb(248,174,2)" rx="2" ry="2" />
<text  x="161.63" y="207.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast_pidle (28 samples, 0.69%)</title><rect x="1023.0" y="293" width="8.1" height="15.0" fill="rgb(239,102,40)" rx="2" ry="2" />
<text  x="1025.97" y="303.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (2 samples, 0.05%)</title><rect x="411.2" y="213" width="0.6" height="15.0" fill="rgb(241,140,0)" rx="2" ry="2" />
<text  x="414.22" y="223.5" ></text>
</g>
<g >
<title>runtime.chansend.func1 (3 samples, 0.07%)</title><rect x="70.4" y="229" width="0.9" height="15.0" fill="rgb(218,52,39)" rx="2" ry="2" />
<text  x="73.45" y="239.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*unmarshalInfo).unmarshal (12 samples, 0.30%)</title><rect x="38.0" y="229" width="3.5" height="15.0" fill="rgb(205,21,10)" rx="2" ry="2" />
<text  x="41.03" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (2 samples, 0.05%)</title><rect x="271.1" y="261" width="0.5" height="15.0" fill="rgb(247,18,36)" rx="2" ry="2" />
<text  x="274.05" y="271.5" ></text>
</g>
<g >
<title>runtime.pidleput (1 samples, 0.02%)</title><rect x="478.1" y="277" width="0.3" height="15.0" fill="rgb(240,19,41)" rx="2" ry="2" />
<text  x="481.09" y="287.5" ></text>
</g>
<g >
<title>runtime.binarySearchTree (1 samples, 0.02%)</title><rect x="441.3" y="165" width="0.3" height="15.0" fill="rgb(236,219,44)" rx="2" ry="2" />
<text  x="444.29" y="175.5" ></text>
</g>
<g >
<title>runtime.selectgo (3 samples, 0.07%)</title><rect x="99.1" y="325" width="0.8" height="15.0" fill="rgb(232,131,44)" rx="2" ry="2" />
<text  x="102.06" y="335.5" ></text>
</g>
<g >
<title>runtime.gcstopm (10 samples, 0.25%)</title><rect x="808.6" y="293" width="3.0" height="15.0" fill="rgb(236,84,20)" rx="2" ry="2" />
<text  x="811.64" y="303.5" ></text>
</g>
<g >
<title>runtime.goready (9 samples, 0.22%)</title><rect x="17.9" y="229" width="2.6" height="15.0" fill="rgb(207,217,44)" rx="2" ry="2" />
<text  x="20.88" y="239.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (1 samples, 0.02%)</title><rect x="60.5" y="293" width="0.3" height="15.0" fill="rgb(252,166,36)" rx="2" ry="2" />
<text  x="63.52" y="303.5" ></text>
</g>
<g >
<title>runtime.unlock (2 samples, 0.05%)</title><rect x="1030.6" y="277" width="0.5" height="15.0" fill="rgb(221,48,47)" rx="2" ry="2" />
<text  x="1033.56" y="287.5" ></text>
</g>
<g >
<title>runtime.procyield (2 samples, 0.05%)</title><rect x="168.0" y="197" width="0.6" height="15.0" fill="rgb(251,202,52)" rx="2" ry="2" />
<text  x="170.98" y="207.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.02%)</title><rect x="283.3" y="165" width="0.3" height="15.0" fill="rgb(205,164,28)" rx="2" ry="2" />
<text  x="286.32" y="175.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.ReplyDecode (62 samples, 1.53%)</title><rect x="185.8" y="293" width="18.1" height="15.0" fill="rgb(212,203,0)" rx="2" ry="2" />
<text  x="188.79" y="303.5" ></text>
</g>
<g >
<title>runtime.mallocgc (5 samples, 0.12%)</title><rect x="36.6" y="261" width="1.4" height="15.0" fill="rgb(212,126,40)" rx="2" ry="2" />
<text  x="39.57" y="271.5" ></text>
</g>
<g >
<title>runtime.findrunnable (5 samples, 0.12%)</title><rect x="453.3" y="293" width="1.4" height="15.0" fill="rgb(229,12,14)" rx="2" ry="2" />
<text  x="456.27" y="303.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc/pb.(*Response).XXX_Unmarshal (10 samples, 0.25%)</title><rect x="89.7" y="261" width="2.9" height="15.0" fill="rgb(248,107,17)" rx="2" ry="2" />
<text  x="92.72" y="271.5" ></text>
</g>
<g >
<title>runtime.memmove (3 samples, 0.07%)</title><rect x="29.9" y="197" width="0.8" height="15.0" fill="rgb(241,132,54)" rx="2" ry="2" />
<text  x="32.86" y="207.5" ></text>
</g>
<g >
<title>runtime.freedefer (1 samples, 0.02%)</title><rect x="155.1" y="245" width="0.3" height="15.0" fill="rgb(220,81,15)" rx="2" ry="2" />
<text  x="158.13" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="95.6" y="277" width="0.3" height="15.0" fill="rgb(229,56,54)" rx="2" ry="2" />
<text  x="98.56" y="287.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc/pb.(*Batch).XXX_Marshal (1 samples, 0.02%)</title><rect x="24.9" y="261" width="0.3" height="15.0" fill="rgb(205,66,32)" rx="2" ry="2" />
<text  x="27.89" y="271.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (2 samples, 0.05%)</title><rect x="422.3" y="293" width="0.6" height="15.0" fill="rgb(230,186,37)" rx="2" ry="2" />
<text  x="425.31" y="303.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*Multiplex).Delete (1 samples, 0.02%)</title><rect x="97.9" y="309" width="0.3" height="15.0" fill="rgb(237,75,45)" rx="2" ry="2" />
<text  x="100.89" y="319.5" ></text>
</g>
<g >
<title>runtime.globrunqget (1 samples, 0.02%)</title><rect x="456.5" y="261" width="0.3" height="15.0" fill="rgb(244,123,6)" rx="2" ry="2" />
<text  x="459.48" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (2 samples, 0.05%)</title><rect x="42.4" y="181" width="0.6" height="15.0" fill="rgb(245,94,51)" rx="2" ry="2" />
<text  x="45.41" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (28 samples, 0.69%)</title><rect x="410.9" y="277" width="8.2" height="15.0" fill="rgb(240,226,14)" rx="2" ry="2" />
<text  x="413.93" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).find (1 samples, 0.02%)</title><rect x="288.3" y="101" width="0.3" height="15.0" fill="rgb(249,84,18)" rx="2" ry="2" />
<text  x="291.28" y="111.5" ></text>
</g>
<g >
<title>runtime.pcvalue (1 samples, 0.02%)</title><rect x="283.3" y="133" width="0.3" height="15.0" fill="rgb(222,202,43)" rx="2" ry="2" />
<text  x="286.32" y="143.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*Multiplex).NewRequest (1 samples, 0.02%)</title><rect x="95.3" y="277" width="0.3" height="15.0" fill="rgb(253,48,29)" rx="2" ry="2" />
<text  x="98.27" y="287.5" ></text>
</g>
<g >
<title>runtime.semawakeup (2 samples, 0.05%)</title><rect x="808.6" y="261" width="0.6" height="15.0" fill="rgb(228,221,24)" rx="2" ry="2" />
<text  x="811.64" y="271.5" ></text>
</g>
<g >
<title>runtime.pcvalue (11 samples, 0.27%)</title><rect x="444.5" y="133" width="3.2" height="15.0" fill="rgb(234,77,24)" rx="2" ry="2" />
<text  x="447.51" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mheap).pickFreeSpan (2 samples, 0.05%)</title><rect x="288.3" y="117" width="0.6" height="15.0" fill="rgb(209,120,2)" rx="2" ry="2" />
<text  x="291.28" y="127.5" ></text>
</g>
<g >
<title>runtime.acquirem (3 samples, 0.07%)</title><rect x="182.9" y="213" width="0.8" height="15.0" fill="rgb(250,156,25)" rx="2" ry="2" />
<text  x="185.87" y="223.5" ></text>
</g>
<g >
<title>runtime.libcCall (4 samples, 0.10%)</title><rect x="147.8" y="181" width="1.2" height="15.0" fill="rgb(233,199,24)" rx="2" ry="2" />
<text  x="150.83" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (26 samples, 0.64%)</title><rect x="825.0" y="197" width="7.6" height="15.0" fill="rgb(205,6,24)" rx="2" ry="2" />
<text  x="827.99" y="207.5" ></text>
</g>
<g >
<title>runtime.ready (10 samples, 0.25%)</title><rect x="71.3" y="181" width="2.9" height="15.0" fill="rgb(215,97,4)" rx="2" ry="2" />
<text  x="74.32" y="191.5" ></text>
</g>
<g >
<title>runtime.kevent (3 samples, 0.07%)</title><rect x="1048.4" y="261" width="0.9" height="15.0" fill="rgb(223,76,42)" rx="2" ry="2" />
<text  x="1051.38" y="271.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (5 samples, 0.12%)</title><rect x="293.0" y="261" width="1.4" height="15.0" fill="rgb(246,75,4)" rx="2" ry="2" />
<text  x="295.95" y="271.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Unmarshal (13 samples, 0.32%)</title><rect x="38.0" y="277" width="3.8" height="15.0" fill="rgb(224,69,45)" rx="2" ry="2" />
<text  x="41.03" y="287.5" ></text>
</g>
<g >
<title>runtime.systemstack (9 samples, 0.22%)</title><rect x="17.9" y="213" width="2.6" height="15.0" fill="rgb(248,142,4)" rx="2" ry="2" />
<text  x="20.88" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (2 samples, 0.05%)</title><rect x="45.3" y="197" width="0.6" height="15.0" fill="rgb(245,180,35)" rx="2" ry="2" />
<text  x="48.33" y="207.5" ></text>
</g>
<g >
<title>runtime.(*semaRoot).dequeue (1 samples, 0.02%)</title><rect x="165.9" y="213" width="0.3" height="15.0" fill="rgb(207,80,36)" rx="2" ry="2" />
<text  x="168.93" y="223.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (8 samples, 0.20%)</title><rect x="456.5" y="309" width="2.3" height="15.0" fill="rgb(218,165,49)" rx="2" ry="2" />
<text  x="459.48" y="319.5" ></text>
</g>
<g >
<title>runtime.send (3 samples, 0.07%)</title><rect x="261.1" y="261" width="0.9" height="15.0" fill="rgb(205,34,36)" rx="2" ry="2" />
<text  x="264.13" y="271.5" ></text>
</g>
<g >
<title>runtime.lock (122 samples, 3.02%)</title><rect x="365.7" y="293" width="35.6" height="15.0" fill="rgb(211,148,54)" rx="2" ry="2" />
<text  x="368.66" y="303.5" >run..</text>
</g>
<g >
<title>runtime.scanstack.func1 (1 samples, 0.02%)</title><rect x="414.7" y="133" width="0.3" height="15.0" fill="rgb(248,6,53)" rx="2" ry="2" />
<text  x="417.72" y="143.5" ></text>
</g>
<g >
<title>runtime.handoff (2 samples, 0.05%)</title><rect x="411.2" y="197" width="0.6" height="15.0" fill="rgb(253,52,44)" rx="2" ry="2" />
<text  x="414.22" y="207.5" ></text>
</g>
<g >
<title>runtime.nanotime (5 samples, 0.12%)</title><rect x="469.6" y="277" width="1.5" height="15.0" fill="rgb(227,20,5)" rx="2" ry="2" />
<text  x="472.62" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mspan).sweep (1 samples, 0.02%)</title><rect x="1047.8" y="213" width="0.3" height="15.0" fill="rgb(249,45,45)" rx="2" ry="2" />
<text  x="1050.79" y="223.5" ></text>
</g>
<g >
<title>runtime.chansend (140 samples, 3.46%)</title><rect x="364.2" y="309" width="40.9" height="15.0" fill="rgb(221,26,12)" rx="2" ry="2" />
<text  x="367.20" y="319.5" >run..</text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.02%)</title><rect x="48.3" y="197" width="0.2" height="15.0" fill="rgb(217,131,31)" rx="2" ry="2" />
<text  x="51.25" y="207.5" ></text>
</g>
<g >
<title>runtime.unlock (14 samples, 0.35%)</title><rect x="338.2" y="261" width="4.1" height="15.0" fill="rgb(209,69,18)" rx="2" ry="2" />
<text  x="341.22" y="271.5" ></text>
</g>
<g >
<title>runtime.unlock (4 samples, 0.10%)</title><rect x="820.9" y="293" width="1.2" height="15.0" fill="rgb(239,88,17)" rx="2" ry="2" />
<text  x="823.90" y="303.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Unmarshal (29 samples, 0.72%)</title><rect x="192.2" y="229" width="8.5" height="15.0" fill="rgb(223,149,10)" rx="2" ry="2" />
<text  x="195.21" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="40.1" y="181" width="0.3" height="15.0" fill="rgb(244,171,13)" rx="2" ry="2" />
<text  x="43.08" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="283.3" y="197" width="0.3" height="15.0" fill="rgb(250,176,50)" rx="2" ry="2" />
<text  x="286.32" y="207.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.02%)</title><rect x="95.3" y="213" width="0.3" height="15.0" fill="rgb(252,157,46)" rx="2" ry="2" />
<text  x="98.27" y="223.5" ></text>
</g>
<g >
<title>runtime.semasleep (66 samples, 1.63%)</title><rect x="1170.7" y="293" width="19.3" height="15.0" fill="rgb(218,178,50)" rx="2" ry="2" />
<text  x="1173.73" y="303.5" ></text>
</g>
<g >
<title>runtime.acquireSudog (7 samples, 0.17%)</title><rect x="318.7" y="277" width="2.0" height="15.0" fill="rgb(250,39,18)" rx="2" ry="2" />
<text  x="321.65" y="287.5" ></text>
</g>
<g >
<title>runtime.readvarint (1 samples, 0.02%)</title><rect x="447.4" y="101" width="0.3" height="15.0" fill="rgb(205,102,14)" rx="2" ry="2" />
<text  x="450.43" y="111.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.07%)</title><rect x="87.7" y="261" width="0.8" height="15.0" fill="rgb(221,207,43)" rx="2" ry="2" />
<text  x="90.67" y="271.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast_pidle (1 samples, 0.02%)</title><rect x="1159.0" y="245" width="0.3" height="15.0" fill="rgb(217,126,52)" rx="2" ry="2" />
<text  x="1162.05" y="255.5" ></text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.05%)</title><rect x="1023.0" y="245" width="0.6" height="15.0" fill="rgb(252,229,29)" rx="2" ry="2" />
<text  x="1025.97" y="255.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.02%)</title><rect x="457.4" y="229" width="0.2" height="15.0" fill="rgb(210,114,53)" rx="2" ry="2" />
<text  x="460.35" y="239.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.02%)</title><rect x="159.5" y="197" width="0.3" height="15.0" fill="rgb(250,11,4)" rx="2" ry="2" />
<text  x="162.51" y="207.5" ></text>
</g>
<g >
<title>runtime.stopm (28 samples, 0.69%)</title><rect x="824.4" y="245" width="8.2" height="15.0" fill="rgb(209,144,47)" rx="2" ry="2" />
<text  x="827.41" y="255.5" ></text>
</g>
<g >
<title>runtime.deferreturn (26 samples, 0.64%)</title><rect x="343.8" y="309" width="7.6" height="15.0" fill="rgb(236,175,34)" rx="2" ry="2" />
<text  x="346.76" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (6 samples, 0.15%)</title><rect x="437.5" y="277" width="1.8" height="15.0" fill="rgb(217,63,19)" rx="2" ry="2" />
<text  x="440.50" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (1 samples, 0.02%)</title><rect x="97.6" y="133" width="0.3" height="15.0" fill="rgb(209,162,29)" rx="2" ry="2" />
<text  x="100.60" y="143.5" ></text>
</g>
<g >
<title>runtime.(*mheap).pickFreeSpan (1 samples, 0.02%)</title><rect x="45.6" y="117" width="0.3" height="15.0" fill="rgb(238,179,7)" rx="2" ry="2" />
<text  x="48.62" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (1 samples, 0.02%)</title><rect x="271.1" y="149" width="0.2" height="15.0" fill="rgb(212,89,17)" rx="2" ry="2" />
<text  x="274.05" y="159.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.02%)</title><rect x="92.1" y="165" width="0.2" height="15.0" fill="rgb(209,76,0)" rx="2" ry="2" />
<text  x="95.05" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (6 samples, 0.15%)</title><rect x="287.1" y="245" width="1.8" height="15.0" fill="rgb(231,117,20)" rx="2" ry="2" />
<text  x="290.11" y="255.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.02%)</title><rect x="40.1" y="165" width="0.3" height="15.0" fill="rgb(236,91,44)" rx="2" ry="2" />
<text  x="43.08" y="175.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.02%)</title><rect x="1030.6" y="245" width="0.3" height="15.0" fill="rgb(246,221,47)" rx="2" ry="2" />
<text  x="1033.56" y="255.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*marshalInfo).marshal (4 samples, 0.10%)</title><rect x="78.0" y="229" width="1.2" height="15.0" fill="rgb(241,14,16)" rx="2" ry="2" />
<text  x="81.04" y="239.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.02%)</title><rect x="260.8" y="245" width="0.3" height="15.0" fill="rgb(241,85,24)" rx="2" ry="2" />
<text  x="263.83" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (2 samples, 0.05%)</title><rect x="288.3" y="165" width="0.6" height="15.0" fill="rgb(246,133,9)" rx="2" ry="2" />
<text  x="291.28" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (6 samples, 0.15%)</title><rect x="287.1" y="229" width="1.8" height="15.0" fill="rgb(211,74,9)" rx="2" ry="2" />
<text  x="290.11" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (60 samples, 1.48%)</title><rect x="406.0" y="309" width="17.5" height="15.0" fill="rgb(241,113,22)" rx="2" ry="2" />
<text  x="408.96" y="319.5" ></text>
</g>
<g >
<title>runtime.sendDirect (2 samples, 0.05%)</title><rect x="20.5" y="229" width="0.6" height="15.0" fill="rgb(217,155,8)" rx="2" ry="2" />
<text  x="23.51" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.02%)</title><rect x="271.1" y="165" width="0.2" height="15.0" fill="rgb(254,47,24)" rx="2" ry="2" />
<text  x="274.05" y="175.5" ></text>
</g>
<g >
<title>sync.runtime_Semrelease (1 samples, 0.02%)</title><rect x="363.6" y="229" width="0.3" height="15.0" fill="rgb(216,22,24)" rx="2" ry="2" />
<text  x="366.62" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mspan).nextFreeIndex (1 samples, 0.02%)</title><rect x="410.0" y="277" width="0.3" height="15.0" fill="rgb(224,27,26)" rx="2" ry="2" />
<text  x="413.05" y="287.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (390 samples, 9.65%)</title><rect x="908.2" y="229" width="113.9" height="15.0" fill="rgb(249,157,9)" rx="2" ry="2" />
<text  x="911.21" y="239.5" >runtime.pthrea..</text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.02%)</title><rect x="1047.5" y="277" width="0.3" height="15.0" fill="rgb(232,102,30)" rx="2" ry="2" />
<text  x="1050.50" y="287.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.02%)</title><rect x="1049.5" y="261" width="0.3" height="15.0" fill="rgb(230,44,16)" rx="2" ry="2" />
<text  x="1052.54" y="271.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.02%)</title><rect x="183.7" y="213" width="0.3" height="15.0" fill="rgb(208,191,1)" rx="2" ry="2" />
<text  x="186.74" y="223.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (1 samples, 0.02%)</title><rect x="414.7" y="117" width="0.3" height="15.0" fill="rgb(242,61,5)" rx="2" ry="2" />
<text  x="417.72" y="127.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*BatchCodec).Decode (5 samples, 0.12%)</title><rect x="76.6" y="293" width="1.4" height="15.0" fill="rgb(246,155,52)" rx="2" ry="2" />
<text  x="79.58" y="303.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Marshal (44 samples, 1.09%)</title><rect x="171.2" y="261" width="12.8" height="15.0" fill="rgb(250,112,8)" rx="2" ry="2" />
<text  x="174.19" y="271.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (2 samples, 0.05%)</title><rect x="129.7" y="261" width="0.6" height="15.0" fill="rgb(235,26,42)" rx="2" ry="2" />
<text  x="132.72" y="271.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (11 samples, 0.27%)</title><rect x="411.8" y="197" width="3.2" height="15.0" fill="rgb(240,89,0)" rx="2" ry="2" />
<text  x="414.80" y="207.5" ></text>
</g>
<g >
<title>runtime.usleep (3 samples, 0.07%)</title><rect x="468.7" y="245" width="0.9" height="15.0" fill="rgb(211,118,41)" rx="2" ry="2" />
<text  x="471.74" y="255.5" ></text>
</g>
<g >
<title>runtime._System (12 samples, 0.30%)</title><rect x="430.2" y="341" width="3.5" height="15.0" fill="rgb(212,202,15)" rx="2" ry="2" />
<text  x="433.20" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (2 samples, 0.05%)</title><rect x="97.3" y="197" width="0.6" height="15.0" fill="rgb(237,63,10)" rx="2" ry="2" />
<text  x="100.31" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (1 samples, 0.02%)</title><rect x="1047.8" y="181" width="0.3" height="15.0" fill="rgb(219,112,46)" rx="2" ry="2" />
<text  x="1050.79" y="191.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*Batch).run.func1 (179 samples, 4.43%)</title><rect x="10.0" y="341" width="52.3" height="15.0" fill="rgb(229,42,2)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >hslam..</text>
</g>
<g >
<title>runtime.runqget (1 samples, 0.02%)</title><rect x="820.6" y="293" width="0.3" height="15.0" fill="rgb(212,76,15)" rx="2" ry="2" />
<text  x="823.61" y="303.5" ></text>
</g>
<g >
<title>runtime.fastrand (1 samples, 0.02%)</title><rect x="320.7" y="261" width="0.3" height="15.0" fill="rgb(227,65,32)" rx="2" ry="2" />
<text  x="323.70" y="271.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.02%)</title><rect x="1049.3" y="277" width="0.2" height="15.0" fill="rgb(235,71,1)" rx="2" ry="2" />
<text  x="1052.25" y="287.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.02%)</title><rect x="114.8" y="245" width="0.3" height="15.0" fill="rgb(210,108,30)" rx="2" ry="2" />
<text  x="117.83" y="255.5" ></text>
</g>
<g >
<title>runtime.sendDirect (2 samples, 0.05%)</title><rect x="402.5" y="277" width="0.5" height="15.0" fill="rgb(209,104,30)" rx="2" ry="2" />
<text  x="405.46" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.02%)</title><rect x="79.2" y="229" width="0.3" height="15.0" fill="rgb(232,86,40)" rx="2" ry="2" />
<text  x="82.21" y="239.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*BatchCodec).Encode (1 samples, 0.02%)</title><rect x="24.9" y="293" width="0.3" height="15.0" fill="rgb(233,138,24)" rx="2" ry="2" />
<text  x="27.89" y="303.5" ></text>
</g>
<g >
<title>runtime.deferproc (5 samples, 0.12%)</title><rect x="342.3" y="309" width="1.5" height="15.0" fill="rgb(238,87,1)" rx="2" ry="2" />
<text  x="345.30" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (2 samples, 0.05%)</title><rect x="42.4" y="197" width="0.6" height="15.0" fill="rgb(224,47,32)" rx="2" ry="2" />
<text  x="45.41" y="207.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.02%)</title><rect x="1048.1" y="277" width="0.3" height="15.0" fill="rgb(233,21,50)" rx="2" ry="2" />
<text  x="1051.08" y="287.5" ></text>
</g>
<g >
<title>runtime.fastrand (1 samples, 0.02%)</title><rect x="446.0" y="117" width="0.3" height="15.0" fill="rgb(245,69,35)" rx="2" ry="2" />
<text  x="448.97" y="127.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Marshal (4 samples, 0.10%)</title><rect x="78.0" y="245" width="1.2" height="15.0" fill="rgb(234,92,52)" rx="2" ry="2" />
<text  x="81.04" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (2 samples, 0.05%)</title><rect x="42.4" y="149" width="0.6" height="15.0" fill="rgb(226,186,51)" rx="2" ry="2" />
<text  x="45.41" y="159.5" ></text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.02%)</title><rect x="467.6" y="245" width="0.3" height="15.0" fill="rgb(245,171,28)" rx="2" ry="2" />
<text  x="470.57" y="255.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.sizeStringValueNoZero (1 samples, 0.02%)</title><rect x="85.0" y="213" width="0.3" height="15.0" fill="rgb(223,161,21)" rx="2" ry="2" />
<text  x="88.05" y="223.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc/examples/example/pb/service.(*ArithRequest).XXX_Size (9 samples, 0.22%)</title><rect x="179.4" y="245" width="2.6" height="15.0" fill="rgb(229,141,48)" rx="2" ry="2" />
<text  x="182.36" y="255.5" ></text>
</g>
<g >
<title>syscall.write (27 samples, 0.67%)</title><rect x="115.4" y="261" width="7.9" height="15.0" fill="rgb(215,160,29)" rx="2" ry="2" />
<text  x="118.41" y="271.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (3 samples, 0.07%)</title><rect x="274.0" y="261" width="0.9" height="15.0" fill="rgb(250,191,3)" rx="2" ry="2" />
<text  x="276.97" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.02%)</title><rect x="48.3" y="293" width="0.2" height="15.0" fill="rgb(252,119,12)" rx="2" ry="2" />
<text  x="51.25" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (4 samples, 0.10%)</title><rect x="437.5" y="229" width="1.2" height="15.0" fill="rgb(241,214,20)" rx="2" ry="2" />
<text  x="440.50" y="239.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (1 samples, 0.02%)</title><rect x="182.0" y="213" width="0.3" height="15.0" fill="rgb(239,175,25)" rx="2" ry="2" />
<text  x="184.99" y="223.5" ></text>
</g>
<g >
<title>runtime.gentraceback (27 samples, 0.67%)</title><rect x="441.6" y="213" width="7.9" height="15.0" fill="rgb(245,201,1)" rx="2" ry="2" />
<text  x="444.59" y="223.5" ></text>
</g>
<g >
<title>math/rand.(*rngSource).Int63 (5 samples, 0.12%)</title><rect x="354.3" y="245" width="1.4" height="15.0" fill="rgb(210,58,1)" rx="2" ry="2" />
<text  x="357.28" y="255.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.02%)</title><rect x="40.1" y="197" width="0.3" height="15.0" fill="rgb(230,103,7)" rx="2" ry="2" />
<text  x="43.08" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.02%)</title><rect x="93.5" y="197" width="0.3" height="15.0" fill="rgb(230,75,46)" rx="2" ry="2" />
<text  x="96.51" y="207.5" ></text>
</g>
<g >
<title>runtime.duffcopy (1 samples, 0.02%)</title><rect x="36.3" y="277" width="0.3" height="15.0" fill="rgb(220,58,39)" rx="2" ry="2" />
<text  x="39.28" y="287.5" ></text>
</g>
<g >
<title>runtime.releasem (1 samples, 0.02%)</title><rect x="283.6" y="245" width="0.3" height="15.0" fill="rgb(252,205,43)" rx="2" ry="2" />
<text  x="286.61" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.02%)</title><rect x="79.2" y="197" width="0.3" height="15.0" fill="rgb(242,131,51)" rx="2" ry="2" />
<text  x="82.21" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (3 samples, 0.07%)</title><rect x="457.6" y="213" width="0.9" height="15.0" fill="rgb(211,36,40)" rx="2" ry="2" />
<text  x="460.65" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (5 samples, 0.12%)</title><rect x="455.0" y="261" width="1.5" height="15.0" fill="rgb(246,63,6)" rx="2" ry="2" />
<text  x="458.02" y="271.5" ></text>
</g>
<g >
<title>runtime.ready (4 samples, 0.10%)</title><rect x="401.3" y="229" width="1.2" height="15.0" fill="rgb(229,172,12)" rx="2" ry="2" />
<text  x="404.29" y="239.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.02%)</title><rect x="36.0" y="229" width="0.3" height="15.0" fill="rgb(229,94,27)" rx="2" ry="2" />
<text  x="38.99" y="239.5" ></text>
</g>
<g >
<title>runtime.unlock (5 samples, 0.12%)</title><rect x="403.6" y="293" width="1.5" height="15.0" fill="rgb(232,115,21)" rx="2" ry="2" />
<text  x="406.63" y="303.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.02%)</title><rect x="288.0" y="181" width="0.3" height="15.0" fill="rgb(217,46,33)" rx="2" ry="2" />
<text  x="290.99" y="191.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.appendVarint (1 samples, 0.02%)</title><rect x="78.9" y="197" width="0.3" height="15.0" fill="rgb(252,105,52)" rx="2" ry="2" />
<text  x="81.91" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (2 samples, 0.05%)</title><rect x="45.3" y="213" width="0.6" height="15.0" fill="rgb(241,135,20)" rx="2" ry="2" />
<text  x="48.33" y="223.5" ></text>
</g>
<g >
<title>runtime.acquireSudog (1 samples, 0.02%)</title><rect x="52.3" y="293" width="0.3" height="15.0" fill="rgb(207,157,33)" rx="2" ry="2" />
<text  x="55.34" y="303.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.02%)</title><rect x="1047.5" y="245" width="0.3" height="15.0" fill="rgb(250,117,37)" rx="2" ry="2" />
<text  x="1050.50" y="255.5" ></text>
</g>
<g >
<title>runtime.topofstack (1 samples, 0.02%)</title><rect x="449.2" y="197" width="0.3" height="15.0" fill="rgb(250,84,20)" rx="2" ry="2" />
<text  x="452.18" y="207.5" ></text>
</g>
<g >
<title>runtime.notesleep (3 samples, 0.07%)</title><rect x="453.9" y="261" width="0.8" height="15.0" fill="rgb(228,26,13)" rx="2" ry="2" />
<text  x="456.85" y="271.5" ></text>
</g>
<g >
<title>runtime.findObject (3 samples, 0.07%)</title><rect x="417.6" y="165" width="0.9" height="15.0" fill="rgb(232,24,8)" rx="2" ry="2" />
<text  x="420.64" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpanLocked (1 samples, 0.02%)</title><rect x="45.6" y="133" width="0.3" height="15.0" fill="rgb(232,144,50)" rx="2" ry="2" />
<text  x="48.62" y="143.5" ></text>
</g>
<g >
<title>runtime.freedefer (2 samples, 0.05%)</title><rect x="100.2" y="261" width="0.6" height="15.0" fill="rgb(217,47,22)" rx="2" ry="2" />
<text  x="103.23" y="271.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock_handoff (393 samples, 9.73%)</title><rect x="908.2" y="309" width="114.8" height="15.0" fill="rgb(218,178,38)" rx="2" ry="2" />
<text  x="911.21" y="319.5" >runtime.enters..</text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.02%)</title><rect x="24.0" y="165" width="0.3" height="15.0" fill="rgb(214,61,24)" rx="2" ry="2" />
<text  x="27.02" y="175.5" ></text>
</g>
<g >
<title>gosave (2 samples, 0.05%)</title><rect x="148.4" y="149" width="0.6" height="15.0" fill="rgb(228,70,41)" rx="2" ry="2" />
<text  x="151.41" y="159.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="92.1" y="149" width="0.2" height="15.0" fill="rgb(254,206,23)" rx="2" ry="2" />
<text  x="95.05" y="159.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.02%)</title><rect x="263.2" y="245" width="0.3" height="15.0" fill="rgb(223,67,52)" rx="2" ry="2" />
<text  x="266.17" y="255.5" ></text>
</g>
<g >
<title>runtime.semasleep (54 samples, 1.34%)</title><rect x="1031.1" y="245" width="15.8" height="15.0" fill="rgb(243,33,54)" rx="2" ry="2" />
<text  x="1034.15" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpanLocked (1 samples, 0.02%)</title><rect x="271.1" y="133" width="0.2" height="15.0" fill="rgb(235,66,26)" rx="2" ry="2" />
<text  x="274.05" y="143.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func3 (3 samples, 0.07%)</title><rect x="1046.9" y="309" width="0.9" height="15.0" fill="rgb(226,155,23)" rx="2" ry="2" />
<text  x="1049.92" y="319.5" ></text>
</g>
<g >
<title>sync.runtime_canSpin (4 samples, 0.10%)</title><rect x="160.4" y="245" width="1.2" height="15.0" fill="rgb(213,66,3)" rx="2" ry="2" />
<text  x="163.38" y="255.5" ></text>
</g>
<g >
<title>runtime.lock (14 samples, 0.35%)</title><rect x="333.8" y="261" width="4.1" height="15.0" fill="rgb(252,32,46)" rx="2" ry="2" />
<text  x="336.84" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="168.6" y="181" width="0.3" height="15.0" fill="rgb(251,51,49)" rx="2" ry="2" />
<text  x="171.56" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="94.1" y="229" width="0.3" height="15.0" fill="rgb(214,80,49)" rx="2" ry="2" />
<text  x="97.10" y="239.5" ></text>
</g>
<g >
<title>runtime.mstart1 (225 samples, 5.57%)</title><rect x="842.5" y="325" width="65.7" height="15.0" fill="rgb(228,166,31)" rx="2" ry="2" />
<text  x="845.51" y="335.5" >runtime..</text>
</g>
<g >
<title>hslam.com/git/x/rpc/pb.(*Batch).XXX_Marshal (4 samples, 0.10%)</title><rect x="78.0" y="261" width="1.2" height="15.0" fill="rgb(210,195,34)" rx="2" ry="2" />
<text  x="81.04" y="271.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeueSudoG (33 samples, 0.82%)</title><rect x="309.0" y="277" width="9.7" height="15.0" fill="rgb(233,187,39)" rx="2" ry="2" />
<text  x="312.02" y="287.5" ></text>
</g>
<g >
<title>runtime.step (5 samples, 0.12%)</title><rect x="446.3" y="117" width="1.4" height="15.0" fill="rgb(238,2,29)" rx="2" ry="2" />
<text  x="449.26" y="127.5" ></text>
</g>
<g >
<title>runtime.binarySearchTree (1 samples, 0.02%)</title><rect x="441.3" y="197" width="0.3" height="15.0" fill="rgb(218,35,44)" rx="2" ry="2" />
<text  x="444.29" y="207.5" ></text>
</g>
<g >
<title>runtime.gopark (23 samples, 0.57%)</title><rect x="321.6" y="277" width="6.7" height="15.0" fill="rgb(235,54,5)" rx="2" ry="2" />
<text  x="324.57" y="287.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.02%)</title><rect x="182.0" y="229" width="0.3" height="15.0" fill="rgb(216,10,1)" rx="2" ry="2" />
<text  x="184.99" y="239.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (1 samples, 0.02%)</title><rect x="439.5" y="277" width="0.3" height="15.0" fill="rgb(209,200,44)" rx="2" ry="2" />
<text  x="442.54" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (2 samples, 0.05%)</title><rect x="277.5" y="229" width="0.6" height="15.0" fill="rgb(239,171,38)" rx="2" ry="2" />
<text  x="280.48" y="239.5" ></text>
</g>
<g >
<title>runtime.asmcgocall (9 samples, 0.22%)</title><rect x="433.7" y="341" width="2.6" height="15.0" fill="rgb(213,160,29)" rx="2" ry="2" />
<text  x="436.70" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (5 samples, 0.12%)</title><rect x="182.6" y="229" width="1.4" height="15.0" fill="rgb(214,121,44)" rx="2" ry="2" />
<text  x="185.58" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (2 samples, 0.05%)</title><rect x="824.4" y="197" width="0.6" height="15.0" fill="rgb(231,168,20)" rx="2" ry="2" />
<text  x="827.41" y="207.5" ></text>
</g>
<g >
<title>runtime.scang (30 samples, 0.74%)</title><rect x="440.7" y="245" width="8.8" height="15.0" fill="rgb(229,95,28)" rx="2" ry="2" />
<text  x="443.71" y="255.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.appendUTF8StringValueNoZero (5 samples, 0.12%)</title><rect x="82.7" y="213" width="1.5" height="15.0" fill="rgb(239,184,25)" rx="2" ry="2" />
<text  x="85.71" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.02%)</title><rect x="35.4" y="165" width="0.3" height="15.0" fill="rgb(223,74,3)" rx="2" ry="2" />
<text  x="38.40" y="175.5" ></text>
</g>
<g >
<title>runtime.lock (194 samples, 4.80%)</title><rect x="204.5" y="261" width="56.6" height="15.0" fill="rgb(248,61,37)" rx="2" ry="2" />
<text  x="207.48" y="271.5" >runtim..</text>
</g>
<g >
<title>runtime.jmpdefer (1 samples, 0.02%)</title><rect x="155.4" y="261" width="0.3" height="15.0" fill="rgb(224,43,42)" rx="2" ry="2" />
<text  x="158.42" y="271.5" ></text>
</g>
<g >
<title>hslam.com/git/x/idgenerator.GetTime (37 samples, 0.92%)</title><rect x="142.0" y="261" width="10.8" height="15.0" fill="rgb(208,222,21)" rx="2" ry="2" />
<text  x="144.99" y="271.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (2 samples, 0.05%)</title><rect x="403.0" y="293" width="0.6" height="15.0" fill="rgb(249,203,7)" rx="2" ry="2" />
<text  x="406.04" y="303.5" ></text>
</g>
<g >
<title>gosave (1 samples, 0.02%)</title><rect x="152.5" y="149" width="0.3" height="15.0" fill="rgb(221,97,16)" rx="2" ry="2" />
<text  x="155.50" y="159.5" ></text>
</g>
<g >
<title>runtime.mallocgc (30 samples, 0.74%)</title><rect x="275.1" y="261" width="8.8" height="15.0" fill="rgb(231,156,9)" rx="2" ry="2" />
<text  x="278.14" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (1 samples, 0.02%)</title><rect x="467.3" y="261" width="0.3" height="15.0" fill="rgb(228,206,44)" rx="2" ry="2" />
<text  x="470.28" y="271.5" ></text>
</g>
<g >
<title>hslam.com/git/x/idgenerator.(*IDGen).autoIncreament (98 samples, 2.43%)</title><rect x="140.2" y="277" width="28.7" height="15.0" fill="rgb(207,2,22)" rx="2" ry="2" />
<text  x="143.24" y="287.5" >hs..</text>
</g>
<g >
<title>runtime.greyobject (2 samples, 0.05%)</title><rect x="448.6" y="149" width="0.6" height="15.0" fill="rgb(242,122,46)" rx="2" ry="2" />
<text  x="451.59" y="159.5" ></text>
</g>
<g >
<title>runtime.bulkBarrierPreWrite (1 samples, 0.02%)</title><rect x="60.2" y="277" width="0.3" height="15.0" fill="rgb(218,101,50)" rx="2" ry="2" />
<text  x="63.23" y="287.5" ></text>
</g>
<g >
<title>sync.runtime_doSpin (2 samples, 0.05%)</title><rect x="95.9" y="293" width="0.5" height="15.0" fill="rgb(218,139,30)" rx="2" ry="2" />
<text  x="98.85" y="303.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (2 samples, 0.05%)</title><rect x="114.2" y="229" width="0.6" height="15.0" fill="rgb(220,222,39)" rx="2" ry="2" />
<text  x="117.25" y="239.5" ></text>
</g>
<g >
<title>runtime.runqput (4 samples, 0.10%)</title><rect x="19.3" y="165" width="1.2" height="15.0" fill="rgb(210,186,24)" rx="2" ry="2" />
<text  x="22.34" y="175.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.02%)</title><rect x="359.5" y="181" width="0.3" height="15.0" fill="rgb(232,131,54)" rx="2" ry="2" />
<text  x="362.53" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mheap).coalesce (1 samples, 0.02%)</title><rect x="277.8" y="85" width="0.3" height="15.0" fill="rgb(206,9,18)" rx="2" ry="2" />
<text  x="280.77" y="95.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.sizeVarintS32ValueNoZero (1 samples, 0.02%)</title><rect x="181.7" y="197" width="0.3" height="15.0" fill="rgb(228,101,27)" rx="2" ry="2" />
<text  x="184.70" y="207.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (46 samples, 1.14%)</title><rect x="439.8" y="341" width="13.5" height="15.0" fill="rgb(223,208,36)" rx="2" ry="2" />
<text  x="442.83" y="351.5" ></text>
</g>
<g >
<title>runtime.makechan (63 samples, 1.56%)</title><rect x="265.5" y="293" width="18.4" height="15.0" fill="rgb(229,14,38)" rx="2" ry="2" />
<text  x="268.51" y="303.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (6 samples, 0.15%)</title><rect x="272.2" y="261" width="1.8" height="15.0" fill="rgb(237,165,33)" rx="2" ry="2" />
<text  x="275.22" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.02%)</title><rect x="79.2" y="165" width="0.3" height="15.0" fill="rgb(246,207,8)" rx="2" ry="2" />
<text  x="82.21" y="175.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.07%)</title><rect x="76.6" y="181" width="0.9" height="15.0" fill="rgb(233,106,0)" rx="2" ry="2" />
<text  x="79.58" y="191.5" ></text>
</g>
<g >
<title>runtime.notetsleep (10 samples, 0.25%)</title><rect x="1155.3" y="293" width="2.9" height="15.0" fill="rgb(245,224,20)" rx="2" ry="2" />
<text  x="1158.25" y="303.5" ></text>
</g>
<g >
<title>runtime.goready (1 samples, 0.02%)</title><rect x="98.5" y="261" width="0.3" height="15.0" fill="rgb(254,217,22)" rx="2" ry="2" />
<text  x="101.48" y="271.5" ></text>
</g>
<g >
<title>runtime.semawakeup (8 samples, 0.20%)</title><rect x="822.1" y="229" width="2.3" height="15.0" fill="rgb(237,63,6)" rx="2" ry="2" />
<text  x="825.07" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (10 samples, 0.25%)</title><rect x="71.3" y="213" width="2.9" height="15.0" fill="rgb(209,224,23)" rx="2" ry="2" />
<text  x="74.32" y="223.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.02%)</title><rect x="114.8" y="325" width="0.3" height="15.0" fill="rgb(233,178,15)" rx="2" ry="2" />
<text  x="117.83" y="335.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.02%)</title><rect x="79.2" y="149" width="0.3" height="15.0" fill="rgb(234,37,50)" rx="2" ry="2" />
<text  x="82.21" y="159.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast.func1 (1 samples, 0.02%)</title><rect x="1159.0" y="261" width="0.3" height="15.0" fill="rgb(215,120,3)" rx="2" ry="2" />
<text  x="1162.05" y="271.5" ></text>
</g>
<g >
<title>runtime.osyield (1 samples, 0.02%)</title><rect x="410.6" y="245" width="0.3" height="15.0" fill="rgb(215,40,52)" rx="2" ry="2" />
<text  x="413.63" y="255.5" ></text>
</g>
<g >
<title>runtime.acquireSudog (1 samples, 0.02%)</title><rect x="125.3" y="293" width="0.3" height="15.0" fill="rgb(229,4,54)" rx="2" ry="2" />
<text  x="128.34" y="303.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (24 samples, 0.59%)</title><rect x="811.6" y="213" width="7.0" height="15.0" fill="rgb(240,64,29)" rx="2" ry="2" />
<text  x="814.56" y="223.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*Multiplex).run.func2.1 (2 samples, 0.05%)</title><rect x="97.9" y="325" width="0.6" height="15.0" fill="rgb(219,80,18)" rx="2" ry="2" />
<text  x="100.89" y="335.5" ></text>
</g>
<g >
<title>sync.runtime_nanotime (4 samples, 0.10%)</title><rect x="162.7" y="245" width="1.2" height="15.0" fill="rgb(214,6,17)" rx="2" ry="2" />
<text  x="165.72" y="255.5" ></text>
</g>
<g >
<title>runtime.chansend1 (30 samples, 0.74%)</title><rect x="66.1" y="277" width="8.7" height="15.0" fill="rgb(214,123,7)" rx="2" ry="2" />
<text  x="69.07" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).removeNode (1 samples, 0.02%)</title><rect x="97.6" y="85" width="0.3" height="15.0" fill="rgb(243,110,27)" rx="2" ry="2" />
<text  x="100.60" y="95.5" ></text>
</g>
<g >
<title>runtime.scanobject (8 samples, 0.20%)</title><rect x="415.0" y="213" width="2.3" height="15.0" fill="rgb(221,11,23)" rx="2" ry="2" />
<text  x="418.01" y="223.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.appendBytes3 (7 samples, 0.17%)</title><rect x="28.7" y="213" width="2.0" height="15.0" fill="rgb(246,121,52)" rx="2" ry="2" />
<text  x="31.69" y="223.5" ></text>
</g>
<g >
<title>runtime.assertE2I (4 samples, 0.10%)</title><rect x="202.7" y="261" width="1.2" height="15.0" fill="rgb(215,131,10)" rx="2" ry="2" />
<text  x="205.72" y="271.5" ></text>
</g>
<g >
<title>runtime.ready (362 samples, 8.96%)</title><rect x="1049.5" y="293" width="105.8" height="15.0" fill="rgb(205,48,34)" rx="2" ry="2" />
<text  x="1052.54" y="303.5" >runtime.ready</text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.05%)</title><rect x="277.5" y="165" width="0.6" height="15.0" fill="rgb(231,134,14)" rx="2" ry="2" />
<text  x="280.48" y="175.5" ></text>
</g>
<g >
<title>runtime.usleep (1 samples, 0.02%)</title><rect x="464.7" y="245" width="0.2" height="15.0" fill="rgb(233,134,23)" rx="2" ry="2" />
<text  x="467.65" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (2 samples, 0.05%)</title><rect x="277.5" y="213" width="0.6" height="15.0" fill="rgb(219,116,16)" rx="2" ry="2" />
<text  x="280.48" y="223.5" ></text>
</g>
<g >
<title>runtime.gcmarknewobject (1 samples, 0.02%)</title><rect x="76.9" y="165" width="0.3" height="15.0" fill="rgb(216,196,31)" rx="2" ry="2" />
<text  x="79.87" y="175.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc.(*client).call (714 samples, 17.67%)</title><rect x="133.8" y="309" width="208.5" height="15.0" fill="rgb(236,213,49)" rx="2" ry="2" />
<text  x="136.81" y="319.5" >hslam.com/git/x/rpc.(*clien..</text>
</g>
<g >
<title>runtime.notewakeup (34 samples, 0.84%)</title><rect x="832.6" y="245" width="9.9" height="15.0" fill="rgb(244,171,13)" rx="2" ry="2" />
<text  x="835.58" y="255.5" ></text>
</g>
<g >
<title>runtime.getStackMap (15 samples, 0.37%)</title><rect x="443.3" y="165" width="4.4" height="15.0" fill="rgb(228,138,52)" rx="2" ry="2" />
<text  x="446.34" y="175.5" ></text>
</g>
<g >
<title>runtime.selectgo (164 samples, 4.06%)</title><rect x="294.4" y="293" width="47.9" height="15.0" fill="rgb(222,151,18)" rx="2" ry="2" />
<text  x="297.41" y="303.5" >runt..</text>
</g>
<g >
<title>runtime.(*gcBits).bitp (1 samples, 0.02%)</title><rect x="448.6" y="117" width="0.3" height="15.0" fill="rgb(239,107,18)" rx="2" ry="2" />
<text  x="451.59" y="127.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.02%)</title><rect x="409.8" y="277" width="0.2" height="15.0" fill="rgb(252,104,52)" rx="2" ry="2" />
<text  x="412.76" y="287.5" ></text>
</g>
<g >
<title>runtime.casgstatus (3 samples, 0.07%)</title><rect x="73.1" y="165" width="0.8" height="15.0" fill="rgb(218,219,19)" rx="2" ry="2" />
<text  x="76.07" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mspan).refillAllocCache (1 samples, 0.02%)</title><rect x="76.6" y="133" width="0.3" height="15.0" fill="rgb(208,148,4)" rx="2" ry="2" />
<text  x="79.58" y="143.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (1 samples, 0.02%)</title><rect x="421.4" y="277" width="0.3" height="15.0" fill="rgb(225,70,11)" rx="2" ry="2" />
<text  x="424.44" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (2 samples, 0.05%)</title><rect x="277.5" y="245" width="0.6" height="15.0" fill="rgb(250,16,12)" rx="2" ry="2" />
<text  x="280.48" y="255.5" ></text>
</g>
<g >
<title>hslam.com/git/x/rpc/examples/example/pb/service.(*ArithResponse).Reset (8 samples, 0.20%)</title><rect x="189.0" y="245" width="2.3" height="15.0" fill="rgb(222,224,18)" rx="2" ry="2" />
<text  x="192.00" y="255.5" ></text>
</g>
<g >
<title>runtime.getempty (1 samples, 0.02%)</title><rect x="412.7" y="85" width="0.3" height="15.0" fill="rgb(230,30,23)" rx="2" ry="2" />
<text  x="415.68" y="95.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (2 samples, 0.05%)</title><rect x="203.3" y="229" width="0.6" height="15.0" fill="rgb(247,165,4)" rx="2" ry="2" />
<text  x="206.31" y="239.5" ></text>
</g>
<g >
<title>runtime.scanobject (1 samples, 0.02%)</title><rect x="114.8" y="213" width="0.3" height="15.0" fill="rgb(236,211,36)" rx="2" ry="2" />
<text  x="117.83" y="223.5" ></text>
</g>
</g>
</svg>

