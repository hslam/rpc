<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="390.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="373" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="373" > </text>
<g id="frames">
<g >
<title>runtime.notewakeup (1 samples, 0.03%)</title><rect x="10.3" y="133" width="0.3" height="15.0" fill="rgb(217,145,16)" rx="2" ry="2" />
<text  x="13.31" y="143.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (5 samples, 0.13%)</title><rect x="716.2" y="213" width="1.5" height="15.0" fill="rgb(252,93,5)" rx="2" ry="2" />
<text  x="719.18" y="223.5" ></text>
</g>
<g >
<title>runtime.memclrHasPointers (1 samples, 0.03%)</title><rect x="227.3" y="229" width="0.3" height="15.0" fill="rgb(231,17,23)" rx="2" ry="2" />
<text  x="230.34" y="239.5" ></text>
</g>
<g >
<title>runtime.releaseSudog (1 samples, 0.03%)</title><rect x="244.6" y="261" width="0.3" height="15.0" fill="rgb(240,13,29)" rx="2" ry="2" />
<text  x="247.56" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetPacker).getHeader (1 samples, 0.03%)</title><rect x="115.2" y="261" width="0.3" height="15.0" fill="rgb(219,89,39)" rx="2" ry="2" />
<text  x="118.22" y="271.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/pb.(*Response).XXX_Marshal (1 samples, 0.03%)</title><rect x="205.4" y="229" width="0.3" height="15.0" fill="rgb(241,194,5)" rx="2" ry="2" />
<text  x="208.41" y="239.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (89 samples, 2.36%)</title><rect x="154.1" y="117" width="27.8" height="15.0" fill="rgb(252,92,23)" rx="2" ry="2" />
<text  x="157.06" y="127.5" >r..</text>
</g>
<g >
<title>runtime.mapaccess2 (1 samples, 0.03%)</title><rect x="211.4" y="197" width="0.3" height="15.0" fill="rgb(214,195,12)" rx="2" ry="2" />
<text  x="214.36" y="207.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.03%)</title><rect x="81.1" y="213" width="0.3" height="15.0" fill="rgb(223,229,51)" rx="2" ry="2" />
<text  x="84.09" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.03%)</title><rect x="11.9" y="229" width="0.3" height="15.0" fill="rgb(219,64,38)" rx="2" ry="2" />
<text  x="14.88" y="239.5" ></text>
</g>
<g >
<title>time.stopTimer (2 samples, 0.05%)</title><rect x="109.6" y="261" width="0.6" height="15.0" fill="rgb(230,145,12)" rx="2" ry="2" />
<text  x="112.59" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpanLocked (1 samples, 0.03%)</title><rect x="11.9" y="133" width="0.3" height="15.0" fill="rgb(219,85,21)" rx="2" ry="2" />
<text  x="14.88" y="143.5" ></text>
</g>
<g >
<title>runtime.aeshash64 (1 samples, 0.03%)</title><rect x="184.4" y="213" width="0.3" height="15.0" fill="rgb(209,196,23)" rx="2" ry="2" />
<text  x="187.43" y="223.5" ></text>
</g>
<g >
<title>runtime.selectnbsend (5 samples, 0.13%)</title><rect x="76.4" y="181" width="1.6" height="15.0" fill="rgb(205,215,24)" rx="2" ry="2" />
<text  x="79.39" y="191.5" ></text>
</g>
<g >
<title>runtime.gcDrain (1 samples, 0.03%)</title><rect x="1005.2" y="277" width="0.3" height="15.0" fill="rgb(227,13,39)" rx="2" ry="2" />
<text  x="1008.23" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHistory).GetPacket (1 samples, 0.03%)</title><rect x="74.2" y="213" width="0.3" height="15.0" fill="rgb(206,54,35)" rx="2" ry="2" />
<text  x="77.20" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.ParsePacket (6 samples, 0.16%)</title><rect x="82.3" y="293" width="1.9" height="15.0" fill="rgb(245,162,54)" rx="2" ry="2" />
<text  x="85.34" y="303.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetBuffer).putBack (1 samples, 0.03%)</title><rect x="71.1" y="277" width="0.3" height="15.0" fill="rgb(246,144,15)" rx="2" ry="2" />
<text  x="74.07" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).handleUnpackedPacket (28 samples, 0.74%)</title><rect x="73.3" y="277" width="8.7" height="15.0" fill="rgb(231,40,51)" rx="2" ry="2" />
<text  x="76.26" y="287.5" ></text>
</g>
<g >
<title>reflect.Value.Call (12 samples, 0.32%)</title><rect x="206.0" y="229" width="3.8" height="15.0" fill="rgb(213,3,17)" rx="2" ry="2" />
<text  x="209.04" y="239.5" ></text>
</g>
<g >
<title>runtime.chansend (2 samples, 0.05%)</title><rect x="243.6" y="229" width="0.6" height="15.0" fill="rgb(240,226,51)" rx="2" ry="2" />
<text  x="246.62" y="239.5" ></text>
</g>
<g >
<title>runtime.mput (1 samples, 0.03%)</title><rect x="401.8" y="245" width="0.3" height="15.0" fill="rgb(205,212,31)" rx="2" ry="2" />
<text  x="404.77" y="255.5" ></text>
</g>
<g >
<title>net.(*UDPConn).ReadFrom (180 samples, 4.78%)</title><rect x="13.8" y="309" width="56.3" height="15.0" fill="rgb(210,41,4)" rx="2" ry="2" />
<text  x="16.76" y="319.5" >net.(..</text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.03%)</title><rect x="83.0" y="229" width="0.3" height="15.0" fill="rgb(227,107,17)" rx="2" ry="2" />
<text  x="85.97" y="239.5" ></text>
</g>
<g >
<title>runtime.ready (2 samples, 0.05%)</title><rect x="77.3" y="85" width="0.7" height="15.0" fill="rgb(249,35,47)" rx="2" ry="2" />
<text  x="80.33" y="95.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.03%)</title><rect x="153.7" y="117" width="0.4" height="15.0" fill="rgb(208,65,51)" rx="2" ry="2" />
<text  x="156.74" y="127.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).scheduleSending (2 samples, 0.05%)</title><rect x="243.6" y="261" width="0.6" height="15.0" fill="rgb(229,117,25)" rx="2" ry="2" />
<text  x="246.62" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*receivedPacketHandler).GetAckFrame (3 samples, 0.08%)</title><rect x="114.0" y="245" width="0.9" height="15.0" fill="rgb(228,15,26)" rx="2" ry="2" />
<text  x="116.97" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.08%)</title><rect x="82.3" y="245" width="1.0" height="15.0" fill="rgb(207,228,30)" rx="2" ry="2" />
<text  x="85.34" y="255.5" ></text>
</g>
<g >
<title>runtime.add (1 samples, 0.03%)</title><rect x="75.8" y="149" width="0.3" height="15.0" fill="rgb(207,81,50)" rx="2" ry="2" />
<text  x="78.76" y="159.5" ></text>
</g>
<g >
<title>runtime.nanotime (4 samples, 0.11%)</title><rect x="1151.8" y="309" width="1.2" height="15.0" fill="rgb(230,155,19)" rx="2" ry="2" />
<text  x="1154.79" y="319.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*ExtendedHeader).writeShortHeader (1 samples, 0.03%)</title><rect x="116.8" y="229" width="0.3" height="15.0" fill="rgb(216,148,37)" rx="2" ry="2" />
<text  x="119.79" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*frameSorter).Pop (30 samples, 0.80%)</title><rect x="218.3" y="261" width="9.3" height="15.0" fill="rgb(229,195,26)" rx="2" ry="2" />
<text  x="221.25" y="271.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/examples/example/pb/service.(*ArithRequest).Reset (1 samples, 0.03%)</title><rect x="213.6" y="213" width="0.3" height="15.0" fill="rgb(242,163,26)" rx="2" ry="2" />
<text  x="216.56" y="223.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).WriteTo (198 samples, 5.25%)</title><rect x="119.9" y="197" width="62.0" height="15.0" fill="rgb(231,69,4)" rx="2" ry="2" />
<text  x="122.92" y="207.5" >intern..</text>
</g>
<g >
<title>runtime.ready (459 samples, 12.18%)</title><rect x="1007.1" y="277" width="143.8" height="15.0" fill="rgb(208,96,27)" rx="2" ry="2" />
<text  x="1010.11" y="287.5" >runtime.ready</text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.(*Server).ServeRPC (39 samples, 1.04%)</title><rect x="203.2" y="309" width="12.2" height="15.0" fill="rgb(224,196,51)" rx="2" ry="2" />
<text  x="206.22" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.03%)</title><rect x="117.1" y="229" width="0.3" height="15.0" fill="rgb(247,121,24)" rx="2" ry="2" />
<text  x="120.10" y="239.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.03%)</title><rect x="114.0" y="181" width="0.3" height="15.0" fill="rgb(239,98,25)" rx="2" ry="2" />
<text  x="116.97" y="191.5" ></text>
</g>
<g >
<title>bytes.NewReader (1 samples, 0.03%)</title><rect x="73.6" y="261" width="0.3" height="15.0" fill="rgb(245,154,25)" rx="2" ry="2" />
<text  x="76.57" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).find (1 samples, 0.03%)</title><rect x="11.9" y="101" width="0.3" height="15.0" fill="rgb(236,201,48)" rx="2" ry="2" />
<text  x="14.88" y="111.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.03%)</title><rect x="79.8" y="197" width="0.3" height="15.0" fill="rgb(221,120,46)" rx="2" ry="2" />
<text  x="82.84" y="207.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.03%)</title><rect x="78.6" y="181" width="0.3" height="15.0" fill="rgb(239,64,36)" rx="2" ry="2" />
<text  x="81.58" y="191.5" ></text>
</g>
<g >
<title>runtime.netpoll (1 samples, 0.03%)</title><rect x="1006.8" y="261" width="0.3" height="15.0" fill="rgb(230,221,43)" rx="2" ry="2" />
<text  x="1009.80" y="271.5" ></text>
</g>
<g >
<title>runtime.walltime (2 samples, 0.05%)</title><rect x="201.3" y="277" width="0.7" height="15.0" fill="rgb(232,175,15)" rx="2" ry="2" />
<text  x="204.34" y="287.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (994 samples, 26.38%)</title><rect x="403.3" y="213" width="311.3" height="15.0" fill="rgb(212,23,42)" rx="2" ry="2" />
<text  x="406.33" y="223.5" >runtime.pthread_cond_wait</text>
</g>
<g >
<title>runtime.newobject (4 samples, 0.11%)</title><rect x="68.9" y="277" width="1.2" height="15.0" fill="rgb(227,114,6)" rx="2" ry="2" />
<text  x="71.87" y="287.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.03%)</title><rect x="13.1" y="245" width="0.3" height="15.0" fill="rgb(251,27,13)" rx="2" ry="2" />
<text  x="16.13" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*receiveStream).handleStreamFrame (12 samples, 0.32%)</title><rect x="75.1" y="229" width="3.8" height="15.0" fill="rgb(207,194,0)" rx="2" ry="2" />
<text  x="78.14" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetHandlerMap).listen (192 samples, 5.10%)</title><rect x="10.0" y="325" width="60.1" height="15.0" fill="rgb(225,69,45)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >github..</text>
</g>
<g >
<title>runtime.notesleep (4 samples, 0.11%)</title><rect x="248.6" y="245" width="1.3" height="15.0" fill="rgb(245,210,10)" rx="2" ry="2" />
<text  x="251.63" y="255.5" ></text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.05%)</title><rect x="744.7" y="245" width="0.6" height="15.0" fill="rgb(222,141,3)" rx="2" ry="2" />
<text  x="747.68" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetPacker).PackPacket (26 samples, 0.69%)</title><rect x="111.2" y="277" width="8.1" height="15.0" fill="rgb(214,139,25)" rx="2" ry="2" />
<text  x="114.15" y="287.5" ></text>
</g>
<g >
<title>runtime.selectgo (4 samples, 0.11%)</title><rect x="216.7" y="309" width="1.2" height="15.0" fill="rgb(240,219,32)" rx="2" ry="2" />
<text  x="219.69" y="319.5" ></text>
</g>
<g >
<title>runtime.nilinterhash (1 samples, 0.03%)</title><rect x="211.4" y="181" width="0.3" height="15.0" fill="rgb(252,158,5)" rx="2" ry="2" />
<text  x="214.36" y="191.5" ></text>
</g>
<g >
<title>runtime.forEachP (4 samples, 0.11%)</title><rect x="1005.5" y="277" width="1.3" height="15.0" fill="rgb(244,163,4)" rx="2" ry="2" />
<text  x="1008.55" y="287.5" ></text>
</g>
<g >
<title>runtime.mstart (1,298 samples, 34.45%)</title><rect x="744.4" y="325" width="406.5" height="15.0" fill="rgb(244,193,22)" rx="2" ry="2" />
<text  x="747.37" y="335.5" >runtime.mstart</text>
</g>
<g >
<title>runtime.netpoll (1 samples, 0.03%)</title><rect x="247.7" y="261" width="0.3" height="15.0" fill="rgb(225,101,53)" rx="2" ry="2" />
<text  x="250.69" y="271.5" ></text>
</g>
<g >
<title>runtime.freedefer (1 samples, 0.03%)</title><rect x="82.0" y="261" width="0.3" height="15.0" fill="rgb(242,191,5)" rx="2" ry="2" />
<text  x="85.03" y="271.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.03%)</title><rect x="401.5" y="229" width="0.3" height="15.0" fill="rgb(231,137,46)" rx="2" ry="2" />
<text  x="404.45" y="239.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (1 samples, 0.03%)</title><rect x="113.7" y="229" width="0.3" height="15.0" fill="rgb(215,14,52)" rx="2" ry="2" />
<text  x="116.66" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.03%)</title><rect x="82.7" y="229" width="0.3" height="15.0" fill="rgb(236,11,37)" rx="2" ry="2" />
<text  x="85.65" y="239.5" ></text>
</g>
<g >
<title>runtime.newobject (3 samples, 0.08%)</title><rect x="82.3" y="261" width="1.0" height="15.0" fill="rgb(219,51,40)" rx="2" ry="2" />
<text  x="85.34" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/flowcontrol.(*streamFlowController).AddBytesSent (1 samples, 0.03%)</title><rect x="112.1" y="181" width="0.3" height="15.0" fill="rgb(247,97,40)" rx="2" ry="2" />
<text  x="115.09" y="191.5" ></text>
</g>
<g >
<title>runtime.gcDrainN (1 samples, 0.03%)</title><rect x="69.5" y="181" width="0.3" height="15.0" fill="rgb(222,211,4)" rx="2" ry="2" />
<text  x="72.50" y="191.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.05%)</title><rect x="10.3" y="213" width="0.6" height="15.0" fill="rgb(233,176,25)" rx="2" ry="2" />
<text  x="13.31" y="223.5" ></text>
</g>
<g >
<title>reflect.Value.call (12 samples, 0.32%)</title><rect x="206.0" y="213" width="3.8" height="15.0" fill="rgb(228,128,0)" rx="2" ry="2" />
<text  x="209.04" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).freeSpan (1 samples, 0.03%)</title><rect x="247.1" y="277" width="0.3" height="15.0" fill="rgb(249,156,23)" rx="2" ry="2" />
<text  x="250.06" y="287.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.03%)</title><rect x="210.1" y="229" width="0.3" height="15.0" fill="rgb(231,30,54)" rx="2" ry="2" />
<text  x="213.11" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).pickFreeSpan (1 samples, 0.03%)</title><rect x="11.9" y="117" width="0.3" height="15.0" fill="rgb(234,146,26)" rx="2" ry="2" />
<text  x="14.88" y="127.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Write (1 samples, 0.03%)</title><rect x="116.5" y="213" width="0.3" height="15.0" fill="rgb(247,33,30)" rx="2" ry="2" />
<text  x="119.48" y="223.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (1 samples, 0.03%)</title><rect x="1005.2" y="293" width="0.3" height="15.0" fill="rgb(243,161,49)" rx="2" ry="2" />
<text  x="1008.23" y="303.5" ></text>
</g>
<g >
<title>runtime.procyield (1 samples, 0.03%)</title><rect x="10.0" y="229" width="0.3" height="15.0" fill="rgb(211,129,4)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_fast64 (1 samples, 0.03%)</title><rect x="75.5" y="165" width="0.3" height="15.0" fill="rgb(213,138,3)" rx="2" ry="2" />
<text  x="78.45" y="175.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*receivedPacketTracker).GetAckFrame (2 samples, 0.05%)</title><rect x="115.8" y="229" width="0.7" height="15.0" fill="rgb(251,22,14)" rx="2" ry="2" />
<text  x="118.85" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*receiveStream).readImpl (36 samples, 0.96%)</title><rect x="217.9" y="293" width="11.3" height="15.0" fill="rgb(232,226,9)" rx="2" ry="2" />
<text  x="220.94" y="303.5" ></text>
</g>
<g >
<title>syscall.libc_recvfrom_trampoline (1 samples, 0.03%)</title><rect x="1151.5" y="309" width="0.3" height="15.0" fill="rgb(235,3,2)" rx="2" ry="2" />
<text  x="1154.48" y="319.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1 samples, 0.03%)</title><rect x="209.5" y="181" width="0.3" height="15.0" fill="rgb(215,33,48)" rx="2" ry="2" />
<text  x="212.49" y="191.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.03%)</title><rect x="115.8" y="181" width="0.4" height="15.0" fill="rgb(245,27,6)" rx="2" ry="2" />
<text  x="118.85" y="191.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetUnpacker).Unpack (6 samples, 0.16%)</title><rect x="71.4" y="277" width="1.9" height="15.0" fill="rgb(214,14,37)" rx="2" ry="2" />
<text  x="74.38" y="287.5" ></text>
</g>
<g >
<title>net.(*netFD).readFrom (173 samples, 4.59%)</title><rect x="14.7" y="277" width="54.2" height="15.0" fill="rgb(221,180,14)" rx="2" ry="2" />
<text  x="17.70" y="287.5" >net.(..</text>
</g>
<g >
<title>io.ReadAtLeast (2 samples, 0.05%)</title><rect x="83.6" y="197" width="0.6" height="15.0" fill="rgb(232,220,2)" rx="2" ry="2" />
<text  x="86.59" y="207.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.03%)</title><rect x="739.4" y="181" width="0.3" height="15.0" fill="rgb(219,23,26)" rx="2" ry="2" />
<text  x="742.36" y="191.5" ></text>
</g>
<g >
<title>runtime.notetsleepg (118 samples, 3.13%)</title><rect x="1153.0" y="309" width="37.0" height="15.0" fill="rgb(253,216,6)" rx="2" ry="2" />
<text  x="1156.05" y="319.5" >run..</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.parseHeaderImpl (2 samples, 0.05%)</title><rect x="83.6" y="261" width="0.6" height="15.0" fill="rgb(237,206,43)" rx="2" ry="2" />
<text  x="86.59" y="271.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock_handoff (1 samples, 0.03%)</title><rect x="153.7" y="101" width="0.4" height="15.0" fill="rgb(209,8,24)" rx="2" ry="2" />
<text  x="156.74" y="111.5" ></text>
</g>
<g >
<title>runtime.mstart1 (430 samples, 11.41%)</title><rect x="744.4" y="309" width="134.6" height="15.0" fill="rgb(220,45,29)" rx="2" ry="2" />
<text  x="747.37" y="319.5" >runtime.mstart1</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).maybeResetTimer (84 samples, 2.23%)</title><rect x="84.2" y="309" width="26.3" height="15.0" fill="rgb(205,133,36)" rx="2" ry="2" />
<text  x="87.22" y="319.5" >g..</text>
</g>
<g >
<title>all (3,768 samples, 100%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(226,13,43)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>runtime.systemstack (868 samples, 23.04%)</title><rect x="879.0" y="309" width="271.9" height="15.0" fill="rgb(220,169,26)" rx="2" ry="2" />
<text  x="882.03" y="319.5" >runtime.systemstack</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetPacker).composeNextPacket (13 samples, 0.35%)</title><rect x="111.2" y="261" width="4.0" height="15.0" fill="rgb(242,69,15)" rx="2" ry="2" />
<text  x="114.15" y="271.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.05%)</title><rect x="11.9" y="293" width="0.6" height="15.0" fill="rgb(208,129,11)" rx="2" ry="2" />
<text  x="14.88" y="303.5" ></text>
</g>
<g >
<title>runtime._System (3 samples, 0.08%)</title><rect x="245.2" y="325" width="0.9" height="15.0" fill="rgb(205,151,4)" rx="2" ry="2" />
<text  x="248.19" y="335.5" ></text>
</g>
<g >
<title>runtime.stopm (4 samples, 0.11%)</title><rect x="249.9" y="293" width="1.2" height="15.0" fill="rgb(228,217,47)" rx="2" ry="2" />
<text  x="252.88" y="303.5" ></text>
</g>
<g >
<title>runtime.asmcgocall (1 samples, 0.03%)</title><rect x="115.8" y="149" width="0.4" height="15.0" fill="rgb(248,3,28)" rx="2" ry="2" />
<text  x="118.85" y="159.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.(*Request).Decode (3 samples, 0.08%)</title><rect x="204.5" y="261" width="0.9" height="15.0" fill="rgb(253,43,35)" rx="2" ry="2" />
<text  x="207.47" y="271.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone.func1 (4 samples, 0.11%)</title><rect x="1005.5" y="293" width="1.3" height="15.0" fill="rgb(254,210,29)" rx="2" ry="2" />
<text  x="1008.55" y="303.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/protocol.ReadStream (39 samples, 1.04%)</title><rect x="217.9" y="325" width="12.3" height="15.0" fill="rgb(252,30,33)" rx="2" ry="2" />
<text  x="220.94" y="335.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (78 samples, 2.07%)</title><rect x="1165.6" y="261" width="24.4" height="15.0" fill="rgb(242,216,52)" rx="2" ry="2" />
<text  x="1168.57" y="271.5" >r..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.03%)</title><rect x="203.2" y="181" width="0.3" height="15.0" fill="rgb(235,195,37)" rx="2" ry="2" />
<text  x="206.22" y="191.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*receivedPacketHandler).GetAlarmTimeout (3 samples, 0.08%)</title><rect x="84.8" y="293" width="1.0" height="15.0" fill="rgb(229,167,6)" rx="2" ry="2" />
<text  x="87.85" y="303.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Unmarshal (1 samples, 0.03%)</title><rect x="203.2" y="245" width="0.3" height="15.0" fill="rgb(212,159,25)" rx="2" ry="2" />
<text  x="206.22" y="255.5" ></text>
</g>
<g >
<title>runtime.convT64 (1 samples, 0.03%)</title><rect x="215.1" y="261" width="0.3" height="15.0" fill="rgb(232,188,43)" rx="2" ry="2" />
<text  x="218.12" y="271.5" ></text>
</g>
<g >
<title>runtime.chanrecv (2 samples, 0.05%)</title><rect x="244.2" y="277" width="0.7" height="15.0" fill="rgb(208,137,54)" rx="2" ry="2" />
<text  x="247.25" y="287.5" ></text>
</g>
<g >
<title>runtime.lock (2 samples, 0.05%)</title><rect x="200.1" y="277" width="0.6" height="15.0" fill="rgb(235,200,20)" rx="2" ry="2" />
<text  x="203.09" y="287.5" ></text>
</g>
<g >
<title>runtime.semasleep (4 samples, 0.11%)</title><rect x="1005.5" y="229" width="1.3" height="15.0" fill="rgb(247,114,40)" rx="2" ry="2" />
<text  x="1008.55" y="239.5" ></text>
</g>
<g >
<title>runtime.stopm (1,011 samples, 26.83%)</title><rect x="401.1" y="261" width="316.6" height="15.0" fill="rgb(211,210,33)" rx="2" ry="2" />
<text  x="404.14" y="271.5" >runtime.stopm</text>
</g>
<g >
<title>runtime.sellock (3 samples, 0.08%)</title><rect x="199.8" y="293" width="0.9" height="15.0" fill="rgb(225,107,10)" rx="2" ry="2" />
<text  x="202.78" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc_m (1 samples, 0.03%)</title><rect x="11.9" y="149" width="0.3" height="15.0" fill="rgb(208,36,19)" rx="2" ry="2" />
<text  x="14.88" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (1 samples, 0.03%)</title><rect x="11.9" y="165" width="0.3" height="15.0" fill="rgb(246,200,3)" rx="2" ry="2" />
<text  x="14.88" y="175.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc.func1 (1 samples, 0.03%)</title><rect x="69.5" y="213" width="0.3" height="15.0" fill="rgb(236,102,18)" rx="2" ry="2" />
<text  x="72.50" y="223.5" ></text>
</g>
<g >
<title>runtime.mapdelete_fast64 (30 samples, 0.80%)</title><rect x="218.3" y="245" width="9.3" height="15.0" fill="rgb(241,188,5)" rx="2" ry="2" />
<text  x="221.25" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).handleFrame (20 samples, 0.53%)</title><rect x="73.9" y="261" width="6.2" height="15.0" fill="rgb(224,148,30)" rx="2" ry="2" />
<text  x="76.89" y="271.5" ></text>
</g>
<g >
<title>reflect.methodReceiver (2 samples, 0.05%)</title><rect x="208.9" y="197" width="0.6" height="15.0" fill="rgb(222,185,24)" rx="2" ry="2" />
<text  x="211.86" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (1 samples, 0.03%)</title><rect x="717.7" y="213" width="0.4" height="15.0" fill="rgb(235,82,32)" rx="2" ry="2" />
<text  x="720.75" y="223.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.03%)</title><rect x="348.8" y="229" width="0.4" height="15.0" fill="rgb(213,25,36)" rx="2" ry="2" />
<text  x="351.84" y="239.5" ></text>
</g>
<g >
<title>runtime.notesleep (1 samples, 0.03%)</title><rect x="717.7" y="245" width="0.4" height="15.0" fill="rgb(210,121,37)" rx="2" ry="2" />
<text  x="720.75" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*frameParser).parseFrame (5 samples, 0.13%)</title><rect x="80.5" y="245" width="1.5" height="15.0" fill="rgb(254,47,19)" rx="2" ry="2" />
<text  x="83.46" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.03%)</title><rect x="11.9" y="197" width="0.3" height="15.0" fill="rgb(223,72,20)" rx="2" ry="2" />
<text  x="14.88" y="207.5" ></text>
</g>
<g >
<title>reflect.typedmemclrpartial (1 samples, 0.03%)</title><rect x="209.5" y="197" width="0.3" height="15.0" fill="rgb(233,194,47)" rx="2" ry="2" />
<text  x="212.49" y="207.5" ></text>
</g>
<g >
<title>runtime.aeshash64 (1 samples, 0.03%)</title><rect x="74.2" y="181" width="0.3" height="15.0" fill="rgb(247,166,43)" rx="2" ry="2" />
<text  x="77.20" y="191.5" ></text>
</g>
<g >
<title>runtime.handoffp (1 samples, 0.03%)</title><rect x="153.7" y="85" width="0.4" height="15.0" fill="rgb(226,199,11)" rx="2" ry="2" />
<text  x="156.74" y="95.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/handshake.(*opener).Open (1 samples, 0.03%)</title><rect x="72.6" y="261" width="0.3" height="15.0" fill="rgb(239,16,1)" rx="2" ry="2" />
<text  x="75.63" y="271.5" ></text>
</g>
<g >
<title>runtime.unlock (2 samples, 0.05%)</title><rect x="743.7" y="277" width="0.7" height="15.0" fill="rgb(252,7,45)" rx="2" ry="2" />
<text  x="746.74" y="287.5" ></text>
</g>
<g >
<title>runtime.duffzero (1 samples, 0.03%)</title><rect x="15.3" y="229" width="0.3" height="15.0" fill="rgb(237,171,17)" rx="2" ry="2" />
<text  x="18.32" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.03%)</title><rect x="11.9" y="213" width="0.3" height="15.0" fill="rgb(214,45,22)" rx="2" ry="2" />
<text  x="14.88" y="223.5" ></text>
</g>
<g >
<title>runtime.addtimer (74 samples, 1.96%)</title><rect x="86.4" y="245" width="23.2" height="15.0" fill="rgb(235,42,25)" rx="2" ry="2" />
<text  x="89.41" y="255.5" >r..</text>
</g>
<g >
<title>runtime.deferreturn (2 samples, 0.05%)</title><rect x="10.9" y="293" width="0.7" height="15.0" fill="rgb(226,189,47)" rx="2" ry="2" />
<text  x="13.94" y="303.5" ></text>
</g>
<g >
<title>runtime.kevent (1 samples, 0.03%)</title><rect x="1006.8" y="245" width="0.3" height="15.0" fill="rgb(234,15,47)" rx="2" ry="2" />
<text  x="1009.80" y="255.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.03%)</title><rect x="216.4" y="181" width="0.3" height="15.0" fill="rgb(241,115,52)" rx="2" ry="2" />
<text  x="219.37" y="191.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/protocol.UnpackStream (3 samples, 0.08%)</title><rect x="229.2" y="309" width="1.0" height="15.0" fill="rgb(254,123,1)" rx="2" ry="2" />
<text  x="232.21" y="319.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).handleAckFrame (2 samples, 0.05%)</title><rect x="73.9" y="245" width="0.6" height="15.0" fill="rgb(221,33,18)" rx="2" ry="2" />
<text  x="76.89" y="255.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.03%)</title><rect x="715.9" y="197" width="0.3" height="15.0" fill="rgb(212,166,27)" rx="2" ry="2" />
<text  x="718.87" y="207.5" ></text>
</g>
<g >
<title>runtime.semasleep (79 samples, 2.10%)</title><rect x="810.8" y="245" width="24.7" height="15.0" fill="rgb(226,51,46)" rx="2" ry="2" />
<text  x="813.76" y="255.5" >r..</text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.(*Server).CallService (30 samples, 0.80%)</title><rect x="205.7" y="261" width="9.4" height="15.0" fill="rgb(239,43,54)" rx="2" ry="2" />
<text  x="208.73" y="271.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.unmarshalBytesValue (1 samples, 0.03%)</title><rect x="203.2" y="213" width="0.3" height="15.0" fill="rgb(253,101,35)" rx="2" ry="2" />
<text  x="206.22" y="223.5" ></text>
</g>
<g >
<title>runtime.aeshashbody (1 samples, 0.03%)</title><rect x="211.4" y="165" width="0.3" height="15.0" fill="rgb(223,102,25)" rx="2" ry="2" />
<text  x="214.36" y="175.5" ></text>
</g>
<g >
<title>runtime.funcPC (1 samples, 0.03%)</title><rect x="60.7" y="69" width="0.3" height="15.0" fill="rgb(239,68,40)" rx="2" ry="2" />
<text  x="63.73" y="79.5" ></text>
</g>
<g >
<title>runtime.checkdead (1 samples, 0.03%)</title><rect x="401.8" y="229" width="0.3" height="15.0" fill="rgb(210,127,15)" rx="2" ry="2" />
<text  x="404.77" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (4 samples, 0.11%)</title><rect x="1005.5" y="213" width="1.3" height="15.0" fill="rgb(253,195,43)" rx="2" ry="2" />
<text  x="1008.55" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.03%)</title><rect x="114.0" y="197" width="0.3" height="15.0" fill="rgb(219,159,24)" rx="2" ry="2" />
<text  x="116.97" y="207.5" ></text>
</g>
<g >
<title>reflect.Value.Type (1 samples, 0.03%)</title><rect x="209.8" y="229" width="0.3" height="15.0" fill="rgb(251,192,10)" rx="2" ry="2" />
<text  x="212.80" y="239.5" ></text>
</g>
<g >
<title>runtime.kevent (1 samples, 0.03%)</title><rect x="1005.2" y="229" width="0.3" height="15.0" fill="rgb(206,104,47)" rx="2" ry="2" />
<text  x="1008.23" y="239.5" ></text>
</g>
<g >
<title>runtime.resolveTypeOff (2 samples, 0.05%)</title><rect x="212.9" y="165" width="0.7" height="15.0" fill="rgb(220,131,10)" rx="2" ry="2" />
<text  x="215.93" y="175.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/protocol.WriteStream (48 samples, 1.27%)</title><rect x="230.2" y="325" width="15.0" height="15.0" fill="rgb(244,201,41)" rx="2" ry="2" />
<text  x="233.15" y="335.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.parseHeader (3 samples, 0.08%)</title><rect x="83.3" y="277" width="0.9" height="15.0" fill="rgb(215,133,18)" rx="2" ry="2" />
<text  x="86.28" y="287.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.03%)</title><rect x="82.0" y="277" width="0.3" height="15.0" fill="rgb(250,205,11)" rx="2" ry="2" />
<text  x="85.03" y="287.5" ></text>
</g>
<g >
<title>runtime.walltime (1 samples, 0.03%)</title><rect x="116.2" y="181" width="0.3" height="15.0" fill="rgb(254,86,36)" rx="2" ry="2" />
<text  x="119.16" y="191.5" ></text>
</g>
<g >
<title>runtime.goready (3 samples, 0.08%)</title><rect x="215.7" y="261" width="1.0" height="15.0" fill="rgb(248,102,46)" rx="2" ry="2" />
<text  x="218.75" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*receiveStream).Read (36 samples, 0.96%)</title><rect x="217.9" y="309" width="11.3" height="15.0" fill="rgb(234,159,28)" rx="2" ry="2" />
<text  x="220.94" y="319.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.03%)</title><rect x="214.5" y="197" width="0.3" height="15.0" fill="rgb(220,32,17)" rx="2" ry="2" />
<text  x="217.50" y="207.5" ></text>
</g>
<g >
<title>runtime.startm (80 samples, 2.12%)</title><rect x="718.1" y="245" width="25.0" height="15.0" fill="rgb(242,93,13)" rx="2" ry="2" />
<text  x="721.06" y="255.5" >r..</text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.03%)</title><rect x="72.0" y="213" width="0.3" height="15.0" fill="rgb(247,201,1)" rx="2" ry="2" />
<text  x="75.01" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/flowcontrol.(*baseFlowController).hasWindowUpdate (1 samples, 0.03%)</title><rect x="227.6" y="229" width="0.4" height="15.0" fill="rgb(237,211,41)" rx="2" ry="2" />
<text  x="230.65" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.03%)</title><rect x="11.9" y="245" width="0.3" height="15.0" fill="rgb(243,168,37)" rx="2" ry="2" />
<text  x="14.88" y="255.5" ></text>
</g>
<g >
<title>runtime.selectnbsend (1 samples, 0.03%)</title><rect x="111.8" y="165" width="0.3" height="15.0" fill="rgb(233,204,18)" rx="2" ry="2" />
<text  x="114.78" y="175.5" ></text>
</g>
<g >
<title>runtime.(*_type).textOff (1 samples, 0.03%)</title><rect x="208.9" y="149" width="0.3" height="15.0" fill="rgb(250,218,40)" rx="2" ry="2" />
<text  x="211.86" y="159.5" ></text>
</g>
<g >
<title>io.ReadFull (2 samples, 0.05%)</title><rect x="83.6" y="213" width="0.6" height="15.0" fill="rgb(221,107,33)" rx="2" ry="2" />
<text  x="86.59" y="223.5" ></text>
</g>
<g >
<title>runtime.newdefer (1 samples, 0.03%)</title><rect x="182.2" y="245" width="0.4" height="15.0" fill="rgb(231,130,24)" rx="2" ry="2" />
<text  x="185.24" y="255.5" ></text>
</g>
<g >
<title>runtime.deferArgs (1 samples, 0.03%)</title><rect x="78.0" y="165" width="0.3" height="15.0" fill="rgb(229,69,2)" rx="2" ry="2" />
<text  x="80.96" y="175.5" ></text>
</g>
<g >
<title>runtime.runSafePointFn (1 samples, 0.03%)</title><rect x="349.5" y="261" width="0.3" height="15.0" fill="rgb(220,146,9)" rx="2" ry="2" />
<text  x="352.47" y="271.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="835.2" y="229" width="0.3" height="15.0" fill="rgb(211,169,48)" rx="2" ry="2" />
<text  x="838.19" y="239.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Marshal (1 samples, 0.03%)</title><rect x="205.4" y="213" width="0.3" height="15.0" fill="rgb(243,166,17)" rx="2" ry="2" />
<text  x="208.41" y="223.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Marshal (1 samples, 0.03%)</title><rect x="203.8" y="245" width="0.4" height="15.0" fill="rgb(219,197,25)" rx="2" ry="2" />
<text  x="206.85" y="255.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Unmarshal (1 samples, 0.03%)</title><rect x="213.9" y="197" width="0.3" height="15.0" fill="rgb(227,143,14)" rx="2" ry="2" />
<text  x="216.87" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.03%)</title><rect x="112.4" y="165" width="0.3" height="15.0" fill="rgb(248,218,47)" rx="2" ry="2" />
<text  x="115.40" y="175.5" ></text>
</g>
<g >
<title>runtime.gcstopm (1 samples, 0.03%)</title><rect x="717.7" y="277" width="0.4" height="15.0" fill="rgb(208,128,30)" rx="2" ry="2" />
<text  x="720.75" y="287.5" ></text>
</g>
<g >
<title>reflect.(*rtype).In (2 samples, 0.05%)</title><rect x="211.7" y="229" width="0.6" height="15.0" fill="rgb(215,80,50)" rx="2" ry="2" />
<text  x="214.68" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.03%)</title><rect x="247.1" y="245" width="0.3" height="15.0" fill="rgb(234,205,49)" rx="2" ry="2" />
<text  x="250.06" y="255.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (1 samples, 0.03%)</title><rect x="111.8" y="85" width="0.3" height="15.0" fill="rgb(225,98,51)" rx="2" ry="2" />
<text  x="114.78" y="95.5" ></text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.03%)</title><rect x="112.4" y="181" width="0.3" height="15.0" fill="rgb(206,229,49)" rx="2" ry="2" />
<text  x="115.40" y="191.5" ></text>
</g>
<g >
<title>runtime.notesleep (1,008 samples, 26.75%)</title><rect x="402.1" y="245" width="315.6" height="15.0" fill="rgb(245,94,19)" rx="2" ry="2" />
<text  x="405.08" y="255.5" >runtime.notesleep</text>
</g>
<g >
<title>runtime.semawakeup (1 samples, 0.03%)</title><rect x="349.5" y="229" width="0.3" height="15.0" fill="rgb(253,83,29)" rx="2" ry="2" />
<text  x="352.47" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.03%)</title><rect x="111.8" y="101" width="0.3" height="15.0" fill="rgb(212,121,5)" rx="2" ry="2" />
<text  x="114.78" y="111.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.03%)</title><rect x="153.7" y="69" width="0.4" height="15.0" fill="rgb(229,195,42)" rx="2" ry="2" />
<text  x="156.74" y="79.5" ></text>
</g>
<g >
<title>runtime.asmcgocall (3 samples, 0.08%)</title><rect x="246.1" y="325" width="1.0" height="15.0" fill="rgb(226,118,34)" rx="2" ry="2" />
<text  x="249.13" y="335.5" ></text>
</g>
<g >
<title>net.(*UDPConn).WriteTo (199 samples, 5.28%)</title><rect x="119.6" y="245" width="62.3" height="15.0" fill="rgb(252,29,20)" rx="2" ry="2" />
<text  x="122.61" y="255.5" >net.(*..</text>
</g>
<g >
<title>runtime.releaseSudog (1 samples, 0.03%)</title><rect x="228.9" y="245" width="0.3" height="15.0" fill="rgb(228,178,5)" rx="2" ry="2" />
<text  x="231.90" y="255.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.03%)</title><rect x="73.6" y="245" width="0.3" height="15.0" fill="rgb(208,90,25)" rx="2" ry="2" />
<text  x="76.57" y="255.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (441 samples, 11.70%)</title><rect x="1007.1" y="197" width="138.1" height="15.0" fill="rgb(227,56,48)" rx="2" ry="2" />
<text  x="1010.11" y="207.5" >runtime.pthread_c..</text>
</g>
<g >
<title>runtime.deferproc (1 samples, 0.03%)</title><rect x="117.7" y="245" width="0.3" height="15.0" fill="rgb(252,126,17)" rx="2" ry="2" />
<text  x="120.73" y="255.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.05%)</title><rect x="16.3" y="213" width="0.6" height="15.0" fill="rgb(229,97,34)" rx="2" ry="2" />
<text  x="19.26" y="223.5" ></text>
</g>
<g >
<title>runtime.memmove (1 samples, 0.03%)</title><rect x="116.5" y="197" width="0.3" height="15.0" fill="rgb(237,207,46)" rx="2" ry="2" />
<text  x="119.48" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packedPacket).ToAckHandlerPacket (1 samples, 0.03%)</title><rect x="110.8" y="277" width="0.4" height="15.0" fill="rgb(244,110,4)" rx="2" ry="2" />
<text  x="113.84" y="287.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (89 samples, 2.36%)</title><rect x="154.1" y="133" width="27.8" height="15.0" fill="rgb(241,188,12)" rx="2" ry="2" />
<text  x="157.06" y="143.5" >r..</text>
</g>
<g >
<title>runtime.newdefer (1 samples, 0.03%)</title><rect x="78.3" y="165" width="0.3" height="15.0" fill="rgb(248,125,34)" rx="2" ry="2" />
<text  x="81.27" y="175.5" ></text>
</g>
<g >
<title>runtime.deferproc (2 samples, 0.05%)</title><rect x="78.0" y="181" width="0.6" height="15.0" fill="rgb(249,125,21)" rx="2" ry="2" />
<text  x="80.96" y="191.5" ></text>
</g>
<g >
<title>runtime.runqget (3 samples, 0.08%)</title><rect x="349.8" y="261" width="0.9" height="15.0" fill="rgb(216,164,4)" rx="2" ry="2" />
<text  x="352.78" y="271.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_fast64 (1 samples, 0.03%)</title><rect x="79.5" y="197" width="0.3" height="15.0" fill="rgb(249,122,6)" rx="2" ry="2" />
<text  x="82.52" y="207.5" ></text>
</g>
<g >
<title>runtime.netpoll (1 samples, 0.03%)</title><rect x="1005.2" y="245" width="0.3" height="15.0" fill="rgb(218,33,4)" rx="2" ry="2" />
<text  x="1008.23" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*windowUpdateQueue).QueueAll (1 samples, 0.03%)</title><rect x="182.6" y="277" width="0.3" height="15.0" fill="rgb(231,224,54)" rx="2" ry="2" />
<text  x="185.55" y="287.5" ></text>
</g>
<g >
<title>runtime.semasleep (4 samples, 0.11%)</title><rect x="249.9" y="261" width="1.2" height="15.0" fill="rgb(220,4,4)" rx="2" ry="2" />
<text  x="252.88" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (1 samples, 0.03%)</title><rect x="247.1" y="261" width="0.3" height="15.0" fill="rgb(209,165,34)" rx="2" ry="2" />
<text  x="250.06" y="271.5" ></text>
</g>
<g >
<title>runtime.nilinterhash (2 samples, 0.05%)</title><rect x="208.2" y="149" width="0.7" height="15.0" fill="rgb(222,168,43)" rx="2" ry="2" />
<text  x="211.23" y="159.5" ></text>
</g>
<g >
<title>runtime.bgsweep (2 samples, 0.05%)</title><rect x="247.1" y="325" width="0.6" height="15.0" fill="rgb(221,112,35)" rx="2" ry="2" />
<text  x="250.06" y="335.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*sendStream).popStreamFrameImpl (4 samples, 0.11%)</title><rect x="111.8" y="213" width="1.2" height="15.0" fill="rgb(210,27,41)" rx="2" ry="2" />
<text  x="114.78" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*receivedPacketTracker).GetAlarmTimeout (1 samples, 0.03%)</title><rect x="84.8" y="277" width="0.4" height="15.0" fill="rgb(254,152,47)" rx="2" ry="2" />
<text  x="87.85" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*streamsMap).GetOrOpenReceiveStream (4 samples, 0.11%)</title><rect x="78.9" y="229" width="1.2" height="15.0" fill="rgb(211,4,29)" rx="2" ry="2" />
<text  x="81.90" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_lock (6 samples, 0.16%)</title><rect x="1145.2" y="197" width="1.9" height="15.0" fill="rgb(238,203,6)" rx="2" ry="2" />
<text  x="1148.22" y="207.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (69 samples, 1.83%)</title><rect x="718.1" y="197" width="21.6" height="15.0" fill="rgb(230,139,46)" rx="2" ry="2" />
<text  x="721.06" y="207.5" >r..</text>
</g>
<g >
<title>runtime.walltime (2 samples, 0.05%)</title><rect x="114.3" y="181" width="0.6" height="15.0" fill="rgb(223,180,4)" rx="2" ry="2" />
<text  x="117.28" y="191.5" ></text>
</g>
<g >
<title>runtime.handoffp (7 samples, 0.19%)</title><rect x="59.5" y="149" width="2.2" height="15.0" fill="rgb(251,23,29)" rx="2" ry="2" />
<text  x="62.48" y="159.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/utils.(*Timer).Reset (78 samples, 2.07%)</title><rect x="86.1" y="293" width="24.4" height="15.0" fill="rgb(209,136,20)" rx="2" ry="2" />
<text  x="89.10" y="303.5" >g..</text>
</g>
<g >
<title>runtime.deltimer (2 samples, 0.05%)</title><rect x="109.6" y="245" width="0.6" height="15.0" fill="rgb(220,223,52)" rx="2" ry="2" />
<text  x="112.59" y="255.5" ></text>
</g>
<g >
<title>runtime.exitsyscall0 (11 samples, 0.29%)</title><rect x="247.7" y="309" width="3.4" height="15.0" fill="rgb(236,166,4)" rx="2" ry="2" />
<text  x="250.69" y="319.5" ></text>
</g>
<g >
<title>reflect.valueInterface (1 samples, 0.03%)</title><rect x="212.6" y="213" width="0.3" height="15.0" fill="rgb(229,2,51)" rx="2" ry="2" />
<text  x="215.62" y="223.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Unmarshal (2 samples, 0.05%)</title><rect x="204.5" y="245" width="0.6" height="15.0" fill="rgb(244,49,1)" rx="2" ry="2" />
<text  x="207.47" y="255.5" ></text>
</g>
<g >
<title>time.Now (3 samples, 0.08%)</title><rect x="12.5" y="293" width="0.9" height="15.0" fill="rgb(209,84,34)" rx="2" ry="2" />
<text  x="15.51" y="303.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (16 samples, 0.42%)</title><rect x="1153.4" y="293" width="5.0" height="15.0" fill="rgb(231,210,31)" rx="2" ry="2" />
<text  x="1156.36" y="303.5" ></text>
</g>
<g >
<title>runtime.lock (2 samples, 0.05%)</title><rect x="401.1" y="245" width="0.7" height="15.0" fill="rgb(205,124,4)" rx="2" ry="2" />
<text  x="404.14" y="255.5" ></text>
</g>
<g >
<title>runtime.nanotime (23 samples, 0.61%)</title><rect x="1158.4" y="277" width="7.2" height="15.0" fill="rgb(222,160,3)" rx="2" ry="2" />
<text  x="1161.37" y="287.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (11 samples, 0.29%)</title><rect x="739.7" y="197" width="3.4" height="15.0" fill="rgb(230,48,5)" rx="2" ry="2" />
<text  x="742.67" y="207.5" ></text>
</g>
<g >
<title>runtime.freedefer (2 samples, 0.05%)</title><rect x="10.9" y="277" width="0.7" height="15.0" fill="rgb(248,112,5)" rx="2" ry="2" />
<text  x="13.94" y="287.5" ></text>
</g>
<g >
<title>runtime.(*timersBucket).addtimerLocked (72 samples, 1.91%)</title><rect x="86.7" y="229" width="22.6" height="15.0" fill="rgb(226,94,2)" rx="2" ry="2" />
<text  x="89.73" y="239.5" >r..</text>
</g>
<g >
<title>runtime.park_m (1,574 samples, 41.77%)</title><rect x="251.4" y="309" width="493.0" height="15.0" fill="rgb(212,87,15)" rx="2" ry="2" />
<text  x="254.45" y="319.5" >runtime.park_m</text>
</g>
<g >
<title>runtime.procyield (3 samples, 0.08%)</title><rect x="255.8" y="245" width="1.0" height="15.0" fill="rgb(208,15,9)" rx="2" ry="2" />
<text  x="258.83" y="255.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.03%)</title><rect x="114.0" y="213" width="0.3" height="15.0" fill="rgb(220,198,15)" rx="2" ry="2" />
<text  x="116.97" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHistory).sentPacketImpl (3 samples, 0.08%)</title><rect x="183.8" y="245" width="0.9" height="15.0" fill="rgb(208,28,30)" rx="2" ry="2" />
<text  x="186.81" y="255.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*marshalInfo).marshal (1 samples, 0.03%)</title><rect x="203.8" y="229" width="0.4" height="15.0" fill="rgb(229,91,22)" rx="2" ry="2" />
<text  x="206.85" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mspan).sweep (2 samples, 0.05%)</title><rect x="247.1" y="293" width="0.6" height="15.0" fill="rgb(231,150,19)" rx="2" ry="2" />
<text  x="250.06" y="303.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.03%)</title><rect x="61.0" y="69" width="0.4" height="15.0" fill="rgb(249,101,41)" rx="2" ry="2" />
<text  x="64.05" y="79.5" ></text>
</g>
<g >
<title>runtime.fastrandn (1 samples, 0.03%)</title><rect x="199.5" y="293" width="0.3" height="15.0" fill="rgb(254,176,20)" rx="2" ry="2" />
<text  x="202.46" y="303.5" ></text>
</g>
<g >
<title>runtime.runqempty (1 samples, 0.03%)</title><rect x="349.2" y="245" width="0.3" height="15.0" fill="rgb(214,22,3)" rx="2" ry="2" />
<text  x="352.16" y="255.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/funcs.(*Funcs).GetFunc (1 samples, 0.03%)</title><rect x="211.4" y="229" width="0.3" height="15.0" fill="rgb(254,196,3)" rx="2" ry="2" />
<text  x="214.36" y="239.5" ></text>
</g>
<g >
<title>runtime.gosched_m (1 samples, 0.03%)</title><rect x="251.1" y="309" width="0.3" height="15.0" fill="rgb(236,136,48)" rx="2" ry="2" />
<text  x="254.14" y="319.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func3 (1 samples, 0.03%)</title><rect x="1006.8" y="293" width="0.3" height="15.0" fill="rgb(235,160,50)" rx="2" ry="2" />
<text  x="1009.80" y="303.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.03%)</title><rect x="69.5" y="229" width="0.3" height="15.0" fill="rgb(254,80,36)" rx="2" ry="2" />
<text  x="72.50" y="239.5" ></text>
</g>
<g >
<title>runtime.semawakeup (459 samples, 12.18%)</title><rect x="1007.1" y="213" width="143.8" height="15.0" fill="rgb(235,223,11)" rx="2" ry="2" />
<text  x="1010.11" y="223.5" >runtime.semawakeup</text>
</g>
<g >
<title>time.Time.IsZero (1 samples, 0.03%)</title><rect x="85.5" y="261" width="0.3" height="15.0" fill="rgb(253,10,18)" rx="2" ry="2" />
<text  x="88.47" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.05%)</title><rect x="77.3" y="117" width="0.7" height="15.0" fill="rgb(217,200,13)" rx="2" ry="2" />
<text  x="80.33" y="127.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.(*Server).HandleRPC (36 samples, 0.96%)</title><rect x="204.2" y="293" width="11.2" height="15.0" fill="rgb(214,91,13)" rx="2" ry="2" />
<text  x="207.16" y="303.5" ></text>
</g>
<g >
<title>runtime.releaseSudog (1 samples, 0.03%)</title><rect x="217.6" y="293" width="0.3" height="15.0" fill="rgb(238,193,9)" rx="2" ry="2" />
<text  x="220.63" y="303.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/flowcontrol.(*streamFlowController).AddBytesRead (2 samples, 0.05%)</title><rect x="227.6" y="277" width="0.7" height="15.0" fill="rgb(241,5,45)" rx="2" ry="2" />
<text  x="230.65" y="287.5" ></text>
</g>
<g >
<title>runtime.syscall6 (3 samples, 0.08%)</title><rect x="1150.9" y="325" width="0.9" height="15.0" fill="rgb(214,125,24)" rx="2" ry="2" />
<text  x="1153.85" y="335.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.03%)</title><rect x="12.8" y="261" width="0.3" height="15.0" fill="rgb(231,144,45)" rx="2" ry="2" />
<text  x="15.82" y="271.5" ></text>
</g>
<g >
<title>runtime.libcCall (2 samples, 0.05%)</title><rect x="714.0" y="197" width="0.6" height="15.0" fill="rgb(248,71,25)" rx="2" ry="2" />
<text  x="716.99" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/handshake.(*sealer).Overhead (4 samples, 0.11%)</title><rect x="118.0" y="261" width="1.3" height="15.0" fill="rgb(252,121,9)" rx="2" ry="2" />
<text  x="121.04" y="271.5" ></text>
</g>
<g >
<title>runtime.mapassign_fast64 (2 samples, 0.05%)</title><rect x="75.8" y="165" width="0.6" height="15.0" fill="rgb(248,111,8)" rx="2" ry="2" />
<text  x="78.76" y="175.5" ></text>
</g>
<g >
<title>time.now (3 samples, 0.08%)</title><rect x="12.5" y="277" width="0.9" height="15.0" fill="rgb(236,126,30)" rx="2" ry="2" />
<text  x="15.51" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.05%)</title><rect x="11.9" y="277" width="0.6" height="15.0" fill="rgb(223,69,4)" rx="2" ry="2" />
<text  x="14.88" y="287.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (324 samples, 8.60%)</title><rect x="879.0" y="213" width="101.5" height="15.0" fill="rgb(247,112,11)" rx="2" ry="2" />
<text  x="882.03" y="223.5" >runtime.pthr..</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).SentPacket (6 samples, 0.16%)</title><rect x="182.9" y="277" width="1.8" height="15.0" fill="rgb(227,162,24)" rx="2" ry="2" />
<text  x="185.87" y="287.5" ></text>
</g>
<g >
<title>runtime.send (2 samples, 0.05%)</title><rect x="77.3" y="149" width="0.7" height="15.0" fill="rgb(251,192,38)" rx="2" ry="2" />
<text  x="80.33" y="159.5" ></text>
</g>
<g >
<title>runtime.handoffp (339 samples, 9.00%)</title><rect x="879.0" y="277" width="106.2" height="15.0" fill="rgb(209,131,50)" rx="2" ry="2" />
<text  x="882.03" y="287.5" >runtime.hand..</text>
</g>
<g >
<title>runtime.nanotime (164 samples, 4.35%)</title><rect x="745.3" y="277" width="51.4" height="15.0" fill="rgb(225,39,29)" rx="2" ry="2" />
<text  x="748.31" y="287.5" >runti..</text>
</g>
<g >
<title>runtime.semawakeup (80 samples, 2.12%)</title><rect x="718.1" y="213" width="25.0" height="15.0" fill="rgb(216,88,38)" rx="2" ry="2" />
<text  x="721.06" y="223.5" >r..</text>
</g>
<g >
<title>runtime.ready (3 samples, 0.08%)</title><rect x="215.7" y="213" width="1.0" height="15.0" fill="rgb(217,139,2)" rx="2" ry="2" />
<text  x="218.75" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np (77 samples, 2.04%)</title><rect x="811.1" y="229" width="24.1" height="15.0" fill="rgb(234,47,20)" rx="2" ry="2" />
<text  x="814.07" y="239.5" >r..</text>
</g>
<g >
<title>runtime.osyield (2 samples, 0.05%)</title><rect x="744.7" y="261" width="0.6" height="15.0" fill="rgb(254,46,49)" rx="2" ry="2" />
<text  x="747.68" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetPacker).writeAndSealPacket (3 samples, 0.08%)</title><rect x="116.5" y="261" width="0.9" height="15.0" fill="rgb(224,88,50)" rx="2" ry="2" />
<text  x="119.48" y="271.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (3 samples, 0.08%)</title><rect x="215.7" y="229" width="1.0" height="15.0" fill="rgb(216,218,18)" rx="2" ry="2" />
<text  x="218.75" y="239.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.03%)</title><rect x="77.3" y="69" width="0.3" height="15.0" fill="rgb(227,171,9)" rx="2" ry="2" />
<text  x="80.33" y="79.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/funcs.(*Funcs).GetFuncIn (7 samples, 0.19%)</title><rect x="211.4" y="245" width="2.2" height="15.0" fill="rgb(220,209,2)" rx="2" ry="2" />
<text  x="214.36" y="255.5" ></text>
</g>
<g >
<title>runtime.(*_type).typeOff (2 samples, 0.05%)</title><rect x="212.9" y="181" width="0.7" height="15.0" fill="rgb(244,30,11)" rx="2" ry="2" />
<text  x="215.93" y="191.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Unmarshal (2 samples, 0.05%)</title><rect x="213.6" y="229" width="0.6" height="15.0" fill="rgb(252,125,37)" rx="2" ry="2" />
<text  x="216.56" y="239.5" ></text>
</g>
<g >
<title>runtime.getitab (1 samples, 0.03%)</title><rect x="214.8" y="213" width="0.3" height="15.0" fill="rgb(222,74,40)" rx="2" ry="2" />
<text  x="217.81" y="223.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (4 samples, 0.11%)</title><rect x="248.6" y="213" width="1.3" height="15.0" fill="rgb(211,3,3)" rx="2" ry="2" />
<text  x="251.63" y="223.5" ></text>
</g>
<g >
<title>runtime.pidleput (1 samples, 0.03%)</title><rect x="349.2" y="261" width="0.3" height="15.0" fill="rgb(246,62,13)" rx="2" ry="2" />
<text  x="352.16" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/flowcontrol.(*connectionFlowController).AddBytesRead (1 samples, 0.03%)</title><rect x="227.6" y="261" width="0.4" height="15.0" fill="rgb(232,87,42)" rx="2" ry="2" />
<text  x="230.65" y="271.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (1 samples, 0.03%)</title><rect x="211.4" y="213" width="0.3" height="15.0" fill="rgb(236,69,54)" rx="2" ry="2" />
<text  x="214.36" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).sendPacket (236 samples, 6.26%)</title><rect x="110.8" y="293" width="73.9" height="15.0" fill="rgb(235,129,1)" rx="2" ry="2" />
<text  x="113.84" y="303.5" >github.c..</text>
</g>
<g >
<title>runtime.mapaccess2 (3 samples, 0.08%)</title><rect x="207.9" y="165" width="1.0" height="15.0" fill="rgb(245,19,30)" rx="2" ry="2" />
<text  x="210.92" y="175.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan.func1 (1 samples, 0.03%)</title><rect x="247.1" y="229" width="0.3" height="15.0" fill="rgb(253,54,47)" rx="2" ry="2" />
<text  x="250.06" y="239.5" ></text>
</g>
<g >
<title>runtime.notewakeup (459 samples, 12.18%)</title><rect x="1007.1" y="229" width="143.8" height="15.0" fill="rgb(253,170,29)" rx="2" ry="2" />
<text  x="1010.11" y="239.5" >runtime.notewakeup</text>
</g>
<g >
<title>runtime.goready.func1 (2 samples, 0.05%)</title><rect x="10.3" y="197" width="0.6" height="15.0" fill="rgb(229,19,10)" rx="2" ry="2" />
<text  x="13.31" y="207.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeue (1 samples, 0.03%)</title><rect x="76.7" y="149" width="0.3" height="15.0" fill="rgb(244,108,24)" rx="2" ry="2" />
<text  x="79.70" y="159.5" ></text>
</g>
<g >
<title>runtime.notetsleep (124 samples, 3.29%)</title><rect x="796.7" y="277" width="38.8" height="15.0" fill="rgb(245,212,8)" rx="2" ry="2" />
<text  x="799.67" y="287.5" >run..</text>
</g>
<g >
<title>runtime.goready.func1 (459 samples, 12.18%)</title><rect x="1007.1" y="293" width="143.8" height="15.0" fill="rgb(213,180,52)" rx="2" ry="2" />
<text  x="1010.11" y="303.5" >runtime.goready.fu..</text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Marshal (1 samples, 0.03%)</title><rect x="205.4" y="245" width="0.3" height="15.0" fill="rgb(246,89,53)" rx="2" ry="2" />
<text  x="208.41" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (2 samples, 0.05%)</title><rect x="245.5" y="309" width="0.6" height="15.0" fill="rgb(254,73,31)" rx="2" ry="2" />
<text  x="248.50" y="319.5" ></text>
</g>
<g >
<title>reflect.resolveTypeOff (2 samples, 0.05%)</title><rect x="212.9" y="197" width="0.7" height="15.0" fill="rgb(208,163,39)" rx="2" ry="2" />
<text  x="215.93" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*ExtendedHeader).readPacketNumber (1 samples, 0.03%)</title><rect x="72.9" y="213" width="0.4" height="15.0" fill="rgb(241,174,11)" rx="2" ry="2" />
<text  x="75.95" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/utils.(*defaultLogger).Debug (1 samples, 0.03%)</title><rect x="183.2" y="245" width="0.3" height="15.0" fill="rgb(253,104,16)" rx="2" ry="2" />
<text  x="186.18" y="255.5" ></text>
</g>
<g >
<title>runtime.startm (7 samples, 0.19%)</title><rect x="59.5" y="133" width="2.2" height="15.0" fill="rgb(224,95,37)" rx="2" ry="2" />
<text  x="62.48" y="143.5" ></text>
</g>
<g >
<title>syscall.anyToSockaddr (4 samples, 0.11%)</title><rect x="15.6" y="229" width="1.3" height="15.0" fill="rgb(237,202,7)" rx="2" ry="2" />
<text  x="18.64" y="239.5" ></text>
</g>
<g >
<title>runtime.notetsleep (4 samples, 0.11%)</title><rect x="1005.5" y="261" width="1.3" height="15.0" fill="rgb(209,199,42)" rx="2" ry="2" />
<text  x="1008.55" y="271.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/funcs.(*Funcs).GetFunc (3 samples, 0.08%)</title><rect x="210.4" y="245" width="1.0" height="15.0" fill="rgb(245,102,39)" rx="2" ry="2" />
<text  x="213.42" y="255.5" ></text>
</g>
<g >
<title>runtime.semawakeup (339 samples, 9.00%)</title><rect x="879.0" y="229" width="106.2" height="15.0" fill="rgb(237,71,50)" rx="2" ry="2" />
<text  x="882.03" y="239.5" >runtime.sema..</text>
</g>
<g >
<title>bytes.NewReader (3 samples, 0.08%)</title><rect x="82.3" y="277" width="1.0" height="15.0" fill="rgb(206,72,51)" rx="2" ry="2" />
<text  x="85.34" y="287.5" ></text>
</g>
<g >
<title>runtime.convI2I (1 samples, 0.03%)</title><rect x="79.8" y="213" width="0.3" height="15.0" fill="rgb(232,119,6)" rx="2" ry="2" />
<text  x="82.84" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.03%)</title><rect x="203.5" y="261" width="0.3" height="15.0" fill="rgb(212,85,42)" rx="2" ry="2" />
<text  x="206.54" y="271.5" ></text>
</g>
<g >
<title>time.Now (2 samples, 0.05%)</title><rect x="115.8" y="213" width="0.7" height="15.0" fill="rgb(238,26,27)" rx="2" ry="2" />
<text  x="118.85" y="223.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.03%)</title><rect x="153.7" y="53" width="0.4" height="15.0" fill="rgb(247,119,2)" rx="2" ry="2" />
<text  x="156.74" y="63.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.03%)</title><rect x="115.8" y="165" width="0.4" height="15.0" fill="rgb(232,51,8)" rx="2" ry="2" />
<text  x="118.85" y="175.5" ></text>
</g>
<g >
<title>runtime.mcall (1,586 samples, 42.09%)</title><rect x="247.7" y="325" width="496.7" height="15.0" fill="rgb(238,16,44)" rx="2" ry="2" />
<text  x="250.69" y="335.5" >runtime.mcall</text>
</g>
<g >
<title>runtime.chansend (4 samples, 0.11%)</title><rect x="215.4" y="293" width="1.3" height="15.0" fill="rgb(241,133,20)" rx="2" ry="2" />
<text  x="218.44" y="303.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*sendStream).Write (47 samples, 1.25%)</title><rect x="230.5" y="309" width="14.7" height="15.0" fill="rgb(241,130,39)" rx="2" ry="2" />
<text  x="233.47" y="319.5" ></text>
</g>
<g >
<title>runtime.duffcopy (1 samples, 0.03%)</title><rect x="184.1" y="229" width="0.3" height="15.0" fill="rgb(252,104,44)" rx="2" ry="2" />
<text  x="187.12" y="239.5" ></text>
</g>
<g >
<title>runtime.wakep (80 samples, 2.12%)</title><rect x="718.1" y="261" width="25.0" height="15.0" fill="rgb(224,9,6)" rx="2" ry="2" />
<text  x="721.06" y="271.5" >r..</text>
</g>
<g >
<title>runtime.callers (1 samples, 0.03%)</title><rect x="12.2" y="229" width="0.3" height="15.0" fill="rgb(245,18,23)" rx="2" ry="2" />
<text  x="15.19" y="239.5" ></text>
</g>
<g >
<title>runtime.funcPC (1 samples, 0.03%)</title><rect x="68.6" y="197" width="0.3" height="15.0" fill="rgb(231,177,41)" rx="2" ry="2" />
<text  x="71.56" y="207.5" ></text>
</g>
<g >
<title>runtime.netpoll (236 samples, 6.26%)</title><rect x="275.2" y="261" width="74.0" height="15.0" fill="rgb(225,34,23)" rx="2" ry="2" />
<text  x="278.25" y="271.5" >runtime...</text>
</g>
<g >
<title>time.Now (1 samples, 0.03%)</title><rect x="110.8" y="261" width="0.4" height="15.0" fill="rgb(207,47,6)" rx="2" ry="2" />
<text  x="113.84" y="271.5" ></text>
</g>
<g >
<title>runtime.gentraceback (1 samples, 0.03%)</title><rect x="12.2" y="181" width="0.3" height="15.0" fill="rgb(235,198,50)" rx="2" ry="2" />
<text  x="15.19" y="191.5" ></text>
</g>
<g >
<title>runtime.selectgo (50 samples, 1.33%)</title><rect x="185.1" y="309" width="15.6" height="15.0" fill="rgb(219,138,30)" rx="2" ry="2" />
<text  x="188.06" y="319.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).ReadFrom (173 samples, 4.59%)</title><rect x="14.7" y="261" width="54.2" height="15.0" fill="rgb(212,181,16)" rx="2" ry="2" />
<text  x="17.70" y="271.5" >inter..</text>
</g>
<g >
<title>runtime.semasleep (4 samples, 0.11%)</title><rect x="248.6" y="229" width="1.3" height="15.0" fill="rgb(210,138,39)" rx="2" ry="2" />
<text  x="251.63" y="239.5" ></text>
</g>
<g >
<title>runtime.send (2 samples, 0.05%)</title><rect x="10.3" y="245" width="0.6" height="15.0" fill="rgb(238,69,25)" rx="2" ry="2" />
<text  x="13.31" y="255.5" ></text>
</g>
<g >
<title>runtime.send (4 samples, 0.11%)</title><rect x="215.4" y="277" width="1.3" height="15.0" fill="rgb(250,200,6)" rx="2" ry="2" />
<text  x="218.44" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.03%)</title><rect x="209.2" y="165" width="0.3" height="15.0" fill="rgb(234,155,47)" rx="2" ry="2" />
<text  x="212.17" y="175.5" ></text>
</g>
<g >
<title>time.now (2 samples, 0.05%)</title><rect x="114.3" y="197" width="0.6" height="15.0" fill="rgb(230,65,5)" rx="2" ry="2" />
<text  x="117.28" y="207.5" ></text>
</g>
<g >
<title>runtime.lock (2 samples, 0.05%)</title><rect x="228.3" y="245" width="0.6" height="15.0" fill="rgb(209,229,8)" rx="2" ry="2" />
<text  x="231.27" y="255.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (60 samples, 1.59%)</title><rect x="985.8" y="229" width="18.8" height="15.0" fill="rgb(227,55,41)" rx="2" ry="2" />
<text  x="988.82" y="239.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (22 samples, 0.58%)</title><rect x="61.7" y="181" width="6.9" height="15.0" fill="rgb(218,157,29)" rx="2" ry="2" />
<text  x="64.67" y="191.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.unmarshalInt32Value (1 samples, 0.03%)</title><rect x="204.8" y="181" width="0.3" height="15.0" fill="rgb(235,144,23)" rx="2" ry="2" />
<text  x="207.79" y="191.5" ></text>
</g>
<g >
<title>runtime.semawakeup (71 samples, 1.88%)</title><rect x="86.7" y="197" width="22.3" height="15.0" fill="rgb(210,205,6)" rx="2" ry="2" />
<text  x="89.73" y="207.5" >r..</text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Marshal (1 samples, 0.03%)</title><rect x="203.8" y="277" width="0.4" height="15.0" fill="rgb(246,31,19)" rx="2" ry="2" />
<text  x="206.85" y="287.5" ></text>
</g>
<g >
<title>runtime.notewakeup (80 samples, 2.12%)</title><rect x="718.1" y="229" width="25.0" height="15.0" fill="rgb(226,86,31)" rx="2" ry="2" />
<text  x="721.06" y="239.5" >r..</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).handlePacket (3 samples, 0.08%)</title><rect x="10.0" y="293" width="0.9" height="15.0" fill="rgb(206,100,31)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*marshalInfo).marshal (1 samples, 0.03%)</title><rect x="214.2" y="181" width="0.3" height="15.0" fill="rgb(212,40,32)" rx="2" ry="2" />
<text  x="217.18" y="191.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*AckFrame).Write (1 samples, 0.03%)</title><rect x="116.5" y="245" width="0.3" height="15.0" fill="rgb(243,153,38)" rx="2" ry="2" />
<text  x="119.48" y="255.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.03%)</title><rect x="203.5" y="245" width="0.3" height="15.0" fill="rgb(214,119,31)" rx="2" ry="2" />
<text  x="206.54" y="255.5" ></text>
</g>
<g >
<title>net.(*ipv6ZoneCache).name (1 samples, 0.03%)</title><rect x="14.4" y="277" width="0.3" height="15.0" fill="rgb(229,195,20)" rx="2" ry="2" />
<text  x="17.38" y="287.5" ></text>
</g>
<g >
<title>runtime.newobject (2 samples, 0.05%)</title><rect x="71.7" y="245" width="0.6" height="15.0" fill="rgb(239,64,6)" rx="2" ry="2" />
<text  x="74.69" y="255.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="60.7" y="85" width="0.7" height="15.0" fill="rgb(238,27,25)" rx="2" ry="2" />
<text  x="63.73" y="95.5" ></text>
</g>
<g >
<title>runtime.markroot (1 samples, 0.03%)</title><rect x="69.5" y="165" width="0.3" height="15.0" fill="rgb(242,70,43)" rx="2" ry="2" />
<text  x="72.50" y="175.5" ></text>
</g>
<g >
<title>syscall.recvfrom (166 samples, 4.41%)</title><rect x="16.9" y="229" width="52.0" height="15.0" fill="rgb(239,41,27)" rx="2" ry="2" />
<text  x="19.89" y="239.5" >sysca..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.03%)</title><rect x="183.8" y="181" width="0.3" height="15.0" fill="rgb(251,229,3)" rx="2" ry="2" />
<text  x="186.81" y="191.5" ></text>
</g>
<g >
<title>runtime.osyield (2 samples, 0.05%)</title><rect x="985.2" y="245" width="0.6" height="15.0" fill="rgb(253,203,19)" rx="2" ry="2" />
<text  x="988.19" y="255.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Unmarshal (2 samples, 0.05%)</title><rect x="204.5" y="213" width="0.6" height="15.0" fill="rgb(210,174,45)" rx="2" ry="2" />
<text  x="207.47" y="223.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.(*Response).Encode (1 samples, 0.03%)</title><rect x="205.4" y="261" width="0.3" height="15.0" fill="rgb(236,181,43)" rx="2" ry="2" />
<text  x="208.41" y="271.5" ></text>
</g>
<g >
<title>runtime.chanrecv1 (2 samples, 0.05%)</title><rect x="244.2" y="293" width="0.7" height="15.0" fill="rgb(250,24,38)" rx="2" ry="2" />
<text  x="247.25" y="303.5" ></text>
</g>
<g >
<title>runtime.duffzero (1 samples, 0.03%)</title><rect x="184.7" y="309" width="0.4" height="15.0" fill="rgb(213,120,3)" rx="2" ry="2" />
<text  x="187.75" y="319.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/flowcontrol.(*streamFlowController).maybeQueueWindowUpdate (1 samples, 0.03%)</title><rect x="228.0" y="261" width="0.3" height="15.0" fill="rgb(248,183,7)" rx="2" ry="2" />
<text  x="230.96" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.getPacketBuffer (1 samples, 0.03%)</title><rect x="13.4" y="309" width="0.4" height="15.0" fill="rgb(243,31,39)" rx="2" ry="2" />
<text  x="16.44" y="319.5" ></text>
</g>
<g >
<title>runtime.fastrand (1 samples, 0.03%)</title><rect x="199.5" y="277" width="0.3" height="15.0" fill="rgb(214,125,25)" rx="2" ry="2" />
<text  x="202.46" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/flowcontrol.(*connectionFlowController).maybeQueueWindowUpdate (1 samples, 0.03%)</title><rect x="227.6" y="245" width="0.4" height="15.0" fill="rgb(240,217,50)" rx="2" ry="2" />
<text  x="230.65" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHistory).SentPacket (3 samples, 0.08%)</title><rect x="183.8" y="261" width="0.9" height="15.0" fill="rgb(235,124,45)" rx="2" ry="2" />
<text  x="186.81" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/handshake.(*opener).DecryptHeader (1 samples, 0.03%)</title><rect x="72.3" y="261" width="0.3" height="15.0" fill="rgb(222,189,49)" rx="2" ry="2" />
<text  x="75.32" y="271.5" ></text>
</g>
<g >
<title>runtime.goready.func1 (2 samples, 0.05%)</title><rect x="77.3" y="101" width="0.7" height="15.0" fill="rgb(234,147,30)" rx="2" ry="2" />
<text  x="80.33" y="111.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/utils.MaxTime (1 samples, 0.03%)</title><rect x="183.5" y="245" width="0.3" height="15.0" fill="rgb(213,89,47)" rx="2" ry="2" />
<text  x="186.49" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (1 samples, 0.03%)</title><rect x="247.1" y="213" width="0.3" height="15.0" fill="rgb(247,182,16)" rx="2" ry="2" />
<text  x="250.06" y="223.5" ></text>
</g>
<g >
<title>runtime.goready (2 samples, 0.05%)</title><rect x="10.3" y="229" width="0.6" height="15.0" fill="rgb(221,70,5)" rx="2" ry="2" />
<text  x="13.31" y="239.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*InternalMessageInfo).Marshal (1 samples, 0.03%)</title><rect x="214.2" y="197" width="0.3" height="15.0" fill="rgb(206,120,43)" rx="2" ry="2" />
<text  x="217.18" y="207.5" ></text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.03%)</title><rect x="717.4" y="197" width="0.3" height="15.0" fill="rgb(211,24,48)" rx="2" ry="2" />
<text  x="720.44" y="207.5" ></text>
</g>
<g >
<title>runtime.findfunc (1 samples, 0.03%)</title><rect x="12.2" y="165" width="0.3" height="15.0" fill="rgb(237,158,20)" rx="2" ry="2" />
<text  x="15.19" y="175.5" ></text>
</g>
<g >
<title>runtime.aeshash64 (2 samples, 0.05%)</title><rect x="113.0" y="213" width="0.7" height="15.0" fill="rgb(239,146,41)" rx="2" ry="2" />
<text  x="116.03" y="223.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Unmarshal (1 samples, 0.03%)</title><rect x="203.2" y="277" width="0.3" height="15.0" fill="rgb(228,201,49)" rx="2" ry="2" />
<text  x="206.22" y="287.5" ></text>
</g>
<g >
<title>runtime.markrootBlock (1 samples, 0.03%)</title><rect x="69.5" y="149" width="0.3" height="15.0" fill="rgb(219,41,37)" rx="2" ry="2" />
<text  x="72.50" y="159.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.parseStreamFrame (2 samples, 0.05%)</title><rect x="81.4" y="229" width="0.6" height="15.0" fill="rgb(207,58,23)" rx="2" ry="2" />
<text  x="84.40" y="239.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.03%)</title><rect x="183.8" y="197" width="0.3" height="15.0" fill="rgb(218,20,10)" rx="2" ry="2" />
<text  x="186.81" y="207.5" ></text>
</g>
<g >
<title>runtime.osyield (2 samples, 0.05%)</title><rect x="255.2" y="245" width="0.6" height="15.0" fill="rgb(236,139,33)" rx="2" ry="2" />
<text  x="258.21" y="255.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/funcs.(*Funcs).Call (15 samples, 0.40%)</title><rect x="205.7" y="245" width="4.7" height="15.0" fill="rgb(206,175,31)" rx="2" ry="2" />
<text  x="208.73" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).handleStreamFrame (18 samples, 0.48%)</title><rect x="74.5" y="245" width="5.6" height="15.0" fill="rgb(242,55,47)" rx="2" ry="2" />
<text  x="77.51" y="255.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (2 samples, 0.05%)</title><rect x="243.6" y="213" width="0.6" height="15.0" fill="rgb(234,55,23)" rx="2" ry="2" />
<text  x="246.62" y="223.5" ></text>
</g>
<g >
<title>runtime.mapiterinit (1 samples, 0.03%)</title><rect x="182.6" y="261" width="0.3" height="15.0" fill="rgb(210,53,46)" rx="2" ry="2" />
<text  x="185.55" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*Header).ParseExtended (1 samples, 0.03%)</title><rect x="72.9" y="261" width="0.4" height="15.0" fill="rgb(235,63,12)" rx="2" ry="2" />
<text  x="75.95" y="271.5" ></text>
</g>
<g >
<title>runtime.notewakeup (1 samples, 0.03%)</title><rect x="349.5" y="245" width="0.3" height="15.0" fill="rgb(219,215,46)" rx="2" ry="2" />
<text  x="352.47" y="255.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/pb.(*Request).XXX_Unmarshal (2 samples, 0.05%)</title><rect x="204.5" y="229" width="0.6" height="15.0" fill="rgb(231,191,54)" rx="2" ry="2" />
<text  x="207.47" y="239.5" ></text>
</g>
<g >
<title>time.Until (1 samples, 0.03%)</title><rect x="110.2" y="277" width="0.3" height="15.0" fill="rgb(252,0,7)" rx="2" ry="2" />
<text  x="113.21" y="287.5" ></text>
</g>
<g >
<title>runtime.wakep (1 samples, 0.03%)</title><rect x="77.6" y="69" width="0.4" height="15.0" fill="rgb(207,40,4)" rx="2" ry="2" />
<text  x="80.64" y="79.5" ></text>
</g>
<g >
<title>runtime.mapassign_fast64 (1 samples, 0.03%)</title><rect x="184.4" y="229" width="0.3" height="15.0" fill="rgb(254,213,54)" rx="2" ry="2" />
<text  x="187.43" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/utils.MinNonZeroTime (2 samples, 0.05%)</title><rect x="85.2" y="277" width="0.6" height="15.0" fill="rgb(230,166,47)" rx="2" ry="2" />
<text  x="88.16" y="287.5" ></text>
</g>
<g >
<title>runtime.chansend (1 samples, 0.03%)</title><rect x="111.8" y="149" width="0.3" height="15.0" fill="rgb(222,112,52)" rx="2" ry="2" />
<text  x="114.78" y="159.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (101 samples, 2.68%)</title><rect x="1158.4" y="293" width="31.6" height="15.0" fill="rgb(228,157,42)" rx="2" ry="2" />
<text  x="1161.37" y="303.5" >ru..</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/handshake.(*cryptoSetup).GetSealer (1 samples, 0.03%)</title><rect x="117.7" y="261" width="0.3" height="15.0" fill="rgb(228,67,13)" rx="2" ry="2" />
<text  x="120.73" y="271.5" ></text>
</g>
<g >
<title>reflect.resolveTextOff (1 samples, 0.03%)</title><rect x="208.9" y="165" width="0.3" height="15.0" fill="rgb(216,146,42)" rx="2" ry="2" />
<text  x="211.86" y="175.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.03%)</title><rect x="69.8" y="245" width="0.3" height="15.0" fill="rgb(205,159,33)" rx="2" ry="2" />
<text  x="72.81" y="255.5" ></text>
</g>
<g >
<title>runtime.aeshashbody (1 samples, 0.03%)</title><rect x="208.5" y="101" width="0.4" height="15.0" fill="rgb(253,148,31)" rx="2" ry="2" />
<text  x="211.55" y="111.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*unmarshalInfo).unmarshal (2 samples, 0.05%)</title><rect x="204.5" y="197" width="0.6" height="15.0" fill="rgb(224,220,28)" rx="2" ry="2" />
<text  x="207.47" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*receiveStream).dequeueNextFrame (30 samples, 0.80%)</title><rect x="218.3" y="277" width="9.3" height="15.0" fill="rgb(246,100,7)" rx="2" ry="2" />
<text  x="221.25" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*sendStream).getDataForWriting (3 samples, 0.08%)</title><rect x="111.8" y="197" width="0.9" height="15.0" fill="rgb(232,122,1)" rx="2" ry="2" />
<text  x="114.78" y="207.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeueSudoG (1 samples, 0.03%)</title><rect x="217.3" y="293" width="0.3" height="15.0" fill="rgb(206,93,16)" rx="2" ry="2" />
<text  x="220.31" y="303.5" ></text>
</g>
<g >
<title>runtime.usleep_trampoline (1 samples, 0.03%)</title><rect x="246.8" y="309" width="0.3" height="15.0" fill="rgb(238,172,18)" rx="2" ry="2" />
<text  x="249.75" y="319.5" ></text>
</g>
<g >
<title>runtime.notesleep (4 samples, 0.11%)</title><rect x="249.9" y="277" width="1.2" height="15.0" fill="rgb(222,60,3)" rx="2" ry="2" />
<text  x="252.88" y="287.5" ></text>
</g>
<g >
<title>runtime.schedule (1,572 samples, 41.72%)</title><rect x="251.4" y="293" width="492.3" height="15.0" fill="rgb(214,173,42)" rx="2" ry="2" />
<text  x="254.45" y="303.5" >runtime.schedule</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.03%)</title><rect x="229.8" y="277" width="0.4" height="15.0" fill="rgb(243,185,10)" rx="2" ry="2" />
<text  x="232.84" y="287.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/pb.(*Msg).XXX_Marshal (1 samples, 0.03%)</title><rect x="203.8" y="261" width="0.4" height="15.0" fill="rgb(207,136,50)" rx="2" ry="2" />
<text  x="206.85" y="271.5" ></text>
</g>
<g >
<title>time.Now (2 samples, 0.05%)</title><rect x="114.3" y="213" width="0.6" height="15.0" fill="rgb(245,171,48)" rx="2" ry="2" />
<text  x="117.28" y="223.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast_pidle (64 samples, 1.70%)</title><rect x="985.2" y="277" width="20.0" height="15.0" fill="rgb(209,26,13)" rx="2" ry="2" />
<text  x="988.19" y="287.5" ></text>
</g>
<g >
<title>runtime.assertI2I2 (1 samples, 0.03%)</title><rect x="214.5" y="213" width="0.3" height="15.0" fill="rgb(220,42,44)" rx="2" ry="2" />
<text  x="217.50" y="223.5" ></text>
</g>
<g >
<title>runtime.wakep (459 samples, 12.18%)</title><rect x="1007.1" y="261" width="143.8" height="15.0" fill="rgb(252,168,5)" rx="2" ry="2" />
<text  x="1010.11" y="271.5" >runtime.wakep</text>
</g>
<g >
<title>runtime.lock (1 samples, 0.03%)</title><rect x="77.0" y="149" width="0.3" height="15.0" fill="rgb(240,84,42)" rx="2" ry="2" />
<text  x="80.02" y="159.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.03%)</title><rect x="109.9" y="229" width="0.3" height="15.0" fill="rgb(218,184,28)" rx="2" ry="2" />
<text  x="112.90" y="239.5" ></text>
</g>
<g >
<title>runtime.sysmon (430 samples, 11.41%)</title><rect x="744.4" y="293" width="134.6" height="15.0" fill="rgb(220,90,6)" rx="2" ry="2" />
<text  x="747.37" y="303.5" >runtime.sysmon</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetPacker).maybePackCryptoPacket (3 samples, 0.08%)</title><rect x="115.5" y="261" width="1.0" height="15.0" fill="rgb(243,143,47)" rx="2" ry="2" />
<text  x="118.54" y="271.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.03%)</title><rect x="11.9" y="181" width="0.3" height="15.0" fill="rgb(239,141,45)" rx="2" ry="2" />
<text  x="14.88" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (1 samples, 0.03%)</title><rect x="349.5" y="213" width="0.3" height="15.0" fill="rgb(254,80,52)" rx="2" ry="2" />
<text  x="352.47" y="223.5" ></text>
</g>
<g >
<title>syscall.sendto (195 samples, 5.18%)</title><rect x="120.9" y="165" width="61.0" height="15.0" fill="rgb(235,223,2)" rx="2" ry="2" />
<text  x="123.86" y="175.5" >syscal..</text>
</g>
<g >
<title>runtime.acquireSudog (3 samples, 0.08%)</title><rect x="198.5" y="293" width="1.0" height="15.0" fill="rgb(219,1,12)" rx="2" ry="2" />
<text  x="201.52" y="303.5" ></text>
</g>
<g >
<title>reflect.Value.Interface (1 samples, 0.03%)</title><rect x="212.6" y="229" width="0.3" height="15.0" fill="rgb(251,178,26)" rx="2" ry="2" />
<text  x="215.62" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*receiveStream).handleStreamFrameImpl (12 samples, 0.32%)</title><rect x="75.1" y="213" width="3.8" height="15.0" fill="rgb(232,184,32)" rx="2" ry="2" />
<text  x="78.14" y="223.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc1 (1 samples, 0.03%)</title><rect x="69.5" y="197" width="0.3" height="15.0" fill="rgb(213,165,3)" rx="2" ry="2" />
<text  x="72.50" y="207.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1 samples, 0.03%)</title><rect x="82.7" y="213" width="0.3" height="15.0" fill="rgb(242,146,17)" rx="2" ry="2" />
<text  x="85.65" y="223.5" ></text>
</g>
<g >
<title>runtime.memhash128 (2 samples, 0.05%)</title><rect x="208.2" y="133" width="0.7" height="15.0" fill="rgb(210,216,1)" rx="2" ry="2" />
<text  x="211.23" y="143.5" ></text>
</g>
<g >
<title>runtime.profilealloc (1 samples, 0.03%)</title><rect x="12.2" y="261" width="0.3" height="15.0" fill="rgb(251,41,44)" rx="2" ry="2" />
<text  x="15.19" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*sendStream).signalWrite (1 samples, 0.03%)</title><rect x="111.8" y="181" width="0.3" height="15.0" fill="rgb(253,156,16)" rx="2" ry="2" />
<text  x="114.78" y="191.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).run (421 samples, 11.17%)</title><rect x="70.1" y="325" width="131.9" height="15.0" fill="rgb(208,170,54)" rx="2" ry="2" />
<text  x="73.13" y="335.5" >github.com/lucas..</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.parseAckFrame (1 samples, 0.03%)</title><rect x="81.1" y="229" width="0.3" height="15.0" fill="rgb(222,103,17)" rx="2" ry="2" />
<text  x="84.09" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (7 samples, 0.19%)</title><rect x="59.5" y="181" width="2.2" height="15.0" fill="rgb(223,57,48)" rx="2" ry="2" />
<text  x="62.48" y="191.5" ></text>
</g>
<g >
<title>runtime.memhash (1 samples, 0.03%)</title><rect x="208.5" y="117" width="0.4" height="15.0" fill="rgb(208,169,13)" rx="2" ry="2" />
<text  x="211.55" y="127.5" ></text>
</g>
<g >
<title>runtime.startm (339 samples, 9.00%)</title><rect x="879.0" y="261" width="106.2" height="15.0" fill="rgb(218,53,15)" rx="2" ry="2" />
<text  x="882.03" y="271.5" >runtime.startm</text>
</g>
<g >
<title>runtime.schedule (7 samples, 0.19%)</title><rect x="247.7" y="293" width="2.2" height="15.0" fill="rgb(228,56,51)" rx="2" ry="2" />
<text  x="250.69" y="303.5" ></text>
</g>
<g >
<title>reflect.funcLayout (4 samples, 0.11%)</title><rect x="207.6" y="197" width="1.3" height="15.0" fill="rgb(211,209,14)" rx="2" ry="2" />
<text  x="210.61" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*frameSorter).push (3 samples, 0.08%)</title><rect x="75.5" y="181" width="0.9" height="15.0" fill="rgb(221,52,36)" rx="2" ry="2" />
<text  x="78.45" y="191.5" ></text>
</g>
<g >
<title>reflect.toType (1 samples, 0.03%)</title><rect x="212.0" y="213" width="0.3" height="15.0" fill="rgb(234,114,20)" rx="2" ry="2" />
<text  x="214.99" y="223.5" ></text>
</g>
<g >
<title>runtime.usleep (139 samples, 3.69%)</title><rect x="835.5" y="277" width="43.5" height="15.0" fill="rgb(251,128,52)" rx="2" ry="2" />
<text  x="838.50" y="287.5" >runt..</text>
</g>
<g >
<title>runtime.pidleget (1 samples, 0.03%)</title><rect x="216.4" y="165" width="0.3" height="15.0" fill="rgb(243,42,18)" rx="2" ry="2" />
<text  x="219.37" y="175.5" ></text>
</g>
<g >
<title>reflect.New (1 samples, 0.03%)</title><rect x="212.3" y="229" width="0.3" height="15.0" fill="rgb(229,91,14)" rx="2" ry="2" />
<text  x="215.30" y="239.5" ></text>
</g>
<g >
<title>github.com/marten-seemann/qtls.(*xorNonceAEAD).Open (1 samples, 0.03%)</title><rect x="72.6" y="245" width="0.3" height="15.0" fill="rgb(235,207,25)" rx="2" ry="2" />
<text  x="75.63" y="255.5" ></text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.05%)</title><rect x="985.2" y="229" width="0.6" height="15.0" fill="rgb(225,100,9)" rx="2" ry="2" />
<text  x="988.19" y="239.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (1 samples, 0.03%)</title><rect x="210.1" y="197" width="0.3" height="15.0" fill="rgb(248,126,50)" rx="2" ry="2" />
<text  x="213.11" y="207.5" ></text>
</g>
<g >
<title>net.(*netFD).writeTo (198 samples, 5.25%)</title><rect x="119.9" y="213" width="62.0" height="15.0" fill="rgb(251,30,34)" rx="2" ry="2" />
<text  x="122.92" y="223.5" >net.(*..</text>
</g>
<g >
<title>runtime.startTheWorldWithSema (1 samples, 0.03%)</title><rect x="1006.8" y="277" width="0.3" height="15.0" fill="rgb(213,215,30)" rx="2" ry="2" />
<text  x="1009.80" y="287.5" ></text>
</g>
<g >
<title>time.Time.After (1 samples, 0.03%)</title><rect x="183.5" y="229" width="0.3" height="15.0" fill="rgb(228,142,37)" rx="2" ry="2" />
<text  x="186.49" y="239.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_fast32 (1 samples, 0.03%)</title><rect x="213.2" y="149" width="0.4" height="15.0" fill="rgb(214,68,18)" rx="2" ry="2" />
<text  x="216.24" y="159.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*frameSorter).Push (3 samples, 0.08%)</title><rect x="75.5" y="197" width="0.9" height="15.0" fill="rgb(215,134,52)" rx="2" ry="2" />
<text  x="78.45" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).sendPackets (237 samples, 6.29%)</title><rect x="110.5" y="309" width="74.2" height="15.0" fill="rgb(220,44,8)" rx="2" ry="2" />
<text  x="113.53" y="319.5" >github.c..</text>
</g>
<g >
<title>time.Time.After (1 samples, 0.03%)</title><rect x="84.5" y="261" width="0.3" height="15.0" fill="rgb(229,96,15)" rx="2" ry="2" />
<text  x="87.53" y="271.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (16 samples, 0.42%)</title><rect x="1153.4" y="277" width="5.0" height="15.0" fill="rgb(208,169,25)" rx="2" ry="2" />
<text  x="1156.36" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).handlePacketImpl (42 samples, 1.11%)</title><rect x="71.1" y="309" width="13.1" height="15.0" fill="rgb(231,86,1)" rx="2" ry="2" />
<text  x="74.07" y="319.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="1004.6" y="229" width="0.6" height="15.0" fill="rgb(231,128,46)" rx="2" ry="2" />
<text  x="1007.61" y="239.5" ></text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.05%)</title><rect x="248.0" y="229" width="0.6" height="15.0" fill="rgb(237,171,44)" rx="2" ry="2" />
<text  x="251.00" y="239.5" ></text>
</g>
<g >
<title>time.Now (4 samples, 0.11%)</title><rect x="200.7" y="309" width="1.3" height="15.0" fill="rgb(247,61,3)" rx="2" ry="2" />
<text  x="203.72" y="319.5" ></text>
</g>
<g >
<title>syscall.syscall6 (195 samples, 5.18%)</title><rect x="120.9" y="149" width="61.0" height="15.0" fill="rgb(244,149,8)" rx="2" ry="2" />
<text  x="123.86" y="159.5" >syscal..</text>
</g>
<g >
<title>runtime.lock (1 samples, 0.03%)</title><rect x="109.3" y="229" width="0.3" height="15.0" fill="rgb(249,8,53)" rx="2" ry="2" />
<text  x="112.27" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*receivedPacketTracker).GetAckFrame (3 samples, 0.08%)</title><rect x="114.0" y="229" width="0.9" height="15.0" fill="rgb(250,205,10)" rx="2" ry="2" />
<text  x="116.97" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*sendStream).popStreamFrame (5 samples, 0.13%)</title><rect x="111.5" y="229" width="1.5" height="15.0" fill="rgb(225,224,40)" rx="2" ry="2" />
<text  x="114.46" y="239.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*unmarshalInfo).unmarshal (1 samples, 0.03%)</title><rect x="203.2" y="229" width="0.3" height="15.0" fill="rgb(224,58,40)" rx="2" ry="2" />
<text  x="206.22" y="239.5" ></text>
</g>
<g >
<title>runtime.(*waitq).dequeueSudoG (36 samples, 0.96%)</title><rect x="187.3" y="293" width="11.2" height="15.0" fill="rgb(214,228,5)" rx="2" ry="2" />
<text  x="190.25" y="303.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/flowcontrol.(*streamFlowController).UpdateHighestReceived (3 samples, 0.08%)</title><rect x="78.0" y="197" width="0.9" height="15.0" fill="rgb(206,13,47)" rx="2" ry="2" />
<text  x="80.96" y="207.5" ></text>
</g>
<g >
<title>runtime.assertE2I (1 samples, 0.03%)</title><rect x="214.8" y="229" width="0.3" height="15.0" fill="rgb(208,62,25)" rx="2" ry="2" />
<text  x="217.81" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_wait (4 samples, 0.11%)</title><rect x="249.9" y="245" width="1.2" height="15.0" fill="rgb(239,31,27)" rx="2" ry="2" />
<text  x="252.88" y="255.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/examples/example/pb/service.(*Arith).Multiply (1 samples, 0.03%)</title><rect x="206.7" y="197" width="0.3" height="15.0" fill="rgb(226,158,41)" rx="2" ry="2" />
<text  x="209.67" y="207.5" ></text>
</g>
<g >
<title>runtime.wakep (2 samples, 0.05%)</title><rect x="10.3" y="165" width="0.6" height="15.0" fill="rgb(253,52,28)" rx="2" ry="2" />
<text  x="13.31" y="175.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (1 samples, 0.03%)</title><rect x="12.2" y="245" width="0.3" height="15.0" fill="rgb(243,203,40)" rx="2" ry="2" />
<text  x="15.19" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*ExtendedHeader).parseShortHeader (1 samples, 0.03%)</title><rect x="72.9" y="229" width="0.4" height="15.0" fill="rgb(228,94,3)" rx="2" ry="2" />
<text  x="75.95" y="239.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Lock (1 samples, 0.03%)</title><rect x="244.9" y="293" width="0.3" height="15.0" fill="rgb(250,129,21)" rx="2" ry="2" />
<text  x="247.87" y="303.5" ></text>
</g>
<g >
<title>reflect.(*rtype).typeOff (2 samples, 0.05%)</title><rect x="212.9" y="213" width="0.7" height="15.0" fill="rgb(251,199,25)" rx="2" ry="2" />
<text  x="215.93" y="223.5" ></text>
</g>
<g >
<title>runtime.startm (459 samples, 12.18%)</title><rect x="1007.1" y="245" width="143.8" height="15.0" fill="rgb(249,153,47)" rx="2" ry="2" />
<text  x="1010.11" y="255.5" >runtime.startm</text>
</g>
<g >
<title>runtime.entersyscallblock (8 samples, 0.21%)</title><rect x="59.2" y="197" width="2.5" height="15.0" fill="rgb(227,207,31)" rx="2" ry="2" />
<text  x="62.17" y="207.5" ></text>
</g>
<g >
<title>runtime.notewakeup (71 samples, 1.88%)</title><rect x="86.7" y="213" width="22.3" height="15.0" fill="rgb(209,157,23)" rx="2" ry="2" />
<text  x="89.73" y="223.5" >r..</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*conn).Write (200 samples, 5.31%)</title><rect x="119.3" y="261" width="62.6" height="15.0" fill="rgb(242,47,10)" rx="2" ry="2" />
<text  x="122.29" y="271.5" >github..</text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.03%)</title><rect x="81.1" y="197" width="0.3" height="15.0" fill="rgb(241,137,6)" rx="2" ry="2" />
<text  x="84.09" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/utils.ReadVarInt (1 samples, 0.03%)</title><rect x="81.7" y="213" width="0.3" height="15.0" fill="rgb(210,75,17)" rx="2" ry="2" />
<text  x="84.71" y="223.5" ></text>
</g>
<g >
<title>runtime.(*waitq).enqueue (1 samples, 0.03%)</title><rect x="244.2" y="261" width="0.4" height="15.0" fill="rgb(251,183,9)" rx="2" ry="2" />
<text  x="247.25" y="271.5" ></text>
</g>
<g >
<title>runtime.stopm (1 samples, 0.03%)</title><rect x="717.7" y="261" width="0.4" height="15.0" fill="rgb(235,149,13)" rx="2" ry="2" />
<text  x="720.75" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*framerI).AppendControlFrames (1 samples, 0.03%)</title><rect x="111.2" y="245" width="0.3" height="15.0" fill="rgb(212,4,42)" rx="2" ry="2" />
<text  x="114.15" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).getPacketNumberSpace (1 samples, 0.03%)</title><rect x="182.9" y="245" width="0.3" height="15.0" fill="rgb(213,92,48)" rx="2" ry="2" />
<text  x="185.87" y="255.5" ></text>
</g>
<g >
<title>runtime.pidleget (1 samples, 0.03%)</title><rect x="10.6" y="133" width="0.3" height="15.0" fill="rgb(239,122,20)" rx="2" ry="2" />
<text  x="13.63" y="143.5" ></text>
</g>
<g >
<title>crypto/aes.(*gcmAsm).Overhead (1 samples, 0.03%)</title><rect x="119.0" y="229" width="0.3" height="15.0" fill="rgb(212,117,26)" rx="2" ry="2" />
<text  x="121.98" y="239.5" ></text>
</g>
<g >
<title>runtime.resetspinning (80 samples, 2.12%)</title><rect x="718.1" y="277" width="25.0" height="15.0" fill="rgb(237,94,24)" rx="2" ry="2" />
<text  x="721.06" y="287.5" >r..</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).ReceivedAck (1 samples, 0.03%)</title><rect x="74.2" y="229" width="0.3" height="15.0" fill="rgb(240,165,33)" rx="2" ry="2" />
<text  x="77.20" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*uniStreamSender).onHasStreamData (3 samples, 0.08%)</title><rect x="243.3" y="293" width="0.9" height="15.0" fill="rgb(238,103,4)" rx="2" ry="2" />
<text  x="246.31" y="303.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*ExtendedHeader).Write (1 samples, 0.03%)</title><rect x="116.8" y="245" width="0.3" height="15.0" fill="rgb(247,198,49)" rx="2" ry="2" />
<text  x="119.79" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).GetAlarmTimeout (1 samples, 0.03%)</title><rect x="85.8" y="293" width="0.3" height="15.0" fill="rgb(247,160,32)" rx="2" ry="2" />
<text  x="88.79" y="303.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.HasAckElicitingFrames (1 samples, 0.03%)</title><rect x="117.4" y="261" width="0.3" height="15.0" fill="rgb(213,91,17)" rx="2" ry="2" />
<text  x="120.42" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.03%)</title><rect x="210.1" y="213" width="0.3" height="15.0" fill="rgb(222,95,44)" rx="2" ry="2" />
<text  x="213.11" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*Header).parseShortHeader (2 samples, 0.05%)</title><rect x="83.6" y="245" width="0.6" height="15.0" fill="rgb(244,33,11)" rx="2" ry="2" />
<text  x="86.59" y="255.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock (2 samples, 0.05%)</title><rect x="153.4" y="133" width="0.7" height="15.0" fill="rgb(217,98,9)" rx="2" ry="2" />
<text  x="156.43" y="143.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (4 samples, 0.11%)</title><rect x="1005.5" y="245" width="1.3" height="15.0" fill="rgb(216,97,51)" rx="2" ry="2" />
<text  x="1008.55" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*frameParser).ParseNext (6 samples, 0.16%)</title><rect x="80.1" y="261" width="1.9" height="15.0" fill="rgb(230,37,33)" rx="2" ry="2" />
<text  x="83.15" y="271.5" ></text>
</g>
<g >
<title>runtime.chansend (1 samples, 0.03%)</title><rect x="229.5" y="277" width="0.3" height="15.0" fill="rgb(227,92,47)" rx="2" ry="2" />
<text  x="232.53" y="287.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.03%)</title><rect x="115.2" y="245" width="0.3" height="15.0" fill="rgb(244,159,1)" rx="2" ry="2" />
<text  x="118.22" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).handleSinglePacket (35 samples, 0.93%)</title><rect x="71.4" y="293" width="10.9" height="15.0" fill="rgb(248,207,37)" rx="2" ry="2" />
<text  x="74.38" y="303.5" ></text>
</g>
<g >
<title>runtime.selparkcommit (2 samples, 0.05%)</title><rect x="743.7" y="293" width="0.7" height="15.0" fill="rgb(238,46,46)" rx="2" ry="2" />
<text  x="746.74" y="303.5" ></text>
</g>
<g >
<title>runtime.puintptr.ptr (1 samples, 0.03%)</title><rect x="82.0" y="245" width="0.3" height="15.0" fill="rgb(251,101,40)" rx="2" ry="2" />
<text  x="85.03" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*incomingBidiStreamsMap).GetOrOpenStream (3 samples, 0.08%)</title><rect x="78.9" y="213" width="0.9" height="15.0" fill="rgb(247,45,37)" rx="2" ry="2" />
<text  x="81.90" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.05%)</title><rect x="71.7" y="229" width="0.6" height="15.0" fill="rgb(216,134,13)" rx="2" ry="2" />
<text  x="74.69" y="239.5" ></text>
</g>
<g >
<title>runtime.gcAssistAlloc (1 samples, 0.03%)</title><rect x="69.5" y="245" width="0.3" height="15.0" fill="rgb(248,119,24)" rx="2" ry="2" />
<text  x="72.50" y="255.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.03%)</title><rect x="117.1" y="213" width="0.3" height="15.0" fill="rgb(253,27,17)" rx="2" ry="2" />
<text  x="120.10" y="223.5" ></text>
</g>
<g >
<title>runtime.notewakeup (339 samples, 9.00%)</title><rect x="879.0" y="245" width="106.2" height="15.0" fill="rgb(209,134,5)" rx="2" ry="2" />
<text  x="882.03" y="255.5" >runtime.note..</text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1 samples, 0.03%)</title><rect x="11.9" y="261" width="0.3" height="15.0" fill="rgb(223,143,34)" rx="2" ry="2" />
<text  x="14.88" y="271.5" ></text>
</g>
<g >
<title>runtime.chansend (5 samples, 0.13%)</title><rect x="76.4" y="165" width="1.6" height="15.0" fill="rgb(253,82,34)" rx="2" ry="2" />
<text  x="79.39" y="175.5" ></text>
</g>
<g >
<title>bytes.NewReader (2 samples, 0.05%)</title><rect x="71.7" y="261" width="0.6" height="15.0" fill="rgb(234,29,24)" rx="2" ry="2" />
<text  x="74.69" y="271.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (79 samples, 2.10%)</title><rect x="810.8" y="261" width="24.7" height="15.0" fill="rgb(239,16,35)" rx="2" ry="2" />
<text  x="813.76" y="271.5" >r..</text>
</g>
<g >
<title>sync.(*entry).load (1 samples, 0.03%)</title><rect x="211.1" y="213" width="0.3" height="15.0" fill="rgb(221,171,2)" rx="2" ry="2" />
<text  x="214.05" y="223.5" ></text>
</g>
<g >
<title>time.startTimer (74 samples, 1.96%)</title><rect x="86.4" y="261" width="23.2" height="15.0" fill="rgb(231,129,4)" rx="2" ry="2" />
<text  x="89.41" y="271.5" >t..</text>
</g>
<g >
<title>runtime.goschedImpl (1 samples, 0.03%)</title><rect x="251.1" y="293" width="0.3" height="15.0" fill="rgb(236,217,33)" rx="2" ry="2" />
<text  x="254.14" y="303.5" ></text>
</g>
<g >
<title>runtime.acquirem (1 samples, 0.03%)</title><rect x="199.2" y="277" width="0.3" height="15.0" fill="rgb(215,39,24)" rx="2" ry="2" />
<text  x="202.15" y="287.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.03%)</title><rect x="229.5" y="261" width="0.3" height="15.0" fill="rgb(244,124,50)" rx="2" ry="2" />
<text  x="232.53" y="271.5" ></text>
</g>
<g >
<title>reflect.(*rtype).NumOut (1 samples, 0.03%)</title><rect x="207.0" y="197" width="0.3" height="15.0" fill="rgb(212,4,48)" rx="2" ry="2" />
<text  x="209.98" y="207.5" ></text>
</g>
<g >
<title>runtime.lock (2 samples, 0.05%)</title><rect x="744.7" y="277" width="0.6" height="15.0" fill="rgb(228,193,53)" rx="2" ry="2" />
<text  x="747.68" y="287.5" ></text>
</g>
<g >
<title>runtime.semawakeup (62 samples, 1.65%)</title><rect x="985.8" y="245" width="19.4" height="15.0" fill="rgb(209,104,54)" rx="2" ry="2" />
<text  x="988.82" y="255.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.03%)</title><rect x="117.1" y="245" width="0.3" height="15.0" fill="rgb(238,207,32)" rx="2" ry="2" />
<text  x="120.10" y="255.5" ></text>
</g>
<g >
<title>runtime.aeshash64 (1 samples, 0.03%)</title><rect x="76.1" y="149" width="0.3" height="15.0" fill="rgb(245,0,8)" rx="2" ry="2" />
<text  x="79.08" y="159.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*PacketList).PushBack (1 samples, 0.03%)</title><rect x="183.8" y="229" width="0.3" height="15.0" fill="rgb(235,17,38)" rx="2" ry="2" />
<text  x="186.81" y="239.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.ReplyEncode (3 samples, 0.08%)</title><rect x="214.2" y="245" width="0.9" height="15.0" fill="rgb(214,171,14)" rx="2" ry="2" />
<text  x="217.18" y="255.5" ></text>
</g>
<g >
<title>runtime.usleep (2 samples, 0.05%)</title><rect x="255.2" y="229" width="0.6" height="15.0" fill="rgb(241,171,32)" rx="2" ry="2" />
<text  x="258.21" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (1 samples, 0.03%)</title><rect x="12.2" y="213" width="0.3" height="15.0" fill="rgb(209,109,2)" rx="2" ry="2" />
<text  x="15.19" y="223.5" ></text>
</g>
<g >
<title>runtime.runqsteal (161 samples, 4.27%)</title><rect x="350.7" y="261" width="50.4" height="15.0" fill="rgb(215,138,10)" rx="2" ry="2" />
<text  x="353.72" y="271.5" >runti..</text>
</g>
<g >
<title>runtime.libcCall (1 samples, 0.03%)</title><rect x="834.9" y="213" width="0.3" height="15.0" fill="rgb(215,35,45)" rx="2" ry="2" />
<text  x="837.87" y="223.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.Marshal (2 samples, 0.05%)</title><rect x="214.2" y="229" width="0.6" height="15.0" fill="rgb(209,24,12)" rx="2" ry="2" />
<text  x="217.18" y="239.5" ></text>
</g>
<g >
<title>runtime.scanblock (1 samples, 0.03%)</title><rect x="69.5" y="133" width="0.3" height="15.0" fill="rgb(234,115,37)" rx="2" ry="2" />
<text  x="72.50" y="143.5" ></text>
</g>
<g >
<title>runtime.lock (6 samples, 0.16%)</title><rect x="254.9" y="261" width="1.9" height="15.0" fill="rgb(236,112,24)" rx="2" ry="2" />
<text  x="257.89" y="271.5" ></text>
</g>
<g >
<title>sync.(*Map).Load (3 samples, 0.08%)</title><rect x="210.4" y="229" width="1.0" height="15.0" fill="rgb(209,160,12)" rx="2" ry="2" />
<text  x="213.42" y="239.5" ></text>
</g>
<g >
<title>runtime.save (1 samples, 0.03%)</title><rect x="59.2" y="181" width="0.3" height="15.0" fill="rgb(205,1,19)" rx="2" ry="2" />
<text  x="62.17" y="191.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.03%)</title><rect x="209.2" y="181" width="0.3" height="15.0" fill="rgb(248,148,8)" rx="2" ry="2" />
<text  x="212.17" y="191.5" ></text>
</g>
<g >
<title>runtime.chanrecv (3 samples, 0.08%)</title><rect x="228.3" y="261" width="0.9" height="15.0" fill="rgb(212,65,19)" rx="2" ry="2" />
<text  x="231.27" y="271.5" ></text>
</g>
<g >
<title>runtime.selectnbsend (2 samples, 0.05%)</title><rect x="243.6" y="245" width="0.6" height="15.0" fill="rgb(250,115,50)" rx="2" ry="2" />
<text  x="246.62" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3 samples, 0.08%)</title><rect x="69.2" y="261" width="0.9" height="15.0" fill="rgb(230,161,4)" rx="2" ry="2" />
<text  x="72.19" y="271.5" ></text>
</g>
<g >
<title>runtime.nilinterhash (1 samples, 0.03%)</title><rect x="210.7" y="197" width="0.4" height="15.0" fill="rgb(239,43,49)" rx="2" ry="2" />
<text  x="213.74" y="207.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/examples/example/pb/service.(*ArithRequest).XXX_Unmarshal (1 samples, 0.03%)</title><rect x="213.9" y="213" width="0.3" height="15.0" fill="rgb(221,67,13)" rx="2" ry="2" />
<text  x="216.87" y="223.5" ></text>
</g>
<g >
<title>runtime.deferproc (1 samples, 0.03%)</title><rect x="182.2" y="261" width="0.4" height="15.0" fill="rgb(235,216,4)" rx="2" ry="2" />
<text  x="185.24" y="271.5" ></text>
</g>
<g >
<title>runtime.chanrecv1 (3 samples, 0.08%)</title><rect x="228.3" y="277" width="0.9" height="15.0" fill="rgb(227,189,48)" rx="2" ry="2" />
<text  x="231.27" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetBuffer).MaybeRelease (1 samples, 0.03%)</title><rect x="71.1" y="293" width="0.3" height="15.0" fill="rgb(235,204,3)" rx="2" ry="2" />
<text  x="74.07" y="303.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*receivedPacketHandler).GetAckFrame (3 samples, 0.08%)</title><rect x="115.5" y="245" width="1.0" height="15.0" fill="rgb(239,144,11)" rx="2" ry="2" />
<text  x="118.54" y="255.5" ></text>
</g>
<g >
<title>runtime.efaceeq (1 samples, 0.03%)</title><rect x="207.9" y="133" width="0.3" height="15.0" fill="rgb(216,50,11)" rx="2" ry="2" />
<text  x="210.92" y="143.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/wire.(*ExtendedHeader).parse (1 samples, 0.03%)</title><rect x="72.9" y="245" width="0.4" height="15.0" fill="rgb(247,164,45)" rx="2" ry="2" />
<text  x="75.95" y="255.5" ></text>
</g>
<g >
<title>net.(*UDPConn).readFrom (179 samples, 4.75%)</title><rect x="14.1" y="293" width="56.0" height="15.0" fill="rgb(232,90,9)" rx="2" ry="2" />
<text  x="17.07" y="303.5" >net.(..</text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (12 samples, 0.32%)</title><rect x="1147.1" y="197" width="3.8" height="15.0" fill="rgb(251,130,24)" rx="2" ry="2" />
<text  x="1150.10" y="207.5" ></text>
</g>
<g >
<title>time.now (1 samples, 0.03%)</title><rect x="110.8" y="245" width="0.4" height="15.0" fill="rgb(227,102,35)" rx="2" ry="2" />
<text  x="113.84" y="255.5" ></text>
</g>
<g >
<title>runtime.findObject (1 samples, 0.03%)</title><rect x="69.5" y="117" width="0.3" height="15.0" fill="rgb(237,33,35)" rx="2" ry="2" />
<text  x="72.50" y="127.5" ></text>
</g>
<g >
<title>runtime.nanotime (59 samples, 1.57%)</title><rect x="256.8" y="261" width="18.4" height="15.0" fill="rgb(250,86,44)" rx="2" ry="2" />
<text  x="259.77" y="271.5" ></text>
</g>
<g >
<title>runtime.runqsteal (2 samples, 0.05%)</title><rect x="248.0" y="261" width="0.6" height="15.0" fill="rgb(212,45,24)" rx="2" ry="2" />
<text  x="251.00" y="271.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.03%)</title><rect x="203.2" y="197" width="0.3" height="15.0" fill="rgb(210,170,44)" rx="2" ry="2" />
<text  x="206.22" y="207.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/examples/example/pb/service.(*ArithResponse).XXX_Marshal (1 samples, 0.03%)</title><rect x="214.2" y="213" width="0.3" height="15.0" fill="rgb(244,72,38)" rx="2" ry="2" />
<text  x="217.18" y="223.5" ></text>
</g>
<g >
<title>runtime.semasleep (1,005 samples, 26.67%)</title><rect x="403.0" y="229" width="314.7" height="15.0" fill="rgb(229,23,8)" rx="2" ry="2" />
<text  x="406.02" y="239.5" >runtime.semasleep</text>
</g>
<g >
<title>runtime.runqget (2 samples, 0.05%)</title><rect x="743.1" y="277" width="0.6" height="15.0" fill="rgb(229,36,5)" rx="2" ry="2" />
<text  x="746.12" y="287.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (22 samples, 0.58%)</title><rect x="61.7" y="197" width="6.9" height="15.0" fill="rgb(223,17,12)" rx="2" ry="2" />
<text  x="64.67" y="207.5" ></text>
</g>
<g >
<title>runtime.growslice (1 samples, 0.03%)</title><rect x="114.9" y="245" width="0.3" height="15.0" fill="rgb(226,11,29)" rx="2" ry="2" />
<text  x="117.91" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).idleTimeoutStartTime (1 samples, 0.03%)</title><rect x="84.5" y="293" width="0.3" height="15.0" fill="rgb(220,188,21)" rx="2" ry="2" />
<text  x="87.53" y="303.5" ></text>
</g>
<g >
<title>runtime.gogo (1 samples, 0.03%)</title><rect x="245.2" y="309" width="0.3" height="15.0" fill="rgb(205,166,6)" rx="2" ry="2" />
<text  x="248.19" y="319.5" ></text>
</g>
<g >
<title>runtime.findrunnable (1,488 samples, 39.49%)</title><rect x="251.8" y="277" width="465.9" height="15.0" fill="rgb(254,2,51)" rx="2" ry="2" />
<text  x="254.76" y="287.5" >runtime.findrunnable</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).logPacket (1 samples, 0.03%)</title><rect x="181.9" y="261" width="0.3" height="15.0" fill="rgb(206,171,49)" rx="2" ry="2" />
<text  x="184.93" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/utils.WriteVarInt (1 samples, 0.03%)</title><rect x="116.5" y="229" width="0.3" height="15.0" fill="rgb(242,24,38)" rx="2" ry="2" />
<text  x="119.48" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).insert (1 samples, 0.03%)</title><rect x="247.1" y="197" width="0.3" height="15.0" fill="rgb(234,108,16)" rx="2" ry="2" />
<text  x="250.06" y="207.5" ></text>
</g>
<g >
<title>runtime.notewakeup (5 samples, 0.13%)</title><rect x="59.8" y="117" width="1.6" height="15.0" fill="rgb(225,33,30)" rx="2" ry="2" />
<text  x="62.79" y="127.5" ></text>
</g>
<g >
<title>runtime.chansend1 (4 samples, 0.11%)</title><rect x="215.4" y="309" width="1.3" height="15.0" fill="rgb(213,29,54)" rx="2" ry="2" />
<text  x="218.44" y="319.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.03%)</title><rect x="201.0" y="277" width="0.3" height="15.0" fill="rgb(253,206,42)" rx="2" ry="2" />
<text  x="204.03" y="287.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/protocol.ReadConnectionID (2 samples, 0.05%)</title><rect x="83.6" y="229" width="0.6" height="15.0" fill="rgb(230,151,39)" rx="2" ry="2" />
<text  x="86.59" y="239.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).onHasStreamData (3 samples, 0.08%)</title><rect x="243.3" y="277" width="0.9" height="15.0" fill="rgb(225,194,19)" rx="2" ry="2" />
<text  x="246.31" y="287.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_unlock (15 samples, 0.40%)</title><rect x="980.5" y="213" width="4.7" height="15.0" fill="rgb(226,65,37)" rx="2" ry="2" />
<text  x="983.49" y="223.5" ></text>
</g>
<g >
<title>runtime.siftupTimer (1 samples, 0.03%)</title><rect x="109.0" y="213" width="0.3" height="15.0" fill="rgb(210,5,53)" rx="2" ry="2" />
<text  x="111.96" y="223.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*PacketList).insertValue (1 samples, 0.03%)</title><rect x="183.8" y="213" width="0.3" height="15.0" fill="rgb(245,112,21)" rx="2" ry="2" />
<text  x="186.81" y="223.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.03%)</title><rect x="77.6" y="37" width="0.4" height="15.0" fill="rgb(211,214,10)" rx="2" ry="2" />
<text  x="80.64" y="47.5" ></text>
</g>
<g >
<title>runtime.semasleep (78 samples, 2.07%)</title><rect x="1165.6" y="277" width="24.4" height="15.0" fill="rgb(218,79,17)" rx="2" ry="2" />
<text  x="1168.57" y="287.5" >r..</text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.(*Msg).Decode (2 samples, 0.05%)</title><rect x="203.2" y="293" width="0.6" height="15.0" fill="rgb(212,208,7)" rx="2" ry="2" />
<text  x="206.22" y="303.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.ServeQUICConn (51 samples, 1.35%)</title><rect x="202.0" y="325" width="15.9" height="15.0" fill="rgb(207,3,43)" rx="2" ry="2" />
<text  x="204.97" y="335.5" ></text>
</g>
<g >
<title>runtime.funcPC (1 samples, 0.03%)</title><rect x="715.6" y="197" width="0.3" height="15.0" fill="rgb(246,97,18)" rx="2" ry="2" />
<text  x="718.56" y="207.5" ></text>
</g>
<g >
<title>runtime.semawakeup (3 samples, 0.08%)</title><rect x="60.4" y="101" width="1.0" height="15.0" fill="rgb(234,97,9)" rx="2" ry="2" />
<text  x="63.42" y="111.5" ></text>
</g>
<g >
<title>runtime.memequal128 (1 samples, 0.03%)</title><rect x="207.9" y="117" width="0.3" height="15.0" fill="rgb(242,130,13)" rx="2" ry="2" />
<text  x="210.92" y="127.5" ></text>
</g>
<g >
<title>runtime.casgstatus (1 samples, 0.03%)</title><rect x="153.4" y="117" width="0.3" height="15.0" fill="rgb(236,58,29)" rx="2" ry="2" />
<text  x="156.43" y="127.5" ></text>
</g>
<g >
<title>runtime.semasleep (1 samples, 0.03%)</title><rect x="717.7" y="229" width="0.4" height="15.0" fill="rgb(226,3,2)" rx="2" ry="2" />
<text  x="720.75" y="239.5" ></text>
</g>
<g >
<title>runtime.selectnbsend (3 samples, 0.08%)</title><rect x="10.0" y="277" width="0.9" height="15.0" fill="rgb(241,101,27)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>runtime.wakep (2 samples, 0.05%)</title><rect x="216.1" y="197" width="0.6" height="15.0" fill="rgb(214,111,19)" rx="2" ry="2" />
<text  x="219.06" y="207.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.(*Server).Handler (36 samples, 0.96%)</title><rect x="204.2" y="277" width="11.2" height="15.0" fill="rgb(217,134,43)" rx="2" ry="2" />
<text  x="207.16" y="287.5" ></text>
</g>
<g >
<title>runtime.newdefer (1 samples, 0.03%)</title><rect x="117.7" y="229" width="0.3" height="15.0" fill="rgb(233,139,25)" rx="2" ry="2" />
<text  x="120.73" y="239.5" ></text>
</g>
<g >
<title>runtime.pthread_mutex_lock (5 samples, 0.13%)</title><rect x="714.6" y="213" width="1.6" height="15.0" fill="rgb(253,81,8)" rx="2" ry="2" />
<text  x="717.62" y="223.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock_handoff (339 samples, 9.00%)</title><rect x="879.0" y="293" width="106.2" height="15.0" fill="rgb(254,69,51)" rx="2" ry="2" />
<text  x="882.03" y="303.5" >runtime.ente..</text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/utils.MaxTime (1 samples, 0.03%)</title><rect x="84.5" y="277" width="0.3" height="15.0" fill="rgb(217,177,31)" rx="2" ry="2" />
<text  x="87.53" y="287.5" ></text>
</g>
<g >
<title>runtime.chansend (3 samples, 0.08%)</title><rect x="10.0" y="261" width="0.9" height="15.0" fill="rgb(217,43,33)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.(*Msg).Encode (1 samples, 0.03%)</title><rect x="203.8" y="293" width="0.4" height="15.0" fill="rgb(205,15,10)" rx="2" ry="2" />
<text  x="206.85" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1 samples, 0.03%)</title><rect x="82.7" y="197" width="0.3" height="15.0" fill="rgb(212,17,52)" rx="2" ry="2" />
<text  x="85.65" y="207.5" ></text>
</g>
<g >
<title>runtime.nanotime (1 samples, 0.03%)</title><rect x="110.8" y="229" width="0.4" height="15.0" fill="rgb(244,55,6)" rx="2" ry="2" />
<text  x="113.84" y="239.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (1 samples, 0.03%)</title><rect x="12.2" y="197" width="0.3" height="15.0" fill="rgb(251,143,31)" rx="2" ry="2" />
<text  x="15.19" y="207.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (1 samples, 0.03%)</title><rect x="214.5" y="181" width="0.3" height="15.0" fill="rgb(236,129,16)" rx="2" ry="2" />
<text  x="217.50" y="191.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1 samples, 0.03%)</title><rect x="73.6" y="229" width="0.3" height="15.0" fill="rgb(230,229,13)" rx="2" ry="2" />
<text  x="76.57" y="239.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast.func1 (64 samples, 1.70%)</title><rect x="985.2" y="293" width="20.0" height="15.0" fill="rgb(246,142,30)" rx="2" ry="2" />
<text  x="988.19" y="303.5" ></text>
</g>
<g >
<title>runtime.usleep (156 samples, 4.14%)</title><rect x="352.3" y="229" width="48.8" height="15.0" fill="rgb(222,123,42)" rx="2" ry="2" />
<text  x="355.29" y="239.5" >runt..</text>
</g>
<g >
<title>runtime.(*guintptr).cas (1 samples, 0.03%)</title><rect x="743.4" y="261" width="0.3" height="15.0" fill="rgb(243,220,10)" rx="2" ry="2" />
<text  x="746.43" y="271.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_signal (71 samples, 1.88%)</title><rect x="86.7" y="181" width="22.3" height="15.0" fill="rgb(230,193,41)" rx="2" ry="2" />
<text  x="89.73" y="191.5" >r..</text>
</g>
<g >
<title>runtime.bulkBarrierPreWrite (1 samples, 0.03%)</title><rect x="227.3" y="213" width="0.3" height="15.0" fill="rgb(209,102,36)" rx="2" ry="2" />
<text  x="230.34" y="223.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.03%)</title><rect x="61.4" y="117" width="0.3" height="15.0" fill="rgb(246,216,41)" rx="2" ry="2" />
<text  x="64.36" y="127.5" ></text>
</g>
<g >
<title>runtime.notewakeup (62 samples, 1.65%)</title><rect x="985.8" y="261" width="19.4" height="15.0" fill="rgb(238,25,49)" rx="2" ry="2" />
<text  x="988.82" y="271.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*unmarshalInfo).unmarshal (1 samples, 0.03%)</title><rect x="213.9" y="181" width="0.3" height="15.0" fill="rgb(239,65,54)" rx="2" ry="2" />
<text  x="216.87" y="191.5" ></text>
</g>
<g >
<title>reflect.packEface (1 samples, 0.03%)</title><rect x="212.6" y="197" width="0.3" height="15.0" fill="rgb(224,187,9)" rx="2" ry="2" />
<text  x="215.62" y="207.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_fast64 (1 samples, 0.03%)</title><rect x="74.2" y="197" width="0.3" height="15.0" fill="rgb(213,93,38)" rx="2" ry="2" />
<text  x="77.20" y="207.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc.ArgsDecode (2 samples, 0.05%)</title><rect x="213.6" y="245" width="0.6" height="15.0" fill="rgb(206,133,51)" rx="2" ry="2" />
<text  x="216.56" y="255.5" ></text>
</g>
<g >
<title>runtime.nilinterequal (1 samples, 0.03%)</title><rect x="207.9" y="149" width="0.3" height="15.0" fill="rgb(217,46,23)" rx="2" ry="2" />
<text  x="210.92" y="159.5" ></text>
</g>
<g >
<title>runtime.(*mTreap).rotateRight (1 samples, 0.03%)</title><rect x="247.1" y="181" width="0.3" height="15.0" fill="rgb(254,54,39)" rx="2" ry="2" />
<text  x="250.06" y="191.5" ></text>
</g>
<g >
<title>runtime.pthread_cond_timedwait_relative_np_trampoline (1 samples, 0.03%)</title><rect x="246.4" y="309" width="0.4" height="15.0" fill="rgb(254,224,14)" rx="2" ry="2" />
<text  x="249.44" y="319.5" ></text>
</g>
<g >
<title>runtime.gcTrigger.test (1 samples, 0.03%)</title><rect x="71.7" y="213" width="0.3" height="15.0" fill="rgb(240,181,47)" rx="2" ry="2" />
<text  x="74.69" y="223.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.appendUTF8StringValueNoZero (1 samples, 0.03%)</title><rect x="205.4" y="181" width="0.3" height="15.0" fill="rgb(216,181,42)" rx="2" ry="2" />
<text  x="208.41" y="191.5" ></text>
</g>
<g >
<title>runtime.mapdelete_fast64 (2 samples, 0.05%)</title><rect x="113.0" y="229" width="0.7" height="15.0" fill="rgb(225,37,15)" rx="2" ry="2" />
<text  x="116.03" y="239.5" ></text>
</g>
<g >
<title>runtime.chansend1 (1 samples, 0.03%)</title><rect x="229.5" y="293" width="0.3" height="15.0" fill="rgb(252,205,47)" rx="2" ry="2" />
<text  x="232.53" y="303.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*receiveStream).signalRead (5 samples, 0.13%)</title><rect x="76.4" y="197" width="1.6" height="15.0" fill="rgb(220,144,20)" rx="2" ry="2" />
<text  x="79.39" y="207.5" ></text>
</g>
<g >
<title>runtime.aeshash64 (29 samples, 0.77%)</title><rect x="218.3" y="229" width="9.0" height="15.0" fill="rgb(240,226,27)" rx="2" ry="2" />
<text  x="221.25" y="239.5" ></text>
</g>
<g >
<title>time.(*Time).nsec (1 samples, 0.03%)</title><rect x="85.5" y="245" width="0.3" height="15.0" fill="rgb(242,170,35)" rx="2" ry="2" />
<text  x="88.47" y="255.5" ></text>
</g>
<g >
<title>hslam.com/mgit/Mort/rpc/pb.(*Msg).XXX_Unmarshal (1 samples, 0.03%)</title><rect x="203.2" y="261" width="0.3" height="15.0" fill="rgb(209,10,28)" rx="2" ry="2" />
<text  x="206.22" y="271.5" ></text>
</g>
<g >
<title>reflect.(*rtype).Size (1 samples, 0.03%)</title><rect x="207.3" y="197" width="0.3" height="15.0" fill="rgb(213,35,51)" rx="2" ry="2" />
<text  x="210.29" y="207.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*session).sendPackedPacket (202 samples, 5.36%)</title><rect x="119.3" y="277" width="63.3" height="15.0" fill="rgb(211,83,36)" rx="2" ry="2" />
<text  x="122.29" y="287.5" >github..</text>
</g>
<g >
<title>runtime.ready (2 samples, 0.05%)</title><rect x="10.3" y="181" width="0.6" height="15.0" fill="rgb(228,7,33)" rx="2" ry="2" />
<text  x="13.31" y="191.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (2 samples, 0.05%)</title><rect x="210.4" y="213" width="0.7" height="15.0" fill="rgb(207,214,38)" rx="2" ry="2" />
<text  x="213.42" y="223.5" ></text>
</g>
<g >
<title>runtime.timerproc (122 samples, 3.24%)</title><rect x="1151.8" y="325" width="38.2" height="15.0" fill="rgb(218,227,35)" rx="2" ry="2" />
<text  x="1154.79" y="335.5" >run..</text>
</g>
<g >
<title>runtime.pollWork (1 samples, 0.03%)</title><rect x="1005.2" y="261" width="0.3" height="15.0" fill="rgb(208,40,46)" rx="2" ry="2" />
<text  x="1008.23" y="271.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1 samples, 0.03%)</title><rect x="11.6" y="293" width="0.3" height="15.0" fill="rgb(243,192,5)" rx="2" ry="2" />
<text  x="14.57" y="303.5" ></text>
</g>
<g >
<title>syscall.syscall6 (166 samples, 4.41%)</title><rect x="16.9" y="213" width="52.0" height="15.0" fill="rgb(248,197,53)" rx="2" ry="2" />
<text  x="19.89" y="223.5" >sysca..</text>
</g>
<g >
<title>syscall.Sendto (196 samples, 5.20%)</title><rect x="120.5" y="181" width="61.4" height="15.0" fill="rgb(252,207,37)" rx="2" ry="2" />
<text  x="123.55" y="191.5" >syscal..</text>
</g>
<g >
<title>runtime.goready (1 samples, 0.03%)</title><rect x="111.8" y="117" width="0.3" height="15.0" fill="rgb(248,3,32)" rx="2" ry="2" />
<text  x="114.78" y="127.5" ></text>
</g>
<g >
<title>reflect.Value.Type (2 samples, 0.05%)</title><rect x="212.9" y="229" width="0.7" height="15.0" fill="rgb(225,165,5)" rx="2" ry="2" />
<text  x="215.93" y="239.5" ></text>
</g>
<g >
<title>reflect.(*rtype).textOff (1 samples, 0.03%)</title><rect x="208.9" y="181" width="0.3" height="15.0" fill="rgb(214,20,38)" rx="2" ry="2" />
<text  x="211.86" y="191.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.03%)</title><rect x="203.5" y="277" width="0.3" height="15.0" fill="rgb(222,126,2)" rx="2" ry="2" />
<text  x="206.54" y="287.5" ></text>
</g>
<g >
<title>runtime.kevent (154 samples, 4.09%)</title><rect x="300.9" y="245" width="48.3" height="15.0" fill="rgb(225,217,3)" rx="2" ry="2" />
<text  x="303.93" y="255.5" >runt..</text>
</g>
<g >
<title>runtime.makeslice (1 samples, 0.03%)</title><rect x="229.8" y="293" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="232.84" y="303.5" ></text>
</g>
<g >
<title>time.(*Timer).Reset (74 samples, 1.96%)</title><rect x="86.4" y="277" width="23.2" height="15.0" fill="rgb(220,153,3)" rx="2" ry="2" />
<text  x="89.41" y="287.5" >t..</text>
</g>
<g >
<title>runtime.(*mspan).countAlloc (1 samples, 0.03%)</title><rect x="247.4" y="277" width="0.3" height="15.0" fill="rgb(207,195,30)" rx="2" ry="2" />
<text  x="250.38" y="287.5" ></text>
</g>
<g >
<title>runtime.runqgrab (158 samples, 4.19%)</title><rect x="351.7" y="245" width="49.4" height="15.0" fill="rgb(232,82,1)" rx="2" ry="2" />
<text  x="354.66" y="255.5" >runt..</text>
</g>
<g >
<title>bytes.(*Reader).ReadByte (1 samples, 0.03%)</title><rect x="80.1" y="245" width="0.4" height="15.0" fill="rgb(235,134,2)" rx="2" ry="2" />
<text  x="83.15" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1 samples, 0.03%)</title><rect x="82.7" y="181" width="0.3" height="15.0" fill="rgb(208,186,33)" rx="2" ry="2" />
<text  x="85.65" y="191.5" ></text>
</g>
<g >
<title>runtime.kevent (1 samples, 0.03%)</title><rect x="247.7" y="245" width="0.3" height="15.0" fill="rgb(247,81,47)" rx="2" ry="2" />
<text  x="250.69" y="255.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.03%)</title><rect x="205.1" y="245" width="0.3" height="15.0" fill="rgb(231,43,40)" rx="2" ry="2" />
<text  x="208.10" y="255.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (1 samples, 0.03%)</title><rect x="209.2" y="149" width="0.3" height="15.0" fill="rgb(249,90,29)" rx="2" ry="2" />
<text  x="212.17" y="159.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/flowcontrol.(*baseFlowController).hasWindowUpdate (1 samples, 0.03%)</title><rect x="228.0" y="245" width="0.3" height="15.0" fill="rgb(224,122,23)" rx="2" ry="2" />
<text  x="230.96" y="255.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).next (3 samples, 0.08%)</title><rect x="254.0" y="261" width="0.9" height="15.0" fill="rgb(233,27,23)" rx="2" ry="2" />
<text  x="256.95" y="271.5" ></text>
</g>
<g >
<title>net.(*UDPConn).writeTo (198 samples, 5.25%)</title><rect x="119.9" y="229" width="62.0" height="15.0" fill="rgb(224,18,45)" rx="2" ry="2" />
<text  x="122.92" y="239.5" >net.(*..</text>
</g>
<g >
<title>runtime.sweepone (2 samples, 0.05%)</title><rect x="247.1" y="309" width="0.6" height="15.0" fill="rgb(247,186,12)" rx="2" ry="2" />
<text  x="250.06" y="319.5" ></text>
</g>
<g >
<title>runtime.startm (1 samples, 0.03%)</title><rect x="77.6" y="53" width="0.4" height="15.0" fill="rgb(224,15,1)" rx="2" ry="2" />
<text  x="80.64" y="63.5" ></text>
</g>
<g >
<title>runtime.systemstack (3 samples, 0.08%)</title><rect x="215.7" y="245" width="1.0" height="15.0" fill="rgb(230,116,9)" rx="2" ry="2" />
<text  x="218.75" y="255.5" ></text>
</g>
<g >
<title>runtime.stopm (4 samples, 0.11%)</title><rect x="248.6" y="261" width="1.3" height="15.0" fill="rgb(207,40,52)" rx="2" ry="2" />
<text  x="251.63" y="271.5" ></text>
</g>
<g >
<title>runtime.startm (2 samples, 0.05%)</title><rect x="10.3" y="149" width="0.6" height="15.0" fill="rgb(219,50,35)" rx="2" ry="2" />
<text  x="13.31" y="159.5" ></text>
</g>
<g >
<title>runtime.newobject (1 samples, 0.03%)</title><rect x="112.7" y="197" width="0.3" height="15.0" fill="rgb(210,215,52)" rx="2" ry="2" />
<text  x="115.72" y="207.5" ></text>
</g>
<g >
<title>runtime.runqgrab (2 samples, 0.05%)</title><rect x="248.0" y="245" width="0.6" height="15.0" fill="rgb(212,3,2)" rx="2" ry="2" />
<text  x="251.00" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (2 samples, 0.05%)</title><rect x="16.3" y="197" width="0.6" height="15.0" fill="rgb(219,184,16)" rx="2" ry="2" />
<text  x="19.26" y="207.5" ></text>
</g>
<g >
<title>time.(*Timer).Stop (2 samples, 0.05%)</title><rect x="109.6" y="277" width="0.6" height="15.0" fill="rgb(235,43,44)" rx="2" ry="2" />
<text  x="112.59" y="287.5" ></text>
</g>
<g >
<title>runtime.findrunnable (7 samples, 0.19%)</title><rect x="247.7" y="277" width="2.2" height="15.0" fill="rgb(221,53,4)" rx="2" ry="2" />
<text  x="250.69" y="287.5" ></text>
</g>
<g >
<title>runtime.chansend.func1 (1 samples, 0.03%)</title><rect x="215.4" y="261" width="0.3" height="15.0" fill="rgb(254,14,43)" rx="2" ry="2" />
<text  x="218.44" y="271.5" ></text>
</g>
<g >
<title>github.com/marten-seemann/qtls.(*xorNonceAEAD).Overhead (2 samples, 0.05%)</title><rect x="118.7" y="245" width="0.6" height="15.0" fill="rgb(238,72,32)" rx="2" ry="2" />
<text  x="121.67" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1 samples, 0.03%)</title><rect x="82.7" y="165" width="0.3" height="15.0" fill="rgb(206,77,44)" rx="2" ry="2" />
<text  x="85.65" y="175.5" ></text>
</g>
<g >
<title>runtime.(*timersBucket).deltimerLocked (1 samples, 0.03%)</title><rect x="109.6" y="229" width="0.3" height="15.0" fill="rgb(242,136,7)" rx="2" ry="2" />
<text  x="112.59" y="239.5" ></text>
</g>
<g >
<title>runtime.funcPC (2 samples, 0.05%)</title><rect x="716.8" y="197" width="0.6" height="15.0" fill="rgb(230,26,37)" rx="2" ry="2" />
<text  x="719.81" y="207.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (2 samples, 0.05%)</title><rect x="16.3" y="181" width="0.6" height="15.0" fill="rgb(214,19,52)" rx="2" ry="2" />
<text  x="19.26" y="191.5" ></text>
</g>
<g >
<title>runtime.send (1 samples, 0.03%)</title><rect x="111.8" y="133" width="0.3" height="15.0" fill="rgb(219,97,43)" rx="2" ry="2" />
<text  x="114.78" y="143.5" ></text>
</g>
<g >
<title>runtime.lock (2 samples, 0.05%)</title><rect x="985.2" y="261" width="0.6" height="15.0" fill="rgb(237,79,41)" rx="2" ry="2" />
<text  x="988.19" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*framerI).AppendStreamFrames (8 samples, 0.21%)</title><rect x="111.5" y="245" width="2.5" height="15.0" fill="rgb(248,33,14)" rx="2" ry="2" />
<text  x="114.46" y="255.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go/internal/ackhandler.(*sentPacketHandler).sentPacketImpl (3 samples, 0.08%)</title><rect x="182.9" y="261" width="0.9" height="15.0" fill="rgb(221,199,17)" rx="2" ry="2" />
<text  x="185.87" y="271.5" ></text>
</g>
<g >
<title>runtime.aeshashbody (1 samples, 0.03%)</title><rect x="210.7" y="181" width="0.4" height="15.0" fill="rgb(234,67,34)" rx="2" ry="2" />
<text  x="213.74" y="191.5" ></text>
</g>
<g >
<title>syscall.Recvfrom (173 samples, 4.59%)</title><rect x="14.7" y="245" width="54.2" height="15.0" fill="rgb(227,79,0)" rx="2" ry="2" />
<text  x="17.70" y="255.5" >sysca..</text>
</g>
<g >
<title>sync.(*Map).Load (3 samples, 0.08%)</title><rect x="207.9" y="181" width="1.0" height="15.0" fill="rgb(219,35,10)" rx="2" ry="2" />
<text  x="210.92" y="191.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).WriteByte (1 samples, 0.03%)</title><rect x="116.8" y="213" width="0.3" height="15.0" fill="rgb(253,198,8)" rx="2" ry="2" />
<text  x="119.79" y="223.5" ></text>
</g>
<g >
<title>runtime.walltime (1 samples, 0.03%)</title><rect x="13.1" y="261" width="0.3" height="15.0" fill="rgb(205,66,11)" rx="2" ry="2" />
<text  x="16.13" y="271.5" ></text>
</g>
<g >
<title>github.com/lucas-clemente/quic-go.(*packetHandlerMap).handlePacket (11 samples, 0.29%)</title><rect x="10.0" y="309" width="3.4" height="15.0" fill="rgb(233,13,47)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>runtime.ready (1 samples, 0.03%)</title><rect x="111.8" y="69" width="0.3" height="15.0" fill="rgb(220,53,17)" rx="2" ry="2" />
<text  x="114.78" y="79.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.03%)</title><rect x="10.0" y="245" width="0.3" height="15.0" fill="rgb(208,164,46)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>runtime.entersyscallblock_handoff (7 samples, 0.19%)</title><rect x="59.5" y="165" width="2.2" height="15.0" fill="rgb(245,107,21)" rx="2" ry="2" />
<text  x="62.48" y="175.5" ></text>
</g>
<g >
<title>github.com/golang/protobuf/proto.(*marshalInfo).marshal (1 samples, 0.03%)</title><rect x="205.4" y="197" width="0.3" height="15.0" fill="rgb(220,154,50)" rx="2" ry="2" />
<text  x="208.41" y="207.5" ></text>
</g>
<g >
<title>time.now (4 samples, 0.11%)</title><rect x="200.7" y="293" width="1.3" height="15.0" fill="rgb(234,29,47)" rx="2" ry="2" />
<text  x="203.72" y="303.5" ></text>
</g>
<g >
<title>runtime.unlock (1 samples, 0.03%)</title><rect x="215.4" y="245" width="0.3" height="15.0" fill="rgb(209,179,35)" rx="2" ry="2" />
<text  x="218.44" y="255.5" ></text>
</g>
<g >
<title>crypto/aes.(*gcmAsm).Open (1 samples, 0.03%)</title><rect x="72.6" y="229" width="0.3" height="15.0" fill="rgb(239,155,15)" rx="2" ry="2" />
<text  x="75.63" y="239.5" ></text>
</g>
<g >
<title>runtime.goready (2 samples, 0.05%)</title><rect x="77.3" y="133" width="0.7" height="15.0" fill="rgb(232,223,52)" rx="2" ry="2" />
<text  x="80.33" y="143.5" ></text>
</g>
<g >
<title>runtime.deferreturn (1 samples, 0.03%)</title><rect x="120.2" y="181" width="0.3" height="15.0" fill="rgb(219,98,37)" rx="2" ry="2" />
<text  x="123.23" y="191.5" ></text>
</g>
<g >
<title>runtime.lock (1 samples, 0.03%)</title><rect x="251.1" y="277" width="0.3" height="15.0" fill="rgb(233,159,33)" rx="2" ry="2" />
<text  x="254.14" y="287.5" ></text>
</g>
<g >
<title>time.now (2 samples, 0.05%)</title><rect x="115.8" y="197" width="0.7" height="15.0" fill="rgb(253,145,5)" rx="2" ry="2" />
<text  x="118.85" y="207.5" ></text>
</g>
</g>
</svg>

